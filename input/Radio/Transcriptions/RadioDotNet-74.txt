0.00 12.16 "Анатолий Кулаков" Здравствуйте дорогие друзья, в эфире Radio.net выпуск номер семьдесят четыре.
12.16 16.56 "Анатолий Кулаков" В студии для вас как всегда Анатолий Кулаков и Игорь Лабутин.
16.56 17.56 "Анатолий Кулаков" Всем привет.
17.56 20.32 "Анатолий Кулаков" И зацените наш обновленный список помогаторов.
20.32 29.24 "Анатолий Кулаков" Александр, Сергей, Владислав, Алексей, Шевченко, Антон, Лазарев, Илья, Гурий, Самарин, Виктор, Руслан, Артамонов, Александр, Ерыгин, Белоцкий, Евгений.
29.24 33.60 "Анатолий Кулаков" Друзья, большое спасибо всем, кто нам помогает и также кто остался неназванным.
33.60 40.88 "Анатолий Кулаков" И большое спасибо, что слушаете нас, репостите, рассказываете друзьям и помогаете всячески распространить и популяризировать наш подкастик.
40.88 43.08 "Анатолий Кулаков" Нам от этого очень-очень приятно.
43.08 44.08 "Анатолий Кулаков" Большое спасибо всем.
44.08 48.04 "Анатолий Кулаков" Что ж, и с тем, и с тем, и с тем.
48.04 55.04 "Анатолий Кулаков" Давай начнем прежде всего с хорошей темы, в том, что наконец-то на нашу любимую конференцию .next открылись билеты.
55.04 58.56 "Анатолий Кулаков" Можно теперь купить билетик.
58.56 66.44 "Анатолий Кулаков" И специально для слушателей нашего подкаста у нас есть промокод, который дает вам довольно приличную скидочку.
66.44 73.64 "Анатолий Кулаков" Зайдите, если вы будете покупать персональный билет, то зайдите в комментарии к этому выпуску и поищите промокод.
73.64 81.00 "Анатолий Кулаков" И если вдруг не купили билет, а всегда ждали или чего-то ждали и как хотели и надеялись, что будет какой-то знак, то вот это он.
81.00 85.44 "Анатолий Кулаков" Напомню, что конференция .next состоится 15-16 сентября в Москве.
85.44 87.16 "Анатолий Кулаков" Также будет онлайн-трансляция.
87.16 102.56 "Анатолий Кулаков" Конечно, если есть возможность, лучше подключайтесь, потому что там будет стандартный хороший формат, два дня, несколько треков, много участников, пикеры как старые матерые, так и новые интересные.
102.56 108.44 "Анатолий Кулаков" В общем, все, что мы любим на конференции, все там планируется снова быть.
108.44 110.76 "Анатолий Кулаков" Мы с Игорем обязательно будем тоже.
110.76 115.16 "Анатолий Кулаков" И я не знаю, будут у нас какие-нибудь активности от радио?
115.16 116.72 "Анатолий Кулаков" Что-то я как-то не думал.
116.72 123.80 "Игорь Лабутин" Да и мы пока не думали, слушай, еще 2,5 месяца, можно еще 2 месяца ничего не делать, а потом за 2 недели что-нибудь придумать.
123.80 125.80 "Игорь Лабутин" Как настоящие спикеры, да, матерые?
125.80 131.24 "Игорь Лабутин" Конечно, как мы обычно делаем весь офлайн, в последний момент будем лететь в Москву, что-нибудь придумаем.
131.24 139.00 "Игорь Лабутин" Да не, ближе к делу, я думаю, подумаем, пока действительно планов нет, ну, точнее, планы есть, что мы там будем, а дальше посмотрим, как пойдет.
139.00 148.60 "Анатолий Кулаков" Да, новостей много, есть про что и рассказать, и обсудить, и в частности, давай начнем с новостей, что у нас там по новому превью в дотнет?
148.60 155.48 "Игорь Лабутин" Так, новый превью, новый превью номер 5 уже, сейчас у нас идет, что у нас, июль у нас.
155.48 156.48 "Анатолий Кулаков" Приближаемся, да, приближаемся.
156.48 167.12 "Игорь Лабутин" Да, я думаю, что мы еще парочку превью, наверное, успеем, а потом начнутся релиз кандидаты, ну, хотя Майкрософт иногда выдает много и частых превью, так что посмотрим.
167.12 170.88 "Игорь Лабутин" Тем не менее, давайте посмотрим, что же нам завезли в пятом превью.
170.88 177.00 "Игорь Лабутин" В основной части про сам дотнет довольно много изменений в SDK.
177.00 191.48 "Игорь Лабутин" Во-первых, мы, по-моему, в прошлый или в позапрошлый раз, я не помню, в смысле, в прошлом или в позапрошлом превью рассказывали про новый Metrics API, который позволяет нам правильно создавать метрики, согласно всем, значит, стандартному опыту телеметрии, вот этому всему.
191.48 219.12 "Игорь Лабутин" Вот теперь добавили новый интерфейсик под названием IMetroFactory, и тем самым метрики стали то, что они называют DI-friendly, то есть вы теперь можете зарегать этот IMetroFactory в ваш Service Collection и в нужном месте просто заинжектить его как очередную зависимость и создавать нужные, значит, вам метры таким образом, без использования каких-нибудь статик, мемберов или еще чего-то подобного.
219.12 249.40 "Игорь Лабутин" Кроме того, добавили возможность создавать метры сразу с тегами, то есть вы не просто в измерение будете добавлять теги, а прямо на метр навешиваете тег сразу в момент создания, и все измерения, которые этот метр, соответственно, будет репортить, будут содержать этот тег, что позволит вам потом классифицировать все ваши, значит, счетчики, так как нужно на стране уже, там, кого вы там будете, Prometheus или где вы будете все это хранить или смотреть.
249.40 250.92 "Игорь Лабутин" Дальше, SourceLink.
250.92 276.44 "Игорь Лабутин" SourceLink — это довольно древняя, ну, древняя, наверное, неправильно говорить, но довольно давняя технология, которая позволяет удобно отлаживаться, и для того, чтобы включить или подключить SourceLink в тех библиотеках, которые вы делаете, в тех Nuget пакетах, которые вы делаете, нужно было раньше референсить специальный пакетик, который включал там некоторую магию, из которой получались нужные файлики, которые необходимы для SourceLink.
276.44 287.40 "Игорь Лабутин" Теперь это неотъемлемая часть SDK, теперь не нужно ничего референсить, соответственно, станет проще, и сделано это было с целью, чтобы как можно больше разработчиков этот самый SourceLink использовали.
287.40 291.92 "Анатолий Кулаков" Погоди, а теперь он как, в каждом билде будет собирать SourceLink-овые пакеты?
291.92 306.36 "Игорь Лабутин" Нет, там же, если я правильно помню, нужно было зареференсить специальный Nuget пакет и добавить опцию в C-Sproj, чтобы для твоего, при сборке, соответственно, Nuget пакета нужно была собралась SourceLink-информация.
306.36 311.00 "Игорь Лабутин" Вот сейчас, я так понимаю, достаточно опции в C-Sproj, не нужно делать package-reference.
311.00 313.52 "Анатолий Кулаков" Ну, ладно, допустим.
313.52 319.12 "Игорь Лабутин" То есть это все еще opt-in, то есть не так, что у тебя по дефолту теперь всегда собирается SourceLink.
319.12 324.00 "Игорь Лабутин" Нет, такого нет, но не нужно референсить какой-то левый пакет, про который нужно еще знать.
324.00 337.44 "Игорь Лабутин" Дальше, появилось некоторое количество новых аналайзеров, они появляются довольно регулярно, они довольно частные, то есть они будут вдаваться в детали, что конкретно, но посмотрите, обычно они, понятно, про какие-то новые фичи, новые интерфейсы и так далее.
337.44 343.00 "Игорь Лабутин" Linux SDK для .NET теперь позволяет собирать self-contained приложения.
343.00 357.20 "Игорь Лабутин" Тут у них была какая-то очень большая работа с RedHat совместно, причем надо понимать, что линуксовая SDK это тот самый то, что называется SourceBuild SDK, то есть SDK, собранный не поставляемым Microsoft, а собранный из сорцов, которые лежат на GitHub.
357.20 373.12 "Игорь Лабутин" То есть вот они с RedHat работали над тем, чтобы тот SDK, который получился в результате такой сборки, мог собирать self-contained приложения, то есть внутрь ваших приложений, ну, точнее в output ваших приложений, закидывать кусочки, нужные кусочки SDK.
373.12 374.12 "Анатолий Кулаков" Это теперь работает.
374.12 379.80 "Анатолий Кулаков" Что там специфика self-contained именно на линуксе, что это пришлось как-то так долго ждать?
379.80 394.20 "Игорь Лабутин" Там есть, во-первых, какие-то тонкости с тем, что есть модули, которые поставляются, собственно, ну вот эти модули, которые собираются из исходников, они какие-то немножко другие в сравнении с тем, которые поставляются в натуральном SDK, так скажем, который у тебя там на винт-деребь, на маке стоит.
394.20 396.60 "Анатолий Кулаков" И это помешало им строиться в один бинарник?
396.60 398.24 "Игорь Лабутин" Ну да, что-то им там мешало.
398.24 415.12 "Игорь Лабутин" Вот, я не вдавался сильно в детали, честно скажу, я на линуксе особо не работаю, особенно в плане там собирать SDK на линуксе, поэтому сильно не вдавался в детали, но если вы вдруг хотели собирать на линуксе с помощью линуксового SDK self-contained dotnet приложения, теперь можно.
415.12 430.48 "Игорь Лабутин" С другой стороны, раньше, если вы при паблише приложения указывали конкретный рантайм, то есть указывали ключик минус-минус рантайм, либо минус R, по-моему, ее сокращенная версия, то автоматически у вас включался ключик self-contained.
430.48 435.20 "Игорь Лабутин" Ну вот так вот нужно было по каким-то одному Microsoft ведовым причинам.
435.20 436.84 "Игорь Лабутин" Теперь это тоже не правда.
436.84 441.24 "Игорь Лабутин" Если вы указываете теперь специфичный рантайм, это не значит, что ваше приложение будет self-contained.
441.24 444.80 "Игорь Лабутин" Нужно отдельно указать ключик self-contained дополнительно.
444.80 456.36 "Игорь Лабутин" Это в каком-то смысле breaking change, то есть если вы проапдейтитесь на последний превью и вы указывали раньше только рантайм, и ваше приложение собирал как self-contained, теперь больше не будет.
456.36 457.96 "Игорь Лабутин" Нужно указать теперь это явно.
457.96 458.96 "Игорь Лабутин" Дальше.
458.96 467.88 "Игорь Лабутин" У нас уже есть несколько разных вариантов Docker images с .NET, с ASP.NET.
467.88 478.92 "Игорь Лабутин" Мы рассказывали про базовые образы, мы рассказывали про обычные в смысле образы, потом были так называемые chiseled, то есть те, которые сокращенные, урезанные, что ли.
478.92 481.80 "Анатолий Кулаков" Да, мегаурезанные, которые все лишнее убрали.
481.80 488.40 "Игорь Лабутин" Теперь у нас есть еще Alpine, ASP.NET, Docker Composite Images, то есть композитные имиджи.
488.40 508.32 "Игорь Лабутин" Там смысл в том, что они делают их с помощью технологии ready to run, то есть предкомпилированный или готовый лежащий нативный код для работы.
508.32 519.56 "Игорь Лабутин" При этом они композитные, потому что они берут несколько сборок, ну обычных, т.е. .dll, чего вы хотите, и компилируют в единый бинарник ready to run.
519.56 542.12 "Игорь Лабутин" То есть это такой, не каждая сборка в свой бинарник, и потом чексумы сравнивать каждой сборке, а для видимо для основного ASP.NET, для runtime, для ASP.NET сборок, они их всех компилируют в один большой, ну или в несколько больших ready to run бинарничков, которые потом используются за счет того, что они компилируются в несколько больших бинарничков.
542.12 546.80 "Игорь Лабутин" Эти бинарнички на самом деле занимают меньше места, потому что метаданные не дублируются и вот это все.
546.80 558.32 "Игорь Лабутин" И за счет этого достигается, как они говорят, баланс собственно размера, скорости стартапа, но при этом это все еще не native out, в том смысле, что там работает рефлей, акшен, там все полностью работает.
558.32 559.32 "Игорь Лабутин" Так что…
559.52 565.72 "Анатолий Кулаков" Так это же звучит как self-contained, когда берутся несколько сборочек и собираются в один бинарничек.
565.72 575.80 "Игорь Лабутин" Не, погоди, self-contained это просто у тебя оно лежит сборочек несколько в одном файлике, но при этом при стартапе все равно будет все джититься с нуля.
575.80 579.76 "Анатолий Кулаков" Ну хорошо, а это self-contained, который немножко проджитился, сделался ready to run.
579.76 587.88 "Игорь Лабутин" В готовом докер образе, который ты можешь взять в качестве базового имиджа, и весь у тебя ASP.NET условно говоря будет уже за ready to run.
587.88 591.64 "Анатолий Кулаков" Так, а почему тогда для этого понадобился композит имидж?
591.64 599.32 "Анатолий Кулаков" То есть нельзя ли было при постройке самого приложения запустить его в ready to run, собрать это все в один бинарничек и все?
599.32 601.88 "Анатолий Кулаков" Почему это нельзя было сделать на стандартном альпайным имидже?
601.88 603.28 "Анатолий Кулаков" Зачем тебе композит альпайным имидж?
603.28 607.52 "Игорь Лабутин" Можно сделать на стандартном, но это увеличение времени сборки, ready to run все-таки не бесплатен.
607.52 612.36 "Анатолий Кулаков" То есть они преджители ASP, наверное, да, сборки?
612.36 616.76 "Анатолий Кулаков" Поэтому смогли сделать базовый имидж с преджителем ASP, грубо говоря.
616.76 629.96 "Игорь Лабутин" Грубо говоря, да, при том, что понятно, что условно говоря свои файлики у тебя технически могут как-то может быть меняться, не меняться, ну не знаю, понятно, что в докер образе уже ничего не будет меняться, но в ASP точно не будет меняться.
629.96 636.52 "Игорь Лабутин" Ты взял базовый образ, вот в нем что-то есть, милое дело его за ready to run-ить, рядом с ним и положить.
636.52 640.72 "Анатолий Кулаков" Скорее всего они это сделали для того, чтобы быстрее запускали ASP-ные приложения?
640.72 641.72 "Анатолий Кулаков" Ну конечно.
641.72 644.00 "Анатолий Кулаков" А какие-нибудь цифры, бенчмарки есть?
644.00 652.64 "Игорь Лабутин" Нет, ну там какие-то есть, но без каких-то прям супер деталей, там как обычно на пустых контейнерах какие-то бенчмарки, ну такое.
652.64 660.04 "Игорь Лабутин" Не знаю, я бы подождал немножко, потому что только-только вышел превью, я бы подождал реальных чиселок, отзывов от других, кого-нибудь.
660.04 670.28 "Анатолий Кулаков" Ну ладно, просто если мы там про чисел бы говорили, то там сразу видно, что сборки сравнялись, прям дистрибутивы сравнялись с Alpine-ом и было понятно, зачем люди загонялись.
670.28 676.40 "Анатолий Кулаков" А здесь кажется ready to run чисто на ASP-net, на половинку отжитить, ну что-то как-то.
676.40 678.80 "Игорь Лабутин" Должна быть погрешность, просто верификунка и всё.
678.80 682.68 "Игорь Лабутин" Ну, давай ради интереса я сейчас могу быстренько глянуть, может быть я что-то пропустил.
682.68 685.76 "Анатолий Кулаков" Да нет, сейчас не обязательно, давай подождём хотя бы
685.76 692.08 "Игорь Лабутин" релиза. Не, ну кстати в релиз статьи вообще не это самое, нет чиселок.
692.08 693.08 "Игорь Лабутин" Так что...
693.08 698.00 "Анатолий Кулаков" Ну хорошо, давай ждать и посмотрим, а что это вынесло.
698.00 699.48 "Игорь Лабутин" Да, подождём и посмотрим.
699.48 700.48 "Игорь Лабутин" Давай дальше.
700.48 714.88 "Игорь Лабутин" Всякие оптимизации вокруг Arma 64, оптимизация доступа к ThreadStatic, то есть если вы используете ThreadStatic, то на пятом превью станет ещё быстрее.
714.88 724.44 "Игорь Лабутин" И Profile Guides Optimization включена по дефолту теперь везде и всегда, можно выключить, указав ключик "TiredPgoFalse" в CSS-продже.
724.44 733.28 "Игорь Лабутин" А так у вас всё будет профайлиться в момент выполнения и всяческие опции, правильно, перекомпилироваться по мере необходимости.
733.28 735.64 "Анатолий Кулаков" Ну то есть по идее должно быть быстрее.
735.64 750.60 "Игорь Лабутин" Ну да, эта штука давным-давно можно было включить явно, я так понимаю, что сейчас команда стала достаточно уверенной в качестве работы, чтобы включать теперь всем и это не приводило к каким-то странным падениям на странных кейсах.
750.60 751.60 None Так, SPNet.
751.60 758.08 "Игорь Лабутин" В SPNet завезли довольно интересные штуки местами.
758.08 765.64 "Игорь Лабутин" Во-первых, вещь, которой мне, например, очень давно не хватало, это Improved, то, что они называют Debugging Experience.
765.64 766.64 "Игорь Лабутин" То есть что они сделали?
766.64 774.16 "Игорь Лабутин" Они на самом деле для HTTP Context, HTTP Request, HTTP Response и Claims Principle для этих четырёх классов написали нормальные дебаггеры-визуалайзеры.
774.16 776.92 "Игорь Лабутин" Или как это правильно называется, я уж не помню.
776.92 792.44 "Игорь Лабутин" Короче, штука, которая позволяет в студии не показывать, так сказать, в атлатчике нативное представление объекта по полям, а показывает некоторую сокращенную строчку, которая описывает основное содержимое, так скажем.
792.44 798.04 "Игорь Лабутин" Теперь, если вы смотрите, если у вас есть переменная типа HTTP Request, так там прям будет видно написано, что это за реквест.
798.04 802.64 "Игорь Лабутин" Если там переменная HTTP Response, там будет написано там код респонса и так далее.
802.64 817.92 "Игорь Лабутин" То есть стало приятно, если мы смотрим на Claims, ну в Claims будет видно, какие Claims там написаны, а не просто, что это innumerable, который нужно раскрыть, тебя еще какой-нибудь там warning выдаст, что типа сейчас это приведет к evaluation, ну и все.
817.92 818.92 "Анатолий Кулаков" Короче.
818.92 828.36 "Анатолий Кулаков" Ну да, это всегда приятно, потому что обычно пишутся просто какие-то названия типовые, которые вам обычно не говорят ничего полезного, все равно приходится идти и раскрывать.
828.36 833.08 "Анатолий Кулаков" А так ты прям одним обзором видно очень много полезной информации.
833.08 845.80 "Игорь Лабутин" Ну вот пока не попробуешь, не поймешь, насколько она там конкретно полезна в каждом конкретном случае, но понятно, что приятно видеть, что когда у тебя написано что-то по респонсу 200 ок, или 500, и ты уже по крайней мере понимаешь, что там окей респонс или не окей.
845.80 850.16 "Игорь Лабутин" В разделе Servers and Middleware появились следующие штуки.
850.16 854.72 "Игорь Лабутин" Во-первых, появился интерфейс IHTTP SysRequestTimingFeature.
854.72 871.16 "Игорь Лабутин" Если вы каким-то образом хотите очень детально рассматривать, как ваш реквест путешествовал по вашему приложению, и выяснять таймстемпы, когда там что внутри драйвера что-то по сис обрабатывалось, ну пожалуйста, вот через этот интерфейс можно это сделать.
871.16 873.76 "Игорь Лабутин" Зачем вам это может быть надо, не очень понятно, но есть.
873.76 887.68 "Игорь Лабутин" Дальше, если вы хотите залезать в дебри ТЛСа, то в ТЛС-хендшейке есть такой кусочек, когда клиент предоставляет свой так называемый SNI HostName.
887.68 895.28 "Игорь Лабутин" Что-то я не помню, забыл как это вылетело из головы, то ли ServerNameIdentification, что-то такое не помню.
895.28 900.92 "Игорь Лабутин" Теперь этот SNI HostName можно получить через интерфейс ITLS Handshake Feature.
900.92 904.96 "Игорь Лабутин" И третий интерфейс, который добавили это IExceptionHandler.
904.96 909.84 "Игорь Лабутин" Как вы знаете, у нас есть дефолтный middleware, который будет ловить все эксепшены, ну если вы его подключите.
909.84 927.48 "Игорь Лабутин" Все эксепшены, которые происходят у вас в реквест пайплайне и выдавать красивую, ну не очень красивую, собственно на ответ, в зависимости от того, девелопер или не девелопер у вас, Environment Pro, то что там все плохо, все произошло не так и вот вам 500.
927.48 944.80 "Игорь Лабутин" Теперь есть новый интерфейс, называется IExceptionHandler, который будет дергаться этой самой middleware, если вы хотите зарегистрировать какую-то кастомную обработку, но оставить ответ на вот этом стандартном middleware, то регистрируйте этот интерфейс, добавляйте кастомную обработку дополнительную.
944.80 972.88 "Игорь Лабутин" В SignalARIA теперь поддерживается, как они называют, Seamless Reconnect, то есть абсолютно незаметно реконект, ну понятно, что он будет не сильно, он все равно будет заметен и для его включения нужно поставить опцию Use Aux в True, но я так понимаю, что они по большому счету просто держат какой-то Keep Live внутри и соответственно довольно прозрачно понимают, когда канал упал, не в момент, когда вы делаете вызов, а чуть раньше понимая, что канал упал, надо переконектиться.
972.88 1012.36 "Игорь Лабутин" Blazor, в Blazor добавили новый теплейт, называется это Blazor Web App, он подходит и для сервер-сайта, и для клиент-сайта рендеринга, по дефолту сервер-сайт, вместе с ним добавили, улучшили точнее раутер Blazor, который заинтегрировали с ISPNet Endpoint Routing, соответственно вот этот самый раутер в Blazor умеет раутить и компоненты, ну точнее раутинг в эти самые компоненты работает и в сервер-сайте, и в клиент-сайте абсолютно одинаково, причем он нормально понимает, что это маршрут внутри вашего приложения, или это маршрут к какому-то IP, IP-Endpoint, и тогда отдаёт работу Endpoint-раутингу.
1012.36 1037.56 "Игорь Лабутин" По... по... по... по... по... да, WebSill файлы, это те самые длельки, которых пришлось поменять расширение, потому что антивирусы ругаются скачивая в Wasm файлы, они улучшили WebSill формат, добавив стандартный VBSamble в wrapper, непонятно почему стандартный VBSamble в wrapper для VBSamble не был добавлен раньше, но вот каким-то образом улучшили.
1037.56 1067.84 "Игорь Лабутин" Дженерик-атрибуты, поскольку теперь появились в языке эту часть атрибутов в SPNet, те, которые требуют указания типов, переписали на использование дженерик-атрибутов, в Native OAuth, как вы знаете, мы по-моему про это рассказывали, сейчас идёт некоторая работа по тому, чтобы сделать SPNet-приложение совместимыми с Native OAuth, там довольно много Reflection используется и так далее, поэтому не так легко это сделать, там довольно агрессивный тримминг, поэтому по дефолту Native OAuth так просто с SPNet не работает.
1067.84 1079.04 "Игорь Лабутин" Ну вот, тихонечку дело движется, теперь для Minimal API поддерживается аннотация S-параметры, которая теперь тоже будет работать в режиме Native OAuth.
1079.04 1100.32 "Игорь Лабутин" И изменения есть в аутентификации и авторизации, во-первых, в React и в Angular-темплейдах нет больше зависимости на Identity Server, там теперь используются обычные User Accounts, Cookie Authentication и обычные SPNet Identity UI.
1100.32 1112.28 "Игорь Лабутин" Если вам нужно, берёте, тогда есть темплейды от самого Duendo Identity Server, где есть базовое дотальное приложение с Identity Server.
1112.28 1123.04 "Игорь Лабутин" И есть там, тоже добавили пачку аналайзеров, которые позволяют правильно, вокруг Authorization Builder, подсказывают как правильно использовать Authorization Builder, когда вы собираете всякие разные политики.
1123.04 1131.12 "Игорь Лабутин" В этот раз не было никакой новости про Entity Framework, там видимо планомерно идёт какая-то работа, про которую они...
1131.12 1142.56 "Игорь Лабутин" Как-то мне кажется, вообще последние два, наверное, релиза в целом, вот больших, и восьмёрка и семёрка, EF команда как-то не сильно много пишет таких статей, как мы сделали то и то.
1142.56 1143.56 "Игорь Лабутин" Не знаю почему.
1143.56 1146.56 "Анатолий Кулаков" Подрасслабились, так, может писать ни о чём просто.
1146.56 1155.68 "Игорь Лабутин" Ну может, не о чём, может они как-то делают какие-то слишком внутренние штуки, про которые сильно хорошо не напишут, может некому писать, и никто не пишет в итоге.
1155.68 1161.84 "Игорь Лабутин" Но как-то вот раньше у нас, я помню, что, не знаю, года полтора назад мы EF в каждом таком превью обсуждали, а сейчас чё-то нема.
1161.84 1162.84 "Игорь Лабутин" Зато есть Maui.
1162.84 1178.08 "Игорь Лабутин" Но про него очень маленький кусочек, это как у них написано "It's another quality-focused update", то есть очередной апдейт чисто про качество, то есть чё-то там они в скроллинге улучшили, какие-то в тестике получали, ну и очередные performance improvements.
1178.08 1182.88 "Игорь Лабутин" Такое ощущение, что там как бы всё дико тормозило, потому что каждый превью у них там performance improvements в разных частях.
1182.88 1189.60 "Игорь Лабутин" Но в целом, вот такие дела, так выглядит Dota 2.8 превью 5, можно качать, пользоваться.
1189.60 1196.04 "Анатолий Кулаков" Опять мы видим, который раз превью, в котором нет нормальных изменений по C#, заметь.
1196.04 1206.48 "Игорь Лабутин" Да, C#, либо что опять же, они сейчас работают над чем-то большим, чтобы успеть в восьмёрку таки включить какую-нибудь большую крутую фичу.
1206.48 1208.56 "Анатолий Кулаков" Ну потому что в восьмёрке нет никаких пока крутых
1208.56 1210.56 "Игорь Лабутин" фич. Ну да, там какая-то мелочь, мне кажется.
1210.56 1211.56 "Игорь Лабутин" Посмотрим, посмотрим, будем надеяться.
1211.56 1221.92 "Анатолий Кулаков" Хорошо, да, будем ждать и надеяться, что всё-таки допили до релиза что-нибудь интересное, сладенькое, чем можно будет в следующий год радоваться.
1221.92 1222.92 "Анатолий Кулаков" Пойдём дальше.
1222.92 1232.76 "Анатолий Кулаков" А дальше можно поговорить про другой интересный компаний, который выпускает другие интересные редакторы, это компания JetBrains.
1232.76 1246.68 "Анатолий Кулаков" И JetBrains анонсировал, что во все свои дверешки включил и ассистент, то есть некого ассистента, который позволяет вам с помощью искусственного интеллекта помогать вам в вашей разработке.
1246.68 1263.88 "Анатолий Кулаков" Ну, наверное, новость ожидаемая, потому что уже давно Microsoft как бы вовсю внедряет не только в инструменты разработки, но и во все свои офисные продукты, и в операционные системы, и в облака, и куда только ни попадя этот искусственный интеллект.
1263.88 1269.44 "Анатолий Кулаков" И JetBrains здесь, наверное, как раз выступает в роли догоняющих, что для них не свойственно.
1269.44 1271.36 "Анатолий Кулаков" Посмотрим, посмотрим, как у них получилось.
1271.36 1278.84 "Анатолий Кулаков" Вот, наконец-то, вышел первый релиз, это релиз 2023.2, в котором у нас появился некий ассистент.
1278.84 1284.36 "Анатолий Кулаков" Ничего концептуально революционного здесь не было изобретено.
1284.36 1288.64 "Анатолий Кулаков" То есть это такой же чатовое окошко, как, наверное, многие из вас уже привыкли.
1288.64 1293.88 "Анатолий Кулаков" Немножко больше интеграции, безусловно, чем просто какая-то отдельная вкладка в браузере.
1293.88 1300.72 "Анатолий Кулаков" Немножко больше интеграции в СДЕ есть, но, опять же, хотелось от инноваторов каких-то инноваций.
1300.72 1302.36 "Анатолий Кулаков" Давайте посмотрим, что получилось.
1302.36 1318.44 "Анатолий Кулаков" Прежде всего, как я уже сказал, интеграция, окошко с чатом, которое признано для того, чтобы отвечать на всякие вопросы программистов, устранять какие-то стандартные проблемы, помогать с рефакторингом документации и во все всячески помогать разработчику в его повседневной жизни.
1318.44 1331.00 "Анатолий Кулаков" Аи-ассистент поддерживается как в ReSharper, так и в Rider, так и в других EDE от JetBrains, но нас интересуют как раз таки именно ReSharper с Rider.
1331.00 1339.32 "Анатолий Кулаков" Прежде всего, когда вы первый раз запустите этого ассистента, он попросит вас отдельно залогиниться в некий JetBrains AI-сервис.
1339.32 1353.44 "Анатолий Кулаков" То есть, кроме того, что у вас должен быть JetBrains-овский аккаунт, я так понимаю, здесь нужен дополнительный аккаунт в JetBrains AI-сервисе для того, чтобы, наверное, какие-то дополнительные лицензионные соглашения с вами согласовать и о чем-то вам вас предупредить и как-то вас контролировать.
1353.44 1363.16 "Анатолий Кулаков" Сейчас эта фишка находится в превью, в раннем доступе, и на данном этапе она будет ограничена по числу пользователей.
1363.16 1370.52 "Анатолий Кулаков" Поэтому не удивляйтесь, если вдруг вас сразу не пустят, значит вас добавили в какой-нибудь waitlist и там вы будете ожидать своей очереди.
1370.52 1378.04 "Анатолий Кулаков" И также в превью отмечается, что в превью эта функциональность она будет бесплатной.
1378.04 1390.04 "Анатолий Кулаков" В будущем компания пересмотрит эту позицию, эту политику, не знаю, может быть, какой-то отдельный тариф будет или как-то будет включено или тарифы повышены или останется бесплатным, то есть это пока неизвестно.
1390.04 1396.80 "Анатолий Кулаков" Вполне может быть, что придется каким-то образом дополнительно за это доплачивать, за нашего искусственного интеллекта.
1396.80 1408.32 "Анатолий Кулаков" И еще одно интересное ограничение, которое говорит, что вот этот JetBrains AI-сервис, он работает только в тех странах, в которых поддерживается OpenAI.
1408.32 1413.96 "Анатолий Кулаков" То есть здесь сразу очевидным становится, что это не какое-то изобретение JetBrains.
1413.96 1420.84 "Анатолий Кулаков" Они все-таки не написали свою модельку, не собрали свой большой датасет с миллиардами параметров.
1420.84 1427.20 "Анатолий Кулаков" Они воспользовались API стандартного ChargePT, который представляет OpenAI.
1427.20 1431.36 "Анатолий Кулаков" Или может быть Copilot, не суть важно.
1431.36 1434.32 "Анатолий Кулаков" В общем движок под капотом от OpenAI получается.
1434.32 1439.68 "Анатолий Кулаков" И так, в чем же состоит интеграция?
1439.68 1457.60 "Анатолий Кулаков" Как я уже сказал, как только вы залогинитесь в специальный сервис, откроется окно с чатиком прямо внутри вашей IDE, и это окно с чатиком, оно уже будет учитывать то, какой у вас проект, какой язык используется, какие технологии вы сейчас используете, может быть референсы, фреймворки.
1457.60 1463.36 "Анатолий Кулаков" Про все это оно будет знать и каким-то образом учитывать во всех ваших вопросах.
1463.36 1472.28 "Анатолий Кулаков" Например, код будет форматироваться так, как задано на ваших настройках, то есть код в сниппетах, который будет выдавать вам ваш искусственный помощник.
1472.28 1484.92 "Анатолий Кулаков" Вы можете как из этого окошка сниппет этот скопировать в файлик, или же с помощью специальной кнопочки просто-напросто вставить вместо сейчас курсора, если вас все устраивает, прямо в курсорную позицию вставляете код.
1484.92 1503.76 "Анатолий Кулаков" Таким же образом можно и передать код, нажав привычный Alt+Enter, допустим, выделив какой-то кусок, Alt+Enter, передать этот код в чатик, добавить какие-то свои пожелания, допустим, "Документируй мне это" или "Предложи мне какие-то исправления" или "Напиши тесты" и искусственный помощник с радостью вам все это сделает.
1503.76 1511.56 "Анатолий Кулаков" Поддерживается форматирование кода, рефакторинг, описание кода и документирование кода.
1511.56 1515.28 "Анатолий Кулаков" К той или иной степени, может быть где-то больше, где-то меньше.
1515.28 1516.60 "Анатолий Кулаков" Чуть попозже об этом расскажу.
1516.60 1530.60 "Анатолий Кулаков" Итак, из интересных дополнений во время, то есть у вас там есть история, как вы общаетесь с вашим помощником, и можно в этой истории выбрать какую-то часть, какую-то секцию и нажать "Редактирование".
1530.60 1545.32 "Анатолий Кулаков" Это редактирование интересно тем, что оно попытается сохранить вам тот контекст, то есть даже не попытается, но сохранит вам тот контекст, в котором весь предыдущий диалог вёлся, и отредактирует лишь только тот сниппет, который вы нажали, который вы захотели.
1545.32 1552.88 "Анатолий Кулаков" Таким образом можно продлевать диалог, изменяя какие-то части, в которых вы, например, в начале или в конце ошиблись.
1552.88 1561.92 "Анатолий Кулаков" Также каждую сессию можно создать, скопировать, удалить, переименовать, в общем, работать с этими чатиками, с этими сессиями более-менее удобно.
1561.92 1577.06 "Анатолий Кулаков" В райдере ещё, это всё касается ReSharper, в райдере тоже самое есть, но там плюс ещё из-за интеграции с IDE есть классная функция, которая называется "Автогенерация месседжа к комиту".
1577.06 1588.82 "Анатолий Кулаков" Я думаю, многие из вас, когда комитили в GIT, например, всё время задумывались, а что же там такое написать, чтобы и вроде и понятно было, и много не писать, и команда не обиделась.
1588.82 1601.56 "Анатолий Кулаков" В общем, наконец-то эта проблема решена, наш искусственный интеллект анализирует разницу, смотрит, что же вы там такое сделали и пытается человеческим языком описать вам все изменения, которые вы сделали.
1601.56 1604.56 "Анатолий Кулаков" Как краткий комментарий, так и подробный дескрипши.
1604.56 1609.80 "Анатолий Кулаков" Это прекрасно, это кажется, что как раз применили там, где это нужно.
1609.80 1619.76 "Анатолий Кулаков" Естественно, это только первый превью данной технологии, она будет улучшаться, изменяться, больше интеграции получать и так далее.
1619.76 1632.88 "Анатолий Кулаков" В качестве примеров, что нас в ближайшем будущем еще ждет, можно посмотреть на другие IDE JetBrains, и там уже, например, для языков Java, Kotlin и Python есть генерация документации.
1632.88 1645.04 "Анатолий Кулаков" То есть вы можете попросить описать документацию к какому-то методу, и всё это проанализируется метод, и естественно, опишется человеческим языком, а что же оно там делается.
1645.04 1650.36 "Анатолий Кулаков" Это всё уже работает для других языков, я думаю, скоро появится оно и для C#.
1650.36 1660.92 "Анатолий Кулаков" Также интересная штука, это совет, как назвать переменную или метод, в общем, как переименовать какую-то сущность в зависимости от контекста.
1660.92 1674.40 "Анатолий Кулаков" Я думаю, что сейчас многих из вас тоже сталкивались, что C# довольно нормально подсказывает имена переменных, там локальных, имена методов, то есть он пытается каким-то образом через эвристику вычислить более-менее подходящие стандартные имена.
1674.40 1685.76 "Анатолий Кулаков" Но, естественно, они там довольно-таки топорные и очевидные, в общем, было бы и хорошо, если бы он прошёл, немножко проанализировал глубже и предложил что-то более сознательное.
1685.76 1702.36 "Анатолий Кулаков" И вот кажется вот здесь, вот этот пункт даст нам именно вот эту функциональность, то есть имена станут переменных богаче, имена методов станут более описательными, может быть более правильными с точки зрения синтексиса английского языка и так далее.
1702.36 1704.36 "Анатолий Кулаков" Посмотрим, посмотрим, интересная штука.
1704.36 1737.84 "Анатолий Кулаков" И прежде чем вы броситесь все включать это в своих проектах, тут нужно сказать, что вся информация, которую вы будете редактировать, таким образом рефакторить, документировать, смотреть, она будет уходить на сервера LLM провайдера, то есть того провайдера, который предоставляет Large Language Model, то есть, скорее всего, это OpenAI сервера, то это будет выходить наружу, на территорию потенциального противника, поэтому, скорее всего, рабочие проекты таким образом лучше не смотреть, не рефакторить.
1737.84 1754.52 "Анатолий Кулаков" А вот хобби там проекты, open source проекты, наверное, потестировать стоит, потому что штука довольно занимательная и как показала практика, многим разработчикам очень сильно помогает даже в виде какого-то отдельного оторванного окошка.
1754.52 1760.16 "Анатолий Кулаков" А если она будет синтегрирована в хорошую качественную IDE, то это должно быть совсем счастье.
1760.16 1763.16 "Анатолий Кулаков" Будем следить, посмотрим, как она себя покажет на
1763.16 1772.84 "Игорь Лабутин" практике. Да, подождем статьи, отзывов, примеров того, кто попробует это делать и обозрит дело со всех сторон.
1772.84 1774.32 "Игорь Лабутин" А пока пойдем дальше.
1774.32 1798.04 "Игорь Лабутин" Дальше у нас есть от Microsoft еще штука, как обычно, вместе с превью, как правило, выходит новая превью студии, здесь в этот раз не исключение, вышло 17.7 превью 2 Visual Studio, и здесь у нас тоже довольно много изменений, которые поделены на несколько разделов.
1798.04 1801.04 "Игорь Лабутин" Первый раздел это productivity и performance.
1801.04 1808.36 "Игорь Лабутин" Прошлый раз мы рассказывали, что в первом превью добавили сравнение файлов, помнишь, я тебя спрашивал, полезно ли тебе сравнивать файлики в Solution Explorer друг с другом?
1808.36 1810.40 "Анатолий Кулаков" Да, если мы так и не нашли.
1810.40 1814.76 "Игорь Лабутин" Во втором превью можно теперь сравнивать файлик из Solution Explorer с любым другим файликом на диске.
1814.76 1817.60 "Игорь Лабутин" Ну хотя бы.
1817.60 1826.88 "Игорь Лабутин" Ну и там еще несколько завезли разных штук, в принципе там стало более гибко, то есть файл comparison улучшили и углубили.
1826.88 1843.52 "Игорь Лабутин" Теперь можно из Visual Studio создавать pull-requests, насколько я понимаю, поддерживается, ну собственно, GitHub и Azure DevOps, но Microsoft обещает работать и, возможно, с другими, типа там GitLab, я не знаю, но как-то так в статье написано, поэтому, мол, мы продолжим расширять саппорт.
1843.52 1850.16 "Игорь Лабутин" То есть теперь вы можете, не выходя из студии, создать pull-request к тому бранчу, над которым вы работаете, из того бранча, над которым вы работаете.
1850.16 1871.96 "Игорь Лабутин" В прошлом превью также завезли отображение истории ГИТА для нескольких бранчей одновременно, то, что они называют multi-branch graph, и здесь, в этом превью они улучшили отображение, там немножко по-другому рисуют layout, немножко по-другому рисуют label бранчей, чтобы стало более понятно и читабельно.
1871.96 1888.32 "Игорь Лабутин" Если вы когда-нибудь использовали окошко parallel stack для отладки, это штука, которая позволяет удобно смотреть на соотношение стэков потоков, там кто кого ждет, где какие, там еще хорошо группируют одинаковые потоки с одинаковыми или похожими стэками.
1888.32 1893.88 "Игорь Лабутин" Ну вот там теперь добавили возможность пофильтровать это все дело, чтобы оставить только нужные вам потоки.
1893.88 1905.20 "Игорь Лабутин" И продолжая про отладку, фича называется enhanced f5 speed, то есть все, что относится к началу отладки, там есть два улучшения.
1905.20 1923.48 "Игорь Лабутин" Во-первых, ускорили процедуру чтения pdb файликов, и это, понятное дело, позволяет быстрее начать отладку, потому что безконечный прогресс, прав в начале, что мол я загружаю pdb откуда-нибудь с символ сервера, теперь я его читаю, ну в общем прям.
1923.48 1936.92 "Игорь Лабутин" Занимает довольно много времени, будет занимать меньше, ну и в целом они где-то смогли нарыть 10%, от 5 до 10% улучшений по времени начала отладки вашего приложения, естественно будет чуть-чуть быстрее.
1936.92 1952.48 "Игорь Лабутин" Скорость редактирования тоже подредактировали, улучшили, добавили вот этот performance, когда показываются подсказки рослина, то что они называют light bulb, лампочки, когда у вас показываются в студии, вот там будет побыстрее.
1952.48 1961.48 "Игорь Лабутин" Дальше, студия еще довольно много всего индексирует, и это алгоритмы тоже немножко изменили, чтобы они кушали поменьше CPU.
1961.48 1969.72 "Игорь Лабутин" Ну и если вы вдруг программируете на C++, при этом слушаете наш подкаст, ну вот там IntelliSense тоже теперь работает получше.
1969.72 2000.64 "Игорь Лабутин" Если вы все-таки дотнет-разработчик, то есть у нас для вас и дотнет, чисто дотнетные штуки, во-первых, теперь по умолчанию включена авто-декомпиляция любого экстернального дотнет-кода, то есть если вы ткнете во время отладки в какой-нибудь frame стека, который не относится к вашему коду, или пойдете через там F11 в функцию, которая не принадлежит вам, вы автоматически попадете в декомпилятор, и он автоматически декомпилирует этот самый код, если вдруг, понятно, нет информации из SourceLink либо откуда-то еще из PDB.
2000.64 2042.32 "Игорь Лабутин" И если вы используете CPU Usage Tool, то есть это встроенный профайлер в студию, который позволяет анализировать в том числе CPU, то там есть новая фича, называется AutoInsights, то есть помимо того, что он просто показывает, что у вас там, не знаю, x% времени тратится в таком-то методе, для некоторых методов он будет подсказывать, что делать, то есть к таким методам относятся enum.hasFlunk, enum.toString, string.startsWith, string от коллекции символов, string.dictionary, count либо key values, и dateTimeNow, вероятно, будет советовать использовать utcNow.
2042.32 2052.16 "Игорь Лабутин" Так что, ну, опять же, наверное, полезная штука, если вам сразу добавят, этот самый профайлер говорит не только то, что у вас вот тут плохо, а вот еще как это надо исправить, кажется, нормально.
2052.16 2082.20 "Игорь Лабутин" Если вы, возвращаясь к C++, занимаетесь C++, то теперь в Visual Studio есть штука под названием BuildInsights, это дополнительно такое окошечко, которое вам покажет дерево с таймингами того, как собирался ваш плюсовый проект, а плюсовые проекты известны своим долгим временем сборки, как правило, по крайней мере, из моей памяти плюсов, и вот эта штука позволит вам как раз понять, где же тратится время, чтобы, возможно, что-то попробовать улучшить.
2082.20 2103.84 "Игорь Лабутин" Если вы занимаетесь девелопментом не только на C++, но при этом еще и на Linux, и да, вы это делаете из Visual Studio, потому что там есть штука под названием возможность ремолдной разработки, в том числе на Windows Subsystem for Linux, то как раз теперь студия вам сама может поставить в VSL, если вам нужно, она предложит эту опцию, если она его не найдет, и скажет, что давайте поставим.
2103.84 2111.28 "Игорь Лабутин" И есть еще в Remote File Explorer тоже добавились всяких разных полезных фич.
2111.28 2127.24 "Игорь Лабутин" Дальше, читая эту новость про Update Studio, мне показалось, что я читаю, ну, я не знаю, что это уже не совсем студия, потому что следующий раздел называется JavaScript и TypeScript Development, то есть мы уже как бы do net development, C++ development, JavaScript development, TypeScript development.
2127.24 2145.20 "Игорь Лабутин" Короче для TypeScript и JavaScript они тоже теперь добавляют разные улучшения, которые тоже достойны того, чтобы оказаться в списке того, что добавили в превью, и здесь конкретно речь идет про поддержку White для React и Vue.
2145.20 2154.68 "Игорь Лабутин" Если вы используете White, то вам надо бы использовать наверное новые превью студии, хотя конечно там могут быть баги, это же превью.
2154.68 2166.44 "Игорь Лабутин" И Enterprise Management там добавили какую-то очень странную, ну, нам вообще, как ты помнишь, обсуждение Enterprise Management казалось странным, да, централизованная установка, вот это все, студии.
2166.44 2177.36 "Игорь Лабутин" Так вот один из консерн, не консерн, комплейнтов, жалоб на вот эту всю централизацию и Enterprise было про то, что типа, ну вот мне админы поставили студию, я теперь могу ее обновлять и модифить.
2177.36 2188.68 "Игорь Лабутин" И теперь внезапно админы могут разрешить в установленной студии юзером без админских прав обновлять эту студию или модифицировать, ну типа добавлять всякие ворклоуды.
2188.68 2194.68 "Игорь Лабутин" Я не очень понимаю, зачем централизация, но вот видимо кто-то очень просил, фича такая есть.
2194.68 2197.08 "Анатолий Кулаков" Не, ну ставить централизованную удобно.
2197.08 2198.08 "Анатолий Кулаков" Ну это да.
2198.08 2201.84 "Анатолий Кулаков" Тыщу компьютеров, ты же не будешь на каждой из десятки бегать, так взял, поставил.
2201.84 2204.52 "Игорь Лабутин" А потом каждый пусть сам себе допиливает как хочет.
2204.52 2205.52 "Игорь Лабутин" Ну да, наверное, что-то есть.
2205.52 2206.52 "Анатолий Кулаков" Ну да, поднастраивает.
2206.52 2209.72 "Анатолий Кулаков" Кому-то блейзеры нужны, кому-то плюсы нужны.
2209.72 2211.76 "Игорь Лабутин" Ну окей, кому-то фронт.
2211.76 2213.96 "Игорь Лабутин" Ладно, ну вот примерно так.
2213.96 2216.76 "Игорь Лабутин" 22-ая студия, 17.7 превью 2.
2216.76 2222.00 "Игорь Лабутин" Это я бы ожидал, что она уже будет 23-я, но пока вроде 22-ая, я надеюсь не опечатался.
2222.00 2223.36 "Анатолий Кулаков" Пока держится, да.
2223.36 2227.48 "Анатолий Кулаков" Интересно, может они тянут до 24-го года, чтобы сразу перескочить?
2227.48 2228.48 "Игорь Лабутин" Может быть.
2228.48 2230.28 "Игорь Лабутин" Ну либо к релизу переименуют.
2230.28 2231.28 None Лака.
2231.28 2232.28 "Анатолий Кулаков" Хотя вряд ли.
2232.28 2234.72 "Анатолий Кулаков" Пойдем по более практическим проектам.
2234.72 2235.96 "Анатолий Кулаков" Хватит на новостей.
2235.96 2240.96 "Анатолий Кулаков" Есть у нас статейка свеженькая от Эндрю Лока, давай посмотрим.
2240.96 2246.96 "Анатолий Кулаков" Эндрю нам рассказал про опции, то есть немножко еще про валидацию iOptions.
2246.96 2258.28 "Анатолий Кулаков" Options интересная тема, потому что почти в каждом проекте они есть и их много, они часто используются, поэтому к ним такое внимание, то есть нам нужно в них хорошо уметь разбираться.
2258.28 2271.76 "Анатолий Кулаков" И я коротко напомню, что iOptions это строго типизированные классы, которые позволяют вам в строго типизированных типах, строго типизированных полях хранить строго типизированную информацию, которая достается из различных источников конфигурации.
2271.76 2278.28 "Анатолий Кулаков" Из файла на диске, из переменных окружений, из базы данных, откуда угодно, откуда вам только может понадобиться.
2278.28 2279.56 "Анатолий Кулаков" Провайдеров для этого целая куча.
2279.56 2283.44 "Анатолий Кулаков" И с ними есть несколько интересных моментов.
2283.44 2300.92 "Анатолий Кулаков" Во-первых, очень часто хочется сделать некую валидацию, то есть убедиться, что в этом строго типизированном классе, который посчитывал информацию из откуда угодно, в нем эта информация есть, она есть определенного формата или определенного типа, или какую-то другую такую базовую стандартную валидацию к ней применить.
2300.92 2304.04 "Анатолий Кулаков" И для этого есть встроенная поддержка Data Notation.
2304.04 2320.12 "Анатолий Кулаков" Data Notation вы вполне могли встречать там и в хранении баз данных, и при дистиллизации JSON, в общем, очень часто используемый механизм, который используется на границах приложения для того, чтобы как раз-таки сделать вот такую базовую банальную валидацию.
2320.12 2326.76 "Анатолий Кулаков" Естественно, опции не стали исключением, они тоже применили Data Notation, и это есть практически с первых версий.
2326.76 2334.84 "Анатолий Кулаков" А вот с Dotnet 6 появилась еще одна полезная штука, это автоматическая проверка Data Notation во время старта вашего приложения.
2334.84 2345.80 "Анатолий Кулаков" Если ее не делать, то вот эта проверка того, насколько данные опции хорошо загрузились и содержат в себе валидные данные, она происходит в момент резолва этих опций.
2345.80 2348.24 "Анатолий Кулаков" То есть тогда, когда ваш класс создается.
2348.24 2367.20 "Анатолий Кулаков" Это не самая прекрасная стадия, где вы могли бы ловить исключения, потому что класс может создаваться когда угодно, когда придет специализированный запрос, когда настанет там какое-то время, когда один раз в год вам нужно будет создать тот самый важный отчет годовой, и в это время оно упадет.
2367.20 2369.48 "Анатолий Кулаков" Хотя до этого целый год все работало без ошибок.
2369.48 2371.20 "Анатолий Кулаков" В общем, это плохое время.
2371.20 2374.28 "Анатолий Кулаков" Обычно считается, что туда не надо доводить.
2374.28 2382.00 "Анатолий Кулаков" Намного лучше это все вылавливать, конечно же, во время разработки, во время тестирования, но если уж совсем никак, то самое лучшее время это на время старта.
2382.00 2393.80 "Анатолий Кулаков" Если приложение падает на старте, это отличный флаг того, что отчет не работает, в этот момент его обычно еще не поздно откатить, и в общем падать на старте это хорошо, если у вас нет валидных данных для дальнейшей работы.
2393.80 2400.08 "Анатолий Кулаков" И вот в .NET 6 добавилась опция проверять все возможные опции, которые есть в вашем приложении, прямо на старте.
2400.08 2423.80 "Анатолий Кулаков" Делается это все очень просто, буквально в несколько строчек, во-первых, вы должны зарегистрировать опцию в контейнере, забайнить ее к какой-то секции конфигурации, дальше вызвать метод, например, ValidateDataAnnotations, который подключает валидатор с помощью DataAnnotations атрибутов, и еще можно вызвать метод, который называется ValidateOnStart, который как раз таки запустит эту валидацию на старте.
2423.80 2432.32 "Анатолий Кулаков" Вот с такими условиями, с такими вводами мы жили до сегодняшнего момента, и здесь есть несколько тонкостей.
2432.32 2440.84 "Анатолий Кулаков" Во-первых, очень часто в .NET среде используется библиотека для валидации объектов, которая называется FluentValidations.
2440.84 2447.76 "Анатолий Кулаков" Это одна из самых популярных библиотек вообще, и самая популярная, безусловно, для валидации.
2447.76 2463.20 "Анатолий Кулаков" Если вдруг вы тоже в вашем проекте ее используете, она намного гибче, намного мощнее, чем DataAnnotations, то есть возможность ее тоже подключить, точно так же для валидации всех опций, которые вы биндите в свои приложения.
2463.20 2469.08 "Анатолий Кулаков" В общем, если вам это интересно, посмотрите на ссылки, Envelope подробно разбирает и описывает эту тему.
2469.08 2474.92 "Анатолий Кулаков" Если же вы все-таки остановились на DataAnnotations, то с ними сейчас есть довольно неприятная бага.
2474.92 2478.76 "Анатолий Кулаков" Они не умеют проверять вложенные классы.
2478.76 2517.60 "Анатолий Кулаков" То есть, допустим, если у вас есть какие-то опции для пользователя, и у этого пользователя есть какое-то поле, которое называется "Группа", и эта группа - это тоже еще один вложенный класс, который описывает там какую-то группу, где состоит пользователь, у этой группы там есть имя, и это имя должно быть обязательным, "required", допустим, то валидация стандартной из коробки с помощью DataAnnotations атрибутов, она самого пользователя проверит, а вот внутри этой группы не пойдет, и атрибуты "required" этой группы уже оценивать не будет, проверять не будет.
2517.60 2519.04 "Анатолий Кулаков" В общем, такая особенность.
2519.04 2527.56 "Анатолий Кулаков" Бага на GitHub заведена, но как-то чинить ее до сих пор не торопятся, поэтому энтузиасты пишут кучу костылей вокруг этого.
2527.56 2551.88 "Анатолий Кулаков" И одним из энтузиастов оказался Damien Edwards, один из членов ISP.NetCore Dima, то есть команды, которая непосредственно разрабатывает этот ISP.NetCore, и который решился собрать весь свой опыт, который он использовал в множестве проектов для написания подобного валидатора, и сделал нам маленький пакетик, который так и называется "MiniValidation".
2551.88 2578.92 "Анатолий Кулаков" Проект "MiniValidation" помогает нам с помощью буквально одной строчки добавить простую валидацию на основании DataAnnotations атрибутов с учетом реквизитного обхода всех вложенных классиков, то есть решает эту проблему, и так же на сладкое с детектом циклов.
2578.92 2585.24 "Анатолий Кулаков" Все, что он вам предлагает, это практически один метод, который называется "MiniValidator.TryValidate".
2585.24 2597.80 "Анатолий Кулаков" Этот "TryValidate" валидирует ваш классик, то есть вы передаете ваш классик, и в качестве результата возвращает вам список ошибок, если вдруг он таковые нашел, и подробно описывает, с каким полем у него возникли какие ошибки.
2597.80 2611.40 "Анатолий Кулаков" Чтобы нам подключить данную библиотеку к проверке "iOptions" на старте, естественно, мы этого хотим, всего лишь нужно реализовать стандартный классик для "iOptions", который называется "iValidateOptions".
2611.40 2619.56 "Анатолий Кулаков" В этом классике, в имплементации мы вызываем вот эту одну самую строчку, которой передаем все атрибуты, и обрабатываем ее выход.
2619.56 2624.56 "Анатолий Кулаков" Если там есть какие-то ошибки, мы об этом сообщаем выходному методу.
2624.56 2632.52 "Анатолий Кулаков" Для удобного использования обычно пишется экстеншн метод к "OptionBuilder", для того чтобы вот так вот в цепочке во "Fluent" интерфейсе это все подключать.
2632.52 2642.76 "Анатолий Кулаков" И дальше используется все точно так же, как я говорил выше, только кроме "ValidateDataAnnotation" метода мы вызываем "ValidateMiniValidator".
2642.76 2653.80 "Анатолий Кулаков" После этого у нас в приложении все остальное не меняется, все остальное остается на месте, и в нашем приложении на старте начинает проверяться вообще весь граф объектов с помощью "DataAnnotation".
2653.80 2664.44 "Анатолий Кулаков" Вот такую интересную библиотеку нам Андрю Лок открыл, рассказал как ее подключить к нашим проектам, и рассказал вообще как работать с опциями, с "Appalute" абсолютно со всех сторон.
2664.44 2676.16 "Анатолий Кулаков" Если вдруг вы в ваших проектах опции используете, то обязательно посмотрите на их валидацию, это поможет вам устранить очень много проблем, которые могут возникнуть в непонятном месте, в непонятное время.
2676.16 2680.36 "Анатолий Кулаков" В общем, эти проблемы отсеять как можно раньше, на этапе старта приложения.
2680.36 2682.16 "Анатолий Кулаков" Полезная штука?
2682.16 2694.00 "Игорь Лабутин" Несомненно полезная, точно надо посмотреть и попробовать ее взять, я на самом деле даже попробую как-нибудь, потому что быть уверенным, что у тебя рекурсивно все провалидировалось, это прям дорогого стоит.
2694.00 2704.76 "Игорь Лабутин" А мы пойдем дальше на одну из наших, не сказать, что любимых, но довольно часто обсуждаемых тем раз в год мы обсуждаем "Stack Overflow" голосовалку.
2704.76 2716.84 "Анатолий Кулаков" Да, "Stack Overflow" снова выпустила, даже не выпустила, запустила свою голосовалку, в которой проголосовало больше 90 тысяч разработчиков, неплохая цифра, 90 тысяч, да?
2716.84 2722.72 "Игорь Лабутин" Да, мне кажется в прошлый раз было, я могу наврать, ну что-то около 50 или 60, так что растем.
2722.72 2729.20 "Анатолий Кулаков" Да, да, данные актуальны где-то примерно на май, и эта тема любимая наша, почему?
2729.20 2734.60 "Анатолий Кулаков" Потому что мы любим в подкасте рассказывать про проценты, доставлять наших зрителей в уме придумывать диаграммы.
2734.60 2743.64 "Игорь Лабутин" Да, да, да, вот я сейчас смотрю на твои заметки, у нас там типа 13.59%, 13.24%, а потом устраивать экзамен.
2743.64 2753.36 "Анатолий Кулаков" Ну давай, я короче начну рассказывать цифры голосом, а ты смотри на графики и добавляй свои комментарии, чтобы было более-менее разнообразно.
2753.36 2776.76 "Анатолий Кулаков" Хорошо, как Игорь уже сказал, да, "Stack Overflow" опрос, и в этом опросе как бы есть куча всего, я постарался выбрать самое интересное, самое нужное и самое полезное для нашей аудитории, ну для начала стоит, мне всегда интересно вот как аудитория откуда наберется, то есть откуда вообще программисты учатся, откуда вообще такие умные рождаются, сразу получается красивые или нет.
2776.76 2782.84 "Анатолий Кулаков" И вот откуда берутся программисты, да, как вы учитесь, вопрос бы звучал примерно так.
2782.84 2812.24 "Анатолий Кулаков" И оказывается 80% учатся по другим онлайн ресурсам, то есть по другим в данном случае имеется в виду не онлайн курсы, а учатся они по видосикам, по блогам и по форумам, это 80%, то есть такие вот самоучки некомплексные, да, то есть видосики, блоги, форумы это обычно вот какие-то вырванные части, вырванные статьи, которые не дают тебе системной какой-то картины, вот это меня всегда поражало, как можно начинать учиться не с какого-то базового системного фундаментального уровня.
2812.24 2834.72 "Игорь Лабутин" Ну тем не менее это так, причем вот я смотрю, что эта штука не меняется никак, то есть я бы там ожидал увидеть, например, что тут у них есть классификация по возрасту, до 18, до 24, потом до 34, 44, ну короче, по четверочкам в конце, в общем оно везде примерно порядка 70-80% на первом месте.
2834.72 2838.08 "Анатолий Кулаков" Ужас, скоро по TikTok будем учить.
2838.08 2841.40 "Игорь Лабутин" Ну почему нет, если эффективно вокруг.
2841.40 2860.72 "Анатолий Кулаков" Ну хорошо, там на втором месте это книги, это 50%, с которого нужно было как раз таки начинать, 50% также школы, университеты, колледжи и 48% немножко остаются те самые курсы, которые как раз таки обещают вам после двух недель обучения профессии шар-программиста вас устроить на любую работу в Яндексе и в Гугле.
2860.72 2869.88 "Игорь Лабутин" Ну вот кстати, тут если выбрать вкладочку Learning to Code, то есть отобрать только тех, кто именно учится, они будут сразу на втором месте после других онлайн-ресурсов.
2869.88 2876.88 "Игорь Лабутин" В общем, они имеют свою популярность для тех, кто только-только начинает.
2876.88 2884.32 "Анатолий Кулаков" Да, те, кто доучились, они уже понимают, что все это было фигня и на самом деле все знания они получили из видосиков в блоговой форме.
2884.32 2901.08 "Анатолий Кулаков" А вот еще интересный критерий, это все-таки на каких источниках, на каких курсах люди учатся, к сожалению, на каких книгах тут не очень нам понятно и не очень полезно будет, а вот на каких платформах для курсов это может быть какая-то еще полезная информация, куда можно друзей посылать.
2901.08 2911.36 "Анатолий Кулаков" 65% это у Деми и с большим отрывом идет Курсера 34% и дальше на третьем месте Кодактик Академии 24%.
2911.36 2913.68 "Анатолий Кулаков" Ну почему Деми меня удивляет.
2913.68 2916.08 "Игорь Лабутин" Плюрал сайт там еще чуть-чуть дальше, 22%.
2916.08 2917.80 "Игорь Лабутин" Ну он там еще дальше, да.
2917.80 2932.64 "Игорь Лабутин" Ну да, но просто когда мы говорим про Дотнет, у меня почему-то в первом голове всплывает именно Плюрал сайт, почему-то именно я про него слышу много от всяких авторов курсов, что вот я там запилил очередной курс и в основном на Плюрал сайте, у меня в моем круге такое.
2932.64 2936.68 "Анатолий Кулаков" Ну да, я с тобой согласен, почему-то Дотнетчики любят Плюрал сайты.
2936.68 2939.60 "Анатолий Кулаков" Может он как-то связан, может он написан на Дотнете.
2939.60 2942.36 "Анатолий Кулаков" Да, интересный вопрос, не знаю.
2942.36 2949.72 "Анатолий Кулаков" Давай к самому интересному, это популярность языков, то есть какой язык программирования вы используете каждый день на работе.
2949.72 2956.64 "Анатолий Кулаков" 63% они изменяют, на первом месте JavaScript, от этого наверное мы в ближайшее время никуда не денемся.
2956.64 2964.08 "Анатолий Кулаков" 52% это HTML и CSS, то есть 10% людей, пишущих на JavaScript не знают HTML и CSS вообще.
2964.08 2965.08 "Анатолий Кулаков" Это какое-то странное.
2965.08 2966.08 "Анатолий Кулаков" Так они Backend пишут.
2966.08 2970.44 "Анатолий Кулаков" А, да, Backend на JavaScript якобы тоже бывает, да, да, люди в заблуждении находятся.
2970.44 2978.84 "Анатолий Кулаков" Вот 10% Lunatic, 49% это Python, не суть важно, там SQL потом идет обязательно, все должны знать SQL, 48%.
2978.84 2990.64 "Анатолий Кулаков" И вот самое интересное идет, это вот нормальные языки пошли, ну ладно, Python, Python тоже, 49% считаем нормальные языки, это Python, хотя он динамически типизированный, не считается нормальный язык, SQL тоже, TypeScript.
2990.64 3008.16 "Анатолий Кулаков" Вот TypeScript это строго типизированный, короче первый язык 38% это TypeScript, на втором месте среди моего личного рейтинга строго типизированных языков это Java, у него 30%, 27% это C# на третьем месте, то есть мы вот среди строго типизированных языков на третьем месте.
3008.16 3009.16 "Анатолий Кулаков" Нормально.
3009.16 3012.60 "Анатолий Кулаков" Ну да, да, в принципе нормально, почему бы и нет.
3012.60 3017.28 "Анатолий Кулаков" Плотную спину дышим в Java, почему-то она до сих пор не помирает, но допустим.
3017.28 3027.72 "Анатолий Кулаков" И сразу идет интересно, все остальные C# языки, просто C# по 27%, C++ 22%, C 19% и так далее, и так далее.
3027.72 3048.20 "Анатолий Кулаков" Из дотнет языков интересно еще подчеркнуть PowerShell, который 13% и он обогнал Go, который мега популярный, мега все рекламируют, мега на нем все пишут, но Go никак не может догнать PowerShell, вот это тоже для меня был шок, ну чуть-чуть не может догнать, потому что Go это 13.24%, а PowerShell это 13.59%.
3048.20 3051.32 "Анатолий Кулаков" Конечно там статистическая погрешность, но факт интересный.
3051.32 3064.72 "Анатолий Кулаков" И так же точно Go перегоняет Rust, буквально там на десятые доли процента, вот они идут вместе, пытаются дружно перепрыгнуть PowerShell, пока у них ничего не получается, PowerShell держится.
3064.72 3078.96 "Анатолий Кулаков" Kotlin где-то там тоже сзади копается на 9% и F# тоже в рейтинге есть, он попал, он влез, но судя по всему случайно, потому что у него 0.97%.
3078.96 3088.76 "Игорь Лабутин" Но там целых 693 ответа про него, для понимания про C# почти 20 тысяч.
3088.76 3096.56 "Анатолий Кулаков" Да, к сожалению почему-то F# не летит, а если бы наверное был график, то похоже даже падает.
3096.56 3110.12 "Игорь Лабутин" Ну надо сказать, что если переключиться на вкладочку Professional Developers, ты сейчас говорил в чиселке про всех, все ответы, а на Professional Developers, там примерно то же самое, но там у Java 30.5, у C# 29.2.
3110.12 3117.12 "Игорь Лабутин" То есть у Professional Developers у Java и C# более-менее ровненько идут, F# там тоже где-то 1% в конце.
3117.12 3132.40 "Игорь Лабутин" А вот 693 это как раз Professional Developers я тебе сказал, и 20 тысяч на C#, если All Respondents, то там будет, сейчас посмотрим, еще 200 человек набралось на F#, который не Professional, в 749.
3132.40 3134.84 "Анатолий Кулаков" В Professional F#, ну хорошо, допустим.
3134.84 3135.84 "Анатолий Кулаков" Ладно, давай дальше.
3135.84 3154.36 "Анатолий Кулаков" База данных, база данных популярна, самая популярная это POSRESQL, 45%, на втором месте MySQL, неизменно старичок держит свои позиции, 41%, и третье место это SQLite, 30%, в принципе не хило так 30%, и что люди делают так с SQLite?
3154.36 3157.16 "Анатолий Кулаков" Может быть там на мобилках, в embedded системах?
3157.16 3158.16 "Анатолий Кулаков" Ну наверное, да.
3158.16 3162.24 "Анатолий Кулаков" Сравнить с POSGIS, просто размах не тот как-то.
3162.24 3166.96 "Анатолий Кулаков" Должно быть на порядок меньше SQLite, чем POSGIS, оказывается нет.
3166.96 3173.96 "Анатолий Кулаков" И кстати, еще интересная штука, что SQLite обогнал MongoDB, MongoDB это 25% использования, а SQLite это 30.
3173.96 3177.64 "Анатолий Кулаков" Ну и также 25% это Microsoft SQL Server.
3177.64 3181.00 "Игорь Лабутин" Если опять же выбрать Professional, немножко обгоняет Mongo тогда.
3181.00 3187.48 "Игорь Лабутин" То есть в профессиональной среде SQL Server чуть популярнее Mongo, но все равно меньше, чем SQLite.
3187.48 3204.44 "Анатолий Кулаков" Правда, как бы хипсные не старались, но заметь, это документно ориентированные базы, за все эти годы так и не вырвались вперед, а вроде все кричали, что реляционные никому не нужны, а здесь прям POSGIS, MySQL, SQLite, Microsoft SQL Server, все на первых местах реляционные базы.
3204.44 3212.24 "Игорь Лабутин" Ну вот только дальше еще идет потом Redis, но MariaDB это тоже по сути реляцион, да ведь?
3212.24 3213.24 "Игорь Лабутин" Да, да.
3213.24 3219.60 "Игорь Лабутин" Ну дальше вот идет Elastic, Oracle тут же подтянулся с 10%, ну в общем как-то так.
3219.60 3228.56 "Анатолий Кулаков" Да, и Oracle очень сильно отстает от MS SQL, я думал, что они всегда такие конкуренты, которые нос в нос идут, но нет, там он где-то просто тащится в задах.
3228.56 3237.28 "Игорь Лабутин" И даже есть наша .NETная база данных RavenDB, с гордыми 0,3% и 227 ответивших человек.
3237.28 3241.28 "Анатолий Кулаков" Меньше, чем в F#, посмотри.
3241.28 3244.76 "Игорь Лабутин" Ну кто-то использует, молодцы.
3244.76 3258.24 "Анатолий Кулаков" Из клауд-провайдеров ожидаемо Amazon больше всех, и он больше двух предыдущих месте взятых, да, то есть это 26% это Microsoft Azure на втором месте и 23% Google Cloud.
3258.24 3259.48 "Анатолий Кулаков" Ну сравним, сравним.
3259.48 3266.96 "Анатолий Кулаков" Да, сравним, короче, то есть Amazon половину рынка и два соседних конкурента держат вторую половину рынка.
3266.96 3269.60 "Анатолий Кулаков" Да, Amazon еще долго здесь сидеть.
3269.60 3272.32 "Анатолий Кулаков" Дальше, Web Frameworks and Technologies.
3272.32 3283.56 "Анатолий Кулаков" В общем дальше разделение оно такое, довольно условное, потому что непонятно, иногда фреймворки и технологии заносят туда, иногда их заносит сюда, поэтому не судите строго, мы читаем то, что имеем.
3283.56 3288.24 "Анатолий Кулаков" В качестве Web Framework Technologies на первом месте это Node.js 42%, дальше там.
3288.24 3293.88 "Игорь Лабутин" Ну а если посмотреть в профессиональных девелоперах, то там React на первом месте, а Node на втором.
3293.88 3295.40 "Анатолий Кулаков" Ну да, а здесь на втором.
3295.40 3306.44 "Анатолий Кулаков" Node.js и React это считается Web Framework, ISP.NET Core тоже есть, его 16% и плюс еще прибавляется ISP.NET просто без кора, у него еще 12%.
3306.44 3309.52 "Анатолий Кулаков" Ну в целом, да, циферка довольно хорошая получается.
3309.52 3312.52 "Игорь Лабутин" Там еще Blazor есть, кстати, 4.8.
3312.52 3320.56 "Анатолий Кулаков" Да, 4% Blazor, маловато, маловато, совсем со всей той помпой что там Blazor рекламируют, он бы уже больше насобирал.
3320.56 3323.68 "Игорь Лабутин" Сейчас я смотрю, больше вроде дотнетного ничего нет.
3323.68 3324.68 "Анатолий Кулаков" Ну ладно, пойдем дальше.
3324.68 3325.68 "Анатолий Кулаков" Больше дотнетного ничего нет.
3325.68 3334.40 "Анатолий Кулаков" А вот следующий пункт, Our Framework and Libraries, то есть не Web Framework, а Our, он довольно интересный, потому что на первом месте там находится дотнет 5.
3334.40 3336.84 "Анатолий Кулаков" Дотнет 5 обогнал просто все фреймворки.
3336.84 3339.52 "Игорь Лабутин" Ну и еще что новее, 5, 6, 7.
3339.52 3340.52 "Анатолий Кулаков" Да, 5+.
3340.52 3351.38 "Анатолий Кулаков" И плюс еще есть 17% от обычного дотнет фреймворка, от первого до 4.8, то есть прям дотнета пользуются абсолютно все, даже те, кто пишут на Node.js и React, наверное.
3351.38 3360.06 "Игорь Лабутин" А если выбрать мою любимую вкладочку Professional Developers, то на первом месте дотнет 5+, а на втором месте дотнет фреймворк.
3360.06 3361.06 "Анатолий Кулаков" Вот видишь?
3361.06 3367.98 "Игорь Лабутин" И только потом это всякие там Mumbai, Pandas, Spring, RabbitMQ внезапно, Kafka.
3367.98 3370.98 "Анатолий Кулаков" Да, Our Framework.
3370.98 3382.98 "Анатолий Кулаков" Интересно, смотри, что у Spring, ну мы говорим, что Java обогналась и Sharp, но в то же самое время, что Spring фреймворк это 11%, а дотнет это 25+17, то есть это нам больше 40% получается.
3382.98 3396.54 "Игорь Лабутин" Ну, надо сказать, что тут странный подбор фреймворков, тут Exambrin отдельно, Maui отдельно, MFC, кто-то еще пишет на MFC, прикинь.
3396.54 3401.58 "Анатолий Кулаков" Я там даже DubCF где-то видел.
3401.58 3406.58 "Игорь Лабутин" Ну, тут пока не вижу, ладно, где-то в другом месте.
3406.58 3427.06 "Анатолий Кулаков" Хорошо, tools, другие tools, ну 51% Docker, все любят Docker, 49% NPM, тоже в принципе удивительно, что Docker используется точно так же активно, как и NPM, я думал, что как бы Docker это много популярней, с учетом того, что Kubernetes это 19%, а как все остальные люди Docker, что тут говорят, через Nomad что ли.
3427.06 3435.58 "Анатолий Кулаков" И среди tools 15% это Nuget, то есть Nuget, где-то это 19%, это Nuget, то есть Nuget грубо говоря примерно конкурирует с популярностью с Kubernetes.
3435.58 3445.18 "Игорь Лабутин" Ну, да, пока не догоняет, но почти.
3445.18 3469.70 "Анатолий Кулаков" Тему, которую сегодня уже затрагивали, это IDE, Integrated Development Environment, 73% Visual Studio Code, просто непобедимый комбайн, который поддерживает, наверное, абсолютно все уже языки, имеет абсолютное большинство плагинов, которые только можно придумать и написать, работает довольно быстро, красиво, интересно, неудивительно, в общем 73% рынка Visual Studio Code, неплохо.
3469.70 3476.58 "Анатолий Кулаков" Visual Studio 28% и IntelliJ IDEA, я так понимаю, абсолютно все ее реинкарнации, это 26%.
3476.58 3490.30 "Игорь Лабутин" Ну, вот это кстати непонятно, потому что WebStorm, PHPStorm, я вижу Android Studio, вижу отдельно дальше, DataGrip, C-Line, Rider, Gallant, нет, они все отдельно дальше, все живут.
3490.30 3495.46 "Анатолий Кулаков" Ну, хорошо, тогда да, тогда если сложить, то будет еще лучше для IntelliJ IDEA.
3495.46 3504.98 "Игорь Лабутин" Да, то есть идея, ну вот все семейство полное, Rider опять же отдельно там с 5% и с половинкой есть тоже.
3504.98 3516.10 "Анатолий Кулаков" А синхронные тулы взаимодействия в команде, это Jira и Confluence например, Jira 52%, Confluence 34%, я в надежде смотрел, что вдруг там какое-то импортозамещение уже начало обгонять, нет, ничего подобного.
3516.10 3518.10 "Игорь Лабутин" Ну, в Confluence никто не сдвинет.
3518.10 3519.10 "Игорь Лабутин" Так, ну, импортозамещение.
3519.10 3526.10 "Игорь Лабутин" Помнишь, я не знаю, у тебя есть перед глазами третий вариант этого асинхронного стула на третьем месте?
3526.10 3527.74 "Анатолий Кулаков" Не, ну-ка, прочитай.
3527.74 3529.38 "Игорь Лабутин" Там называется Markdown File.
3529.38 3532.42 "Анатолий Кулаков" А, Markdown File, точно, вырезал там Markdown File.
3532.42 3534.54 "Анатолий Кулаков" Ну, вот это уже точно никто не сдвинет.
3534.54 3540.02 "Игорь Лабутин" То есть, ну, короче, это прям такой асинктул, непонятно как оно используется, ну ладно.
3540.02 3542.74 "Анатолий Кулаков" Пересылается по почте, конечно, Markdown File Async.
3542.74 3543.74 "Анатолий Кулаков" А, ну, опечатывается.
3543.74 3549.18 "Анатолий Кулаков" Ну, вот, печатается, асинхронные тулы на первом месте 51% это Microsoft Teams.
3549.18 3553.22 "Анатолий Кулаков" Teams используется, да, у него хорошая там интеграция, почему бы и нет.
3553.22 3555.78 "Анатолий Кулаков" 47% это Slack и 45% это Zoom.
3555.78 3558.98 "Анатолий Кулаков" Да, вот Аленка внесла свои коррективы, Zoom люди любят.
3558.98 3568.98 "Игорь Лабутин" Ну и дальше Google Meet, Discord, WhatsApp, 30% или 28% профессионал-девелопер в WhatsApp для, так сказать, асинхронного стула.
3568.98 3569.98 "Анатолий Кулаков" Ну, прикольно.
3569.98 3570.98 "Анатолий Кулаков" Прошлый профессионал, да, использует.
3570.98 3571.98 "Анатолий Кулаков" Для работы в WhatsApp.
3571.98 3573.98 "Игорь Лабутин" Ну, Telegram, кстати, круче Skype.
3573.98 3574.98 "Игорь Лабутин" Вот, вполне себе.
3574.98 3579.98 "Анатолий Кулаков" Удивительно, что вообще там Skype ещё жив, но, наверное, Microsoft почти всё уже.
3579.98 3582.98 "Игорь Лабутин" Ну, Skype жив, Skype жив, да, вполне денется.
3582.98 3602.54 "Анатолий Кулаков" Так, новая секция появилась в этом году, это всякие штуки с AI, с AI, искусственным интеллектом, ну, можно отметить, что AI Search Tool, 83% занял часть GPT, 20% Bing AI, который пытается каким-то образом там тоже долю рынка себе отхапать.
3602.54 3608.94 "Анатолий Кулаков" Wolfram Alpha, старичок, 13%, и 9% Google Bart.
3608.94 3617.94 "Анатолий Кулаков" Такой расклад, что, ну да, сейчас GPT, в принципе, монополизировал абсолютно всё, и тут пока не видно конкурентов, которые способны по качеству с ним сравняться и как-то столкнуть.
3617.94 3624.86 "Анатолий Кулаков" Ну, будем смотреть, вот это довольно такая динамическая область, динамичная, поэтому в будущем легко может вообще поменяться.
3624.86 3631.58 "Анатолий Кулаков" И AI Developer Tool, 54%, GitHub Copilot, ну да, остальное, смотрите, вообще никакого смысла нет.
3631.58 3633.50 "Анатолий Кулаков" GitHub Copilot очень популярен.
3633.50 3638.18 "Анатолий Кулаков" Вот это мне понравилась, смотри, секция, которая называется, ну, типа, что люди хотят изучить.
3638.18 3644.62 "Анатолий Кулаков" Ну, там, как всегда, такой разброс, все всё хотят, все всё не хотят, мы это уже миллионы раз обсуждали, не суть интересная.
3644.62 3647.98 "Анатолий Кулаков" Мне понравилась веб-фреймворк.
3647.98 3659.50 "Анатолий Кулаков" Люди, которые хотят изучить ISP.net, не, не так, люди, которые программируют на ISP.net, они очень сильно хотят изучить ISP.net Core и больше вообще ничего не хотят.
3659.50 3669.22 "Анатолий Кулаков" То есть там ни Ruby, ни Python, ни PHP, ни Node.js, вообще ничего, не интересует их, они в своём кружке живут, они хотят изучить ISP.net Core.
3669.22 3678.86 "Анатолий Кулаков" И ещё более интересный пункт, это люди, которые программируют на ISP.net Core, они просто вообще больше ничего не хотят изучать, просто больше ничего не надо.
3678.86 3680.54 "Анатолий Кулаков" Такая красота кругом.
3680.54 3685.26 "Игорь Лабутин" А, да, действительно, полностью замкнута сама на себя, действительно.
3685.26 3697.38 "Анатолий Кулаков" Да, да, полностью замкнута, ну то есть такое ощущение, что нашли какой-то золотой грааль, люди пришли в ISP.net Core, увидели, что там творится, и они поняли, что вообще больше ничего не надо для счастья, всё есть, некуда больше стремиться.
3697.38 3708.98 "Игорь Лабутин" Зато да, я там выделяю ноду какую-нибудь там Node.js, и React, и Express, и Next.js, и Svelte, и Vue, короче, прям всё, и регуляр, всё хотим.
3708.98 3712.14 "Игорь Лабутин" Прям жух, круто, круто.
3712.14 3713.14 "Анатолий Кулаков" Да, да, да.
3713.14 3725.18 "Анатолий Кулаков" Тут, видишь, не поймешь, радоваться или плакать, то есть они действительно всё нашли, что желали, или так всё плохо, что там, не знаю, может быть у них такое подавленное настроение, что они вообще перестали хотеть учиться.
3725.18 3726.18 "Игорь Лабутин" Ну непонятно.
3726.18 3727.18 "Игорь Лабутин" Разочаровались во всей области.
3727.18 3744.26 "Игорь Лабутин" Ну, кстати, с DotNet, кстати, похожая штука, то есть те, кто в DotNet 5, там только узенькие выходят во всякие смертные технологии типа Kafka, там, OpenGL, OpenCV, Pandas, RebitMQ, React Native, TensorFlow, ну то есть такие, как бы, то, что на слуху, грубо говоря.
3744.26 3747.06 "Игорь Лабутин" А самая большая жирная линия обратно в DotNet 5.
3747.06 3748.78 "Анатолий Кулаков" В ДотНет 5, обратно, это чудо.
3748.78 3751.94 "Игорь Лабутин" Ну и, а, из DotNet Framework, соответственно, в DotNet 5.
3751.94 3752.94 "Игорь Лабутин" Так что всё чутик.
3752.94 3761.46 "Анатолий Кулаков" Ну дайте, действительно, вашим друзьям посмотреть эти графики, пусть они убедятся, что люди, которые живут в экосистеме DotNet, они счастливы, просто они никуда больше не хотят.
3761.46 3765.74 "Анатолий Кулаков" И это не те люди, которые не знают, что другие технологии, как бы, существуют, а как раз наоборот.
3765.74 3770.06 "Анатолий Кулаков" Туда хотят очень многие, а вот оттуда нет, не хотят.
3770.06 3772.06 "Игорь Лабутин" Да, интересно, интересно прям.
3772.06 3774.18 "Игорь Лабутин" Ну, кстати, с Docker он тоже фиг.
3774.18 3775.62 "Игорь Лабутин" Ну нет, с Docker.
3775.62 3778.26 "Игорь Лабутин" Внезапно из Docker в NPM почему-то много.
3778.26 3779.98 "Игорь Лабутин" А нет, из NPM в Docker.
3779.98 3785.02 "Игорь Лабутин" А MS Build, MS Build полностью замкнут сам на себя.
3785.02 3786.02 "Анатолий Кулаков" Оттуда уйдёшь вообще.
3786.02 3788.58 "Игорь Лабутин" Да, прикольно, ну сильно забавно видеть.
3788.58 3789.94 "Игорь Лабутин" Ну, нет, ну нет, ну нет.
3789.94 3804.50 "Анатолий Кулаков" Ну, в общем, отчёт полон красивых, интересных графиков, разноцветных стрелочек, поэтому если вам вдруг интересны подробности или более широкий разброс по ценам или по географиям или ещё по чём-то, то заходите, смотрите.
3804.50 3811.70 "Анатолий Кулаков" Отчёт, как всегда, интересный и в принципе довольно обширный, поэтому может претендует на какую-то даже правдивость.
3811.70 3820.46 "Игорь Лабутин" Ну да, ну по крайней мере его действительно интересно покрутить, просматривать, посмотреть, кто куда хочет.
3820.46 3821.90 "Игорь Лабутин" В скайпе все хотят куда-то убежать.
3821.90 3825.66 "Игорь Лабутин" Обратно в скайп не хочет никто.
3825.66 3826.66 "Игорь Лабутин" Ну и так далее.
3826.66 3831.06 "Игорь Лабутин" Так, ладно, давай продолжим дальше.
3831.06 3836.02 "Игорь Лабутин" Это такое RAFLO хорошая тема, процентики посчитать, милое дело.
3836.02 3842.62 "Игорь Лабутин" Нам надо двигаться дальше, и поэтому мы пойдём к нашу последнюю, наверное, тему на сегодня.
3842.62 3844.06 "Игорь Лабутин" Это кратко о разном.
3844.06 3846.54 "Игорь Лабутин" И здесь у нас довольно много всяких разных мелочей.
3846.54 3856.06 "Игорь Лабутин" Ну, точнее, не мелочей, а сами по себе новости довольно большие, может быть, особенно в том случае, если вы вдруг используете те или иные библиотеки или продукты, про которые я буду говорить.
3856.06 3865.74 "Игорь Лабутин" Но мы решили, что подробно рассказывать про них сейчас особо, у нас нет большой практики с ними, поэтому опишем это в новостях.
3865.74 3870.70 "Игорь Лабутин" А вы уж, если вам интересны эти продукты, посмотрите немножко самостоятельно.
3870.70 3871.70 "Игорь Лабутин" Начнём мы с Dabr.
3871.70 3890.22 "Игорь Лабутин" Dabr - это, если вы помните, мы когда-то даже про него давно рассказывали какие-то новости, когда он только-только начинался, Microsoft, насколько я помню, штука Distribute Application Runtime, то есть это набор, по сути, таких строительных блоков для построения микросервисов, для всяких там клаудов и прочего.
3890.22 3898.74 "Игорь Лабутин" И вышла версия 1.11, просто очередная, но новость попалась на глаза, поэтому релиз - это дело хорошее, надо посмотреть.
3898.74 3905.38 "Игорь Лабутин" Тем более там какие-то, если я смотрю, превью-фичи интересные, то есть явно продукт не стоит на месте, развивается, превью-фичи выпускает.
3905.38 3915.70 "Игорь Лабутин" Ну, в смысле, превью-фичи в нормальном релизе, который можно включить и попользоваться, так что посмотрите, если вы пишете микросервисы, может быть, Dabr вам будет полезно в качестве такого сервис-меша.
3915.70 3928.38 "Игорь Лабутин" Дальше продукт, про который я довольно много видел, он попадался регулярно мне на глаза во всяких там твиттерах, рассылках и так далее, но он был в какой-то там бета-пререлизной версии, поэтому мы про него ничего не говорили, теперь он зарелизился.
3928.38 3932.78 "Игорь Лабутин" Версия 1.0, продукт называется, ох, как бы это произнести, Wolverine.
3932.78 3938.70 "Игорь Лабутин" Вероятно, это название какого-то животного, я уже не помню, кто он там, волка, волка, не помню кто.
3938.70 3940.70 "Игорь Лабутин" Слова, наверное, нет?
3940.70 3944.94 "Игорь Лабутин" Ну, может быть, да, наверное, да.
3944.94 3957.50 "Игорь Лабутин" Короче, версия 1.0, и это набор библиотек, которые, для дотнета, которые могут работать как три, ну, служить трем целям.
3957.50 3969.82 "Игорь Лабутин" Во-первых, это то, что они называют in-memory медиатор, если вы знакомы с паттерном медиатор или в библиотечке от Джимми Моггарда медиатор, вот это что-то похожее, но только там современное, быстрое и вот это все.
3969.82 3979.54 "Игорь Лабутин" Потом, если вам нужен in-memory command path для синхронного процессинга, то пожалуйста, то есть такая внутренняя шина сообщений.
3979.54 3996.14 "Игорь Лабутин" Ну и третий вариант, это asynchronous message backbone for your application, то есть это на самом деле некоторый аналог, который также звался, сейчас, unservice bus, да, у нас была такая библиотечка, которая абстрагировала конкретную реализацию очереди под собой.
3996.14 3998.42 "Анатолий Кулаков" Ну, был, а есть?
3998.42 3999.42 "Игорь Лабутин" Есть, да, была.
3999.42 4001.82 "Игорь Лабутин" Ну, была в смысле, когда-то давно.
4001.82 4016.38 "Игорь Лабутин" Вот это еще одна такая библиотечка, которую можно сказать, вот у нас внутри под капотом Revit, а снаружи через мой интерфейс используйте, значит, эту самую очередь прозрачно, независимо от того, что же там за очередь внизу.
4016.38 4028.26 "Игорь Лабутин" Ну вот этот продукт сильно связан с параллельным продуктом, который делает примерно та же команда под названием Martin, по-моему, мы тоже про него как-то рассказывали, мне кажется, по крайней мере, упоминали уж точно.
4028.26 4029.26 "Анатолий Кулаков" Очень редко, да.
4029.26 4030.26 "Игорь Лабутин" Да, очень редко.
4030.26 4037.26 "Игорь Лабутин" Это для framework для CQRS, я так понимаю, для разработки приложений с CQRS подходом, надо найти.
4037.26 4050.58 "Игорь Лабутин" В общем, если вы где-то рядом вокруг этого, медиаторов, команд басов, всяких шин, сообщений, синхронных общений CQRS, то вот взгляните вы на Wolverine, возможно, это интересная штука для вас.
4050.58 4060.74 "Игорь Лабутин" Mads Christensen, не спит, фигачит экстенджеры, новый экстендер, от него называется Event Timeline, не то чтобы он как-то сильно практически полезен для ежедневной разработки, но иногда бывает нужен.
4060.74 4070.26 "Игорь Лабутин" Это штука, которая позволяет увидеть, что же происходило в вашей Visual Studio, собственно, вот, что происходило в вашей Visual Studio, я все рассказал.
4070.26 4078.06 "Игорь Лабутин" То есть, это на самом деле новая панелька в Output Window, которая позволяет просто посмотреть все действия, которые происходили в вашей Visual Studio.
4078.06 4083.46 "Игорь Лабутин" То есть, тут начался билд, открылся солюшен, поменялась опция, ну и так далее.
4083.46 4085.98 "Игорь Лабутин" Это почему может быть полезно?
4085.98 4088.58 "Игорь Лабутин" Вероятно, просто смотреть, что происходило.
4088.58 4093.62 "Игорь Лабутин" Возможно, это как-то полезно для разработчиков экстенджеров, возможно, это как-то полезно для еще кого-то.
4093.62 4095.78 "Игорь Лабутин" Звучало это примерно следующим образом.
4095.78 4117.58 "Игорь Лабутин" В твиттере было сообщение от Mads со словами типа, "чуваки, а как вы думаете, было бы полезен экстенджер, в котором было бы видно все действия, ну кроме, собственно, тайпинга до кода, которые происходили бы в вашей Visual Studio?" И я этот тикет видел, по-моему, через час или два после егоубликования, там была типа пара ответов всего.
4117.58 4121.90 "Игорь Лабутин" Проходит два дня, и Mads такой, ну вот, собственно, новый экстенджер.
4121.90 4122.90 "Анатолий Кулаков" По заявкам многочисленных подписчиков.
4122.90 4130.10 "Игорь Лабутин" То есть, кому-то, видимо, ну то есть, видимо, ему самому зачем-то это было нужно, он его написал, по сути.
4130.10 4136.82 "Анатолий Кулаков" Я могу представить, что это полезно для разработчиков плагинов, которые хотят подписаться на какой-то ивент для того, чтобы отреагировать в нужный момент.
4136.82 4139.86 "Игорь Лабутин" Не, ну это ты и так можешь подписаться, и без этого окошечка.
4139.86 4140.86 "Анатолий Кулаков" А ты не знаешь на какой.
4140.86 4141.86 "Анатолий Кулаков" Ага.
4141.86 4143.82 "Анатолий Кулаков" Я не понимаю, что в этот момент произошло.
4143.82 4147.58 "Анатолий Кулаков" А так можно посмотреть, что это был за ивент, и уже потом брать и подписываться.
4147.58 4148.58 "Игорь Лабутин" Ну, может быть, может быть.
4148.58 4151.62 "Игорь Лабутин" Либо, чтобы понимать, а что ж ваша студия делает-то сейчас.
4151.62 4153.10 "Игорь Лабутин" Или как вы дошли до жизни такой.
4153.10 4154.46 "Игорь Лабутин" Я что-то нажал, и все сломалось.
4154.46 4158.70 "Игорь Лабутин" Вот идешь туда и смотришь, а, я там переключился туда-туда-то.
4158.70 4161.66 "Игорь Лабутин" Там правда не будет кнопки сделать обратно, но это уже другое дело.
4161.66 4169.62 "Игорь Лабутин" Ладно, дальше от команды Microsoft, а точнее от компании Microsoft появился новый Command Line Tool.
4169.62 4172.02 "Игорь Лабутин" Точнее, это новый T4 Command Line Tool.
4172.02 4176.02 "Игорь Лабутин" У нас уже есть один T4 Command Line Tool, будет теперь другой T4 Command Line Tool.
4176.02 4184.70 "Игорь Лабутин" Входит он в поставку Visual Studio 2022.17.6, и называется TextTransformCore.exe, в отличие от старого, который назывался TextTransform.exe.
4184.70 4188.42 "Игорь Лабутин" У нас, собственно, был уже Command Line Tool, но он был написан под старый фреймворк.
4188.42 4191.02 "Игорь Лабутин" Теперь новый, собранный шестеркой.
4191.02 4209.90 "Игорь Лабутин" Он там пока с недостатками, поддерживает не все, что умел старый, но тем не менее, вот если вам приятно работать с тулами для 1.06, вот теперь есть Core-ная версия, которая ну, вероятно, которая умеет быть там относительно кроссплатформенной и так далее, хотя она, скорее всего, конечно, собрана пока только под винду, потому что студия, собственно, только под винду.
4209.90 4212.10 "Анатолий Кулаков" Ну погоди, это от студии никак не связано.
4212.10 4213.50 "Анатолий Кулаков" Это Command Line Tool.
4213.50 4214.50 "Анатолий Кулаков" Я понимаю.
4214.50 4215.50 "Игорь Лабутин" Отцеплен от студии.
4215.50 4222.22 "Игорь Лабутин" Я понимаю, но я что-то подозреваю, что TextTransformCore.exe скорее всего, вряд ли допустится на Linux.
4222.22 4225.62 "Анатолий Кулаков" Да ладно, раньше Linux умел EXE-шники запускать, и DLL-ки компилировать тоже запускали.
4225.62 4226.62 "Анатолий Кулаков" Ну, моно поставил, и будет.
4226.62 4227.62 "Игорь Лабутин" Да, да, да.
4227.62 4228.62 "Игорь Лабутин" Ладно, посмотрим.
4228.62 4231.98 "Анатолий Кулаков" Подожди, я хочу сказать, что T4 - это же крутая штука.
4231.98 4237.38 "Анатолий Кулаков" Это хорошая новость, потому что T4 - это клевые темплейты, которые живут уже много-много десятилетий.
4237.38 4241.82 "Анатолий Кулаков" Они появились и раньше всяких Razer'ов, и чего-то такое.
4241.82 4244.06 "Анатолий Кулаков" Короче, раньше всего, что только можно было представить.
4244.06 4248.58 "Анатолий Кулаков" Очень удобная штука, очень мощная, и очень много где ее заятся.
4248.58 4253.42 "Анатолий Кулаков" Поэтому это приятно, что тречку они забывают, поддерживают.
4253.42 4263.34 "Анатолий Кулаков" И с ними как раз была проблема с тем, что различные кроссплатформенные реализации имели разные поведения.
4263.34 4265.74 "Анатолий Кулаков" То есть на Windows было одно, на Linux другое.
4265.74 4271.66 "Анатолий Кулаков" А моновская альтернатива T4, она там была какая-то заброшенная, тоже уже давно не юзалась.
4271.66 4278.38 "Анатолий Кулаков" В общем, какой-то одной толзы, которая одинаково себя вела бы везде, грубо сказать, ее не было.
4278.38 4285.54 "Анатолий Кулаков" И с этим была довольно большая проблема, потому что один темплейт работал в зависимости от операционной системы.
4285.54 4286.82 "Анатолий Кулаков" Это как-то не по-современному.
4286.82 4289.54 "Анатолий Кулаков" Это как-то не про кроссплатформенному.
4289.54 4296.22 "Анатолий Кулаков" А теперь у вас темплейты будут одинаково процесситься под любой операционной системой, где поддерживается .NET, и это прекрасно.
4296.22 4302.82 "Анатолий Кулаков" Это решит много наших проблем и, может быть, даст вторую жизнь этому замечательному шаблонизатору.
4302.82 4304.22 "Игорь Лабутин" Отлично, будем решать проблемы.
4304.22 4312.26 "Игорь Лабутин" Так, и последняя новость, буквально недавно тоже попавшаяся на глаза, вышла Avalonia в версии 11.
4312.26 4318.54 "Игорь Лабутин" Она долгое время была в каком-то превью-непревью-предрелизном тоже состоянии.
4318.54 4320.86 "Игорь Лабутин" Все, наконец-таки, Avalonia 11 изрелижена.
4320.86 4325.70 "Игорь Лабутин" Отличный кроссплатформенный UI-фреймворк для .NET, такой WPF-стайл немножко.
4325.70 4328.86 "Анатолий Кулаков" Со скромным названием "Welcome to New Era of App Development".
4328.86 4331.14 "Анатолий Кулаков" Ну-ка, расскажи нам, что там в New Era у нас?
4331.14 4336.94 "Игорь Лабутин" Ну, они на самом деле сильно топят за кроссплатформенность, сейчас поддерживается iOS, Android, BAssembly уже.
4336.94 4339.34 "Анатолий Кулаков" Они всегда были кроссплатформенные.
4339.34 4347.86 "Игорь Лабутин" Ну, это же как бы… Кросс, но такой, как бы, Examarin тоже кросс, но он тоже не совсем кросс, не везде и не по-всякому.
4347.86 4353.18 "Игорь Лабутин" Maui тоже кроссплатформенность, но на Linux, пожалуйста, будьте добры, комьюнити сами как-нибудь обходитесь.
4353.18 4355.42 "Игорь Лабутин" То есть, они все как бы кросс, но со звездочкой.
4355.42 4361.50 "Игорь Лабутин" А Avalonia, соответственно, ну, хорошо, iOS, Android, понятно, был и BAssembly, по-моему, стал.
4361.50 4367.74 "Игорь Лабутин" Preview Support появился для Apple Vision OS будущей и Tizen OS самсунговской.
4367.74 4372.74 "Игорь Лабутин" Вся эта штука полностью поддерживает Native OUT, Head of Time Compilation.
4372.74 4380.06 "Игорь Лабутин" Ну, и там довольно много всяких уже таких UI-специфичных улучшений и исправлений, о которых я не буду сейчас вдаваться в детали.
4380.06 4389.14 "Игорь Лабутин" Понятно, что если… Можно там детально, наверное, на отдельный подкаст прям записывать большой про то, какие изменения претерпевала и претерпела Avalonia.
4389.14 4390.14 "Игорь Лабутин" Лучший доклад.
4390.14 4391.14 "Анатолий Кулаков" И что из этого получилось?
4391.14 4392.14 "Анатолий Кулаков" Ну, да.
4392.14 4400.66 "Игорь Лабутин" Но одна из важных вещей, они довольно сильно переделали документацию, она стала там понятнее, удобнее с ней работать и так далее.
4400.66 4409.14 "Игорь Лабутин" Поэтому если вы хотите попробовать какой-нибудь кроссплатформенный UI-фрейнворк, я бы на самом деле рекомендовал взять Avalonia, если вам все хочется попробовать, что-нибудь на ней написать.
4409.14 4420.70 "Анатолий Кулаков" А iot-trimming, ну, я уточню, что Tizen, Samsung Tizen, это телевизоры, если кто-то не знает, а вот Vision OS это для новых очков от Apple, которая вышла.
4420.70 4424.06 "Анатолий Кулаков" В общем, тоже для них можно теперь писать с помощью Avalonia.
4424.06 4427.06 "Игорь Лабутин" Да, будем посмотреть, что будет.
4427.06 4433.22 "Игорь Лабутин" То есть она вышла-то, я так понимаю, что пока только в девелоперском варианте, как раз чтобы народ начал писать.
4433.22 4435.98 "Игорь Лабутин" Вот уже это превью-саппорт готов.
4435.98 4440.50 "Игорь Лабутин" Плюс-минус, ну, превью и готов - это два, наверное, несовместимых слова, но тем не менее.
4440.50 4441.50 "Игорь Лабутин" Ладно.
4441.50 4442.50 "Игорь Лабутин" Ну что, все.
4442.50 4448.14 "Игорь Лабутин" На самом деле на сегодня у нас более-менее всё, сегодня выпуск получился покороче, новостей не так много, но
4448.14 4453.14 None лето, отпуска, все дела. Так что отдыхаем, готовимся.
4453.14 4463.14 "Игорь Лабутин" Да, ждём осеннего сезона, я думаю, что август, сентябрь, октябрь будут прям довольно горячими преддвери релизов конференций и вот этого всего.
4463.14 4465.18 "Игорь Лабутин" Так что будем посмотреть.
4465.18 4476.54 "Игорь Лабутин" А пока сегодня мы, говоря про конференции, напомнили, рассказали, что у нас есть теперь промокодик на билеты на .next, который будет 15-16 сентября в Москве.
4476.54 4487.78 "Игорь Лабутин" Посмотрели на .NET 8 превью 5, узнали про ReSharper Riders, новый искусственный интеллект, который за вас напишет пул реквесты, код и вообще всё подряд.
4487.78 4493.14 "Игорь Лабутин" Visual Studio 2022-17 7 превью 2, новые фичи.
4493.14 4500.06 "Игорь Лабутин" Посмотрели как Andrew Log рекомендует валидировать ваши iOptions рекурсивно, чтобы всё работало как надо.
4500.06 4509.22 "Игорь Лабутин" Узнали чем живёт комьюнити, посмотрев на Stack Overflow, Developer Survey и кратенько о разном, там кучка новых релизов, всяких плагинчиков и тулов.
4509.22 4510.70 "Игорь Лабутин" Тоже обсудили.
4510.70 4512.62 "Анатолий Кулаков" На этом, наверное, всё.
4512.62 4513.62 "Анатолий Кулаков" Закругляемся.
4513.62 4524.78 "Анатолий Кулаков" Всем большое спасибо, что слушаете нас, также рассказываете везде, где только можно, про наш весёлый подкаст и продвигайте .NET в массы.
4524.78 4533.18 "Анатолий Кулаков" Будем делать, будем обгонять в следующем рейтинге все возможные языки, все возможные фреймворки, всё это мы вместе сделаем.
4533.18 4543.90 "Анатолий Кулаков" Главное, главное помогать друг другу, расшаривать наш подкаст и всячески нас везде лайкать, комментировать во всех платформах, где там слушаете, проставляйте нам все пальчики.
4543.90 4547.62 "Анатолий Кулаков" Я думаю, это нам поможет тоже продвигаться среди новой аудитории.
4547.62 4550.62 "Анатолий Кулаков" Всё, большое спасибо всем, до новых встреч.
4550.62 4555.10 "Анатолий Кулаков" Пока впереди вас ждут новые статьи, новые новости и мы обязательно вам про них расскажем.
4555.10 4561.30 "Игорь Лабутин" Да, всё так, ждите следующих выпусков, а это был 74 выпуск, всем пока.


