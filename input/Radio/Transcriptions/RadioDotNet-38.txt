0.00 11.08 "Анатолий Кулаков" Здравствуйте дорогие друзья, в эфире Radio.net и 38 выпуск уже.
11.08 12.08 "Анатолий Кулаков" С вами сегодня Анатолий Кулаков.
12.08 13.08 "Анатолий Кулаков" И Игорь Лабутин.
13.08 14.08 "Анатолий Кулаков" Всем привет.
14.08 16.44 "Анатолий Кулаков" Спасибо большое всем, кто нас поддерживает.
16.44 22.04 "Анатолий Кулаков" Шары, репост, рассказ друзьям, там 5 звездочек говорят, все в iTunes можно поставить, тоже заходите обязательно.
22.04 27.32 "Анатолий Кулаков" И особая благодарность за помощь нашему подкасту Александру, Сергею и Владиславу.
27.32 29.40 "Анатолий Кулаков" Спасибо друзья за то, что нас поддерживаете.
29.40 39.08 "Анатолий Кулаков" И я напоминаю, что у нас есть Patreon Boosty, если вам этот подкаст как-то помогает по жизни, заходите, не стесняйтесь, высказывайте свою благодарность любым удобным для вас способом.
39.08 46.72 "Анатолий Кулаков" Ну что ж, давай посмотрим, что у нас произошло за то время, пока мы отсутствовали, какие новости накопились, чего интересного нам выпустил Microsoft.
46.72 48.72 "Анатолий Кулаков" Есть ли у нас уже RC2?
48.72 52.20 "Игорь Лабутин" Да, DotNet потихонечку близится к релизу.
52.20 55.04 "Игорь Лабутин" Появился DotNet 6, релиз Кандидат 2.
55.04 62.00 "Игорь Лабутин" Напоминаю, что это все Production Quality, вы уже прямо сейчас можете использовать все в вашем продакшене, и Microsoft это все официально поддерживает.
62.00 73.84 "Игорь Лабутин" Но они сами напрямую говорят, что сейчас вот этот вот RC2 и вся дальнейшая работа будет полностью сфокусирована исключительно на обеспечении более качественного кода.
73.84 81.60 "Игорь Лабутин" Они проверяют, что все фичи, которые они заимплементировали за этот год, друг с другом нормально сходятся, нормально совмещаются, нет никаких конфликтов.
81.60 90.52 "Игорь Лабутин" Они это называют Validate End-to-End Workflow, так что вдруг там что-то с кем-то конфликтует, чтобы это все разрулить, успеть до релиза.
90.52 95.36 "Игорь Лабутин" Все это поддержано и протестировано на Visual Studio 2022 Preview 5.
95.36 104.40 "Игорь Лабутин" При этом Visual Studio 2022 for Mac, она пока еще не поддерживает DotNet 6 RC2, но мы про это чуть-чуть дальше, по-моему, поговорим, про Mac версию.
104.40 115.00 "Игорь Лабутин" В статье про RC2 особо новостей нету, надо сказать, поскольку особо больших новых фичей очевидных между RC1 и RC2 завести вряд ли можно было.
115.00 149.76 "Игорь Лабутин" Тем не менее, они там напомнили, что нас ждет C# 10, мы довольно подробно все рассказывали, напомню, основные ключевые фишки 10 C# это Record Structs, а также Redawn Record Structs, если вам интересно, Global Usings, Implicit Usings, которые на уровне SDK определяются, и Global Usings можно будет посмотреть в... они все равно компиляются в C# файлик, это действительно есть C# файлик с ними, он будет называться app.globalusings.g.cs, он будет находиться в вашем фолдере с общ-файлами, ну или общ-фолдере, точнее.
149.76 162.60 "Игорь Лабутин" Есть еще файл scoped namespaces, всякие константные интерполированные строчки и много магии вокруг самих интерполированных строчек, ну и разные pattern matching, экстенджины, тоже полезно посмотреть.
162.60 188.12 "Игорь Лабутин" Это то, что касается C# 10, и непосредственно связанная с этим штука тем, что довольно сильно перетрясли темплейты для C# проектов, если вы помните, раньше, когда создавали новый проект на пятом .NET, у вас был там стандартный программ CS, там был какой-нибудь main, если это был SPNET проект, у вас появлялся стартап CS файлик, и там был configure services, configure, и вот это все.
188.12 201.20 "Игорь Лабутин" Сейчас теперь этого ничего нету, если вы создаете по дефолту шестой проект на шестом .NET, то у вас будет использоваться minimal API, в общем все вот эти вот новые фичи, которые вы знаете, кроме Global Usings, Global Usings надо включать отдельно.
201.20 216.56 "Игорь Лабутин" При этом, что интересно, WinFormовый проект, он такой для, видимо, совсем суровых чуваков, для WinFormовых темплейтов не стали менять ничего, ну точнее, не ничего, часть поменялась, на top level statement не стали использовать, там до сих пор есть программ CS, и все на месте.
216.56 233.80 "Игорь Лабутин" Кроме темплейтов, да, если вы, кстати, апгрейдите пятый SDK на шестой, у себя в проекте вы никаких, скажем так, сайд-эффектов от этого не почувствуете, с точки зрения именно темплейтов, это дело откатили еще в прошлом релиз кандидате, с тем, чтобы не было у пользователей никаких проблем.
233.80 256.00 "Игорь Лабутин" Интересный кусочек поста относится к вообще MacOS и к Windows ARM64, то есть это те две платформы, которые, ну скажем так, .NET вроде на них работает, но может быть не имеет такой, не знаю, популярности, по крайней мере, у нас в подкасте, да, по сравнению с, естественно, виндовыми и линуксовыми вещами, там где .NET довольно активно используется на десктопах и на серверах.
256.00 290.80 "Игорь Лабутин" Так вот, в DotNet 6 Rc2 есть поддержка ARM64 и X64, вы можете поставить оба SDK, причем они ставятся в разные места, и до этого Rc оно перетирало друг друга, то есть вы не могли поставить одновременно SDK для ARM64 и для X64, и если вы при этом хотите это сделать, то первое дело, что вам нужно сделать, вам нужно заинсталить все предыдущие DotNet 6 билды, которые у вас стояли, все превьюшки, все вообще, все что есть, и только после этого вставить заново DotNet 6 Rc2, соответственно, на ARM64 или X64 версии.
290.80 318.20 "Игорь Лабутин" Есть, похоже, надежда, что какую-то поддержку ARM64 впилят в прошлое SDK тоже в виде каких-то патчей, потому что пока в новости написано, что pre-DotNet 6 builds are not yet ready to install, так что, вероятно, на ARM64 завезут какую-то поддержку старых DotNets, тоже которые, ну с пятым на самом деле непонятно, потому что это вроде как не LTS, а вот 3.1 он вроде LTS, туда, скорее всего, все это завезется, так или иначе.
318.20 343.20 "Игорь Лабутин" При этом какой бы SDK вы ни поставили, ARM64 или X64, он позволяет вам девелопить и под одно, и под другое, то есть оно такое cross-reference друг друга, и, соответственно, вы можете использовать только один SDK, и вообще говоря, цель Microsoft сделать так, чтобы вы ставили все-таки ARM64 SDK на ARM64 машинки, используя только него, ну потому что это нативная архитектура и так далее.
343.20 368.28 "Игорь Лабутин" Так, а вот, да, для SDK как раз-таки они пишут, что они будут использовать, поддерживать только DotNet 6 на ARM64, а вот рантаймы они пропатчат старые рантаймы тоже, то есть DotNet Core 3.1, и возможно пятерку тоже они даже обещают, может быть они пятерку тоже рантайм пропатчат, чтобы поддерживать ARM64, но посмотрим.
368.28 412.52 "Игорь Лабутин" При этом это потребовало некоторых breaking changes, ну не то что потребовало, но они решили, что есть некоторые breaking changes, которые, так сказать, хорошо бы сделать, чтобы нормально сделать удобную поддержку вот этих вот новых, по сути, архитектур, то есть, и это коснулось тестов, то есть если вы запускаете DotNet тест, у него было два параметра -a и -r, это сокращенные версии алиасы на какие-то более длинные, я не помню, -a это по-моему тест-адаптер можно было выбрать, test-runner, test-run адаптер, а -r, что-то еще, так вот -a это теперь shortcut алиас для -architecture, а -r это shortcut для -runtime, по-моему, то есть вы можете выбрать на каком рантайме, на какой архитектуре у вас будет запускаться.
412.52 420.80 "Игорь Лабутин" Это соответственно breaking change, если вы используете в каких-то скриптах короткие версии или алиасы, то надо подумать и переделать на длинные, чтобы не было конфликта.
420.80 467.08 "Игорь Лабутин" И на этом все, на самом деле в RC2 больше ничего такого нету, есть конечно же ASP.NET, ASP.NET никуда не делся, он тоже релизится одновременно, в RC2 завезли не так много всего, там добавили native dependency для Blazor, то есть если у вас есть native VBSMP библиотечка, которая собрана компилятором mscript, причем версия этого компилятора должна совпадать с той версией, которая собирается в dotnet VBSMP runtime, сейчас это 2.0.23, то в этом случае, если у вас есть такая библиотечка css, плюс-плюс-плюс, и написанная нативная, вы можете ссылку на нее оставить в project файле через native file reference, и после этого через daily import, как вы обычно делаете в C#, ее заимпортить и использовать, и все это в браузере будет работать.
467.08 484.68 "Игорь Лабутин" А вторая часть, конечно большая веща для ASP.NET, это minimal APIs, мне кажется это то, что пушит Microsoft довольно активно, то есть отказ от этого старого доброго startup.cs, configure services, всех вот этих конвеншенов, а просто все пишем в едином файлике, minimal APIs, лямбдочки, атрибутики на лямбдах и вот это все.
484.68 506.20 "Игорь Лабутин" Там завезли некоторое количество тоже фишечек улучшений, это во-первых, есть возможность более тонко управлять параметр бандингами, то есть можно сделать следующее, допустим у вас есть какой-нибудь там контроллер, который принимает класс, ну и в примере это класс point, классический демо пример с координатами x и y.
506.20 549.72 "Игорь Лабутин" Так вот вы можете в url сделать так, что в url вы передаете там в конце url после get, get url, амперсант x равно что-то, амперсант, вопросик, точнее, sorry, вопросик x равно что-то, амперсант y равно что-то, а в коде написать в классе point, написать можно два метода, bind async, либо try parse, и соответственно они по определенным правилам будут вызываться во время процедуры байндинга, и вы можете, допустим, набор пропертей распарсить так, что в итоге создастся один объект, ну и всякие такие штуки творить, короче, тонко управлять процессом байндинга, это во-первых, ну и парсинь каких-то кастомных строчек в ваши нужные, значит, объекты.
549.72 585.88 "Игорь Лабутин" Дальше они немножко поменяли fluent API вокруг open API, то есть когда у вас есть minimal API, понятно, что вы можете хотеть, все еще хотите создать свагерспеку на нее, и для этого все это дело у нас размечалось атрибутами, но свагер и open API вообще в спецификации довольно развесистые, там есть много чего, в частности там есть всякие флажки типа что там required, надо, body не required и так далее, теперь это все можно указывать через атрибуты либо fluent интерфейсом, а также группировать ваши API-шки, контроллеры в группы, которые задаются тегами, все это тоже можно делать.
585.88 590.44 "Игорь Лабутин" Ну короче, они всячески развешивают атрибутики вокруг minimal API.
590.44 608.36 "Игорь Лабутин" Из полезного добавились новые анализаторы, во-первых, я не знаю каким образом, но они будут проверять правильность, скажем так, подключения middleware, то есть скорее всего они будут проверять, что у вас нет каких-то конечных middleware, после которых вы еще пытаетесь регистрировать middleware, и они никогда не будут исполняться, ну и так далее.
608.36 614.36 "Игорь Лабутин" Я не проверял работу, но судя по описанию, выглядит так, то есть какой-то минимальной проверку middleware ordering у вас будет.
614.36 625.44 "Игорь Лабутин" Дальше, как я сказал выше, мы, поскольку используем minimal APIs, у нас огромная куча лямбд, и довольно много вещей задаются атрибутами на лямбдах.
625.44 639.28 "Игорь Лабутин" Так вот, многие допускают ошибку, особенно когда лямбда становится чуть-чуть более развесистой, то она начинает разноситься на нескольких строчек, и вот эти атрибутики, которые вы должны повесить на саму лямбду, иногда вешаются на метод, который вызывается внутри лямбды.
639.28 640.92 "Игорь Лабутин" Ну так вот получается в коде.
640.92 644.88 "Игорь Лабутин" И у них в примере, да, достаточно натурально написано, где-то очень легко ошибиться.
644.88 651.00 "Игорь Лабутин" Вот аналайзер проверит, на самом деле вы должны было ли ее повесить на лямбду этот атрибут, а не на метод.
651.00 669.56 "Игорь Лабутин" И дальше есть еще некоторые дополнительные проверки, типа если у вас в qwery проверяется, допускается опциональный параметр, а лямбда у вас при этом принимает неопциональный параметр, то это ошибка, и такого допускать нельзя, потому что что будет писаться в этот параметр, который non-nullable, если в qwery ничего нет.
669.56 671.96 "Игорь Лабутин" Ну вроде как exception, наверное, кидать будет.
671.96 674.92 "Игорь Лабутин" Но аналайзер пытается это находить.
674.92 684.68 "Анатолий Кулаков" Интересная ситуация, мы вроде с этим minimal API пытались уйти от больших тяжелых разъяснительных контроллеров, много слов не писать, все сделать быстрее и быстрее, все написать в одну строку.
684.68 696.32 "Анатолий Кулаков" И здесь приходим к той ситуации, что у нас теперь эта строка должна разбиться на несколько строчек, навесить на нее кучу ко-атрибутов, подержать там внутрь нее open API, роуты и так далее, и так далее.
696.32 701.64 "Анатолий Кулаков" И у тебя получается, что лямбда превращается в такой же полноценный метод контроллера.
701.64 721.52 "Игорь Лабутин" Это правда, при этом сама логика лямбды, которая действительно может просто вызвать какой-то там helper метод, который написан уже в другом файле, в другом классе, полученный через DI, например, чтобы не засорять код контроллера, назовем это так, у тебя кусок бизнес-логики это вообще будет не виден за всеми этими атрибутами, это будет сложно найти, как мне кажется.
721.52 731.08 "Игорь Лабутин" Но видимо это некоторый баланс, ну то есть, не знаю, Microsoft видимо стремится как-то, чтобы попроще было входить в написание, чтобы не было всей этой магии.
731.08 736.24 "Игорь Лабутин" Мы такие привычные ко всяким конфигурации сервисов, конфигурации, всей этой приседанием и конвеншеном.
736.24 742.16 "Игорь Лабутин" Для простого написания модельных примеров, конечно, minimal API вообще хорош, это правда.
742.16 745.64 "Игорь Лабутин" Для демок, конференций, презентаций, вот этого всего.
745.64 747.76 "Игорь Лабутин" Насколько он будет полезен в реальной жизни, не знаю.
747.76 763.00 "Анатолий Кулаков" Ну и для обучения, не забывай, потому что показать студентам одну строчку с роутингом и hello world, это намного легче и меньше травмирует их неокрепшую детскую психику, чем показывать полный MVC с контроллерами, dependency ejection и прочим прочим.
763.00 768.08 "Игорь Лабутин" Это правда, я говорю, это как раз уменьшает порог вхождения, и это важно для студентов, для обучения.
768.08 774.00 "Игорь Лабутин" Ну и да, конференции в принципе все туда же, на слайдик все влезает и так далее.
774.00 785.28 "Игорь Лабутин" Но в конце концов тебе никто не мешает в этом minimal API, в конце написать .add MVC, да, или add controllers, use controllers, и в общем, дальше пойти все равно в те же самые контроллеры.
785.28 797.84 "Анатолий Кулаков" Да, да, и интересно, перерастет ли оно вот этот use case, когда вот только для демок, только для начинающих, только для обучения, уйдет ли это с каким-то понятным, может быть, новым фреймворком или новым подходом в enterprise?
797.84 808.84 "Игорь Лабутин" Ну если enterprise это тот, который, не знаю, там, стремится в кучу микросервисов, которые реально микро, знаешь, там типа 5 endpoints, это уже макросервис, то для таких сервисов может и норм.
808.84 840.28 "Игорь Лабутин" Но просто для таких сервисов, я так понимаю, что из того, что я слышал, частенько там на каких-нибудь языках типа Go такое делают, да, вот реальные микро-пром сервисы, буквально там полтора endpoint, минимальное количество кода, но так блин, на Go получается существенно более компактный код, в смысле, исполнимый файлик-то, он в офигенном более компактный и быстрее работает, ну вот с точки зрения start-up-тайма, да, и у тебя не так, может быть, дорого иметь кучу сервисов, написанных на таком довольно компактной штуке по сравнению с тем, чтобы иметь кучу сервисов, написанных на тут-нете, где там еще куча рантаймов вокруг.
840.28 856.76 "Игорь Лабутин" Конечно, вся эта работа по ready-to-run, head-of-time compilation, потом будет этот profile-guided optimization, вот это все, оно все поможет, и может быть, действительно мы придем к тому, что набросать сервис на пару endpoint проще будет на minimal API, не знаю.
856.76 866.24 "Анатолий Кулаков" Опять же, скорее всего, у тебя количество endpoint никак не связано с тем, насколько быстро он запускается в сервис, он у тебя может раз в год перезапускаться, и при этом у него будет там один endpoint.
866.24 876.16 "Игорь Лабутин" Да, но если мы говорим про запускаться, то тут еще, может быть, важен момент с масштабированием, насколько быстро у тебя поднимаются инстансы, опускаются инстансы, ну то есть фиг знает.
876.16 885.52 "Игорь Лабутин" Короче, действительно, пока мне непонятна практическая ценность этого добра с точки зрения именно применения в больших бизнес-приложениях, но не факт, что Microsoft цельтся в больших бизнес-приложениях.
885.52 886.52 "Игорь Лабутин" Посмотрим.
886.52 911.04 "Игорь Лабутин" И последний момент, что со всеми этими minimal API апдейтами как раз-таки вот часть той работы про посмотреть, что все вместе совмещается, были выяснены, что есть некоторое количество конфликтов имен, там, namespaces и так далее, поэтому в статье приведен ряд переименований, на самом деле, namespaces и всяких helper-классов, которые были вынуждены сделать в RTC2, чтобы не было конфликтов.
911.04 924.20 "Игорь Лабутин" Скорее всего вы этого даже не заметите, вряд ли вы их используете напрямую, но если вдруг, если вы, например, уже как-то хитро пытаетесь залезть в дебри этого minimal API и посмотреть, как он работает, может быть, вам будет полезно знать, что во что переименовалось.
924.20 925.20 "Игорь Лабутин" Ну вот как-то так.
925.20 937.04 "Анатолий Кулаков" .NET MAUI, как вы уже знаете, отложили, и он вместе с большим .NET реализиться не будет, но у него по-прежнему выпускаются превьюшки, и вот вышло недавно превью-9.
937.04 965.08 "Игорь Лабутин" Да, вышло превью-9, там не так много на самом деле изменений, это обновленные контролы, я даже не буду перечислять их список, там добавили некоторое количество новых контролов, и, правда, эти ли старые, добавили более прикольную возможность делать всякие правильные бордеры, красивые скругленные уголочки, тени, и вот это все, видимо, с веяниями того, что появилось в Windows 11, я уж не знаю, что на что повлияло.
965.08 987.84 "Игорь Лабутин" Они, из полезного, они довольно сильно улучшили работу на Android, потому что выяснилось, что если вообще ничего не делать с .NET кодом, да, и просто запускать его в Windows на Android, он довольно медленно и долго работает, потому что, во-первых, долго стартует, потому что, во-первых, он сам по себе большой, там много всего, во-вторых, пока там GIT все аккуратненько скомпилит.
987.84 997.88 "Игорь Лабутин" Можно сделать полный ahead of time compilation, вообще все скомпилить заранее, тогда все стартует быстро, ничего GIT не надо, все замечательно, но у вас размер сборки вырастает прям существенно.
997.88 1013.72 "Игорь Лабутин" И они попробовали сделать то, что называется Startup Tracing Profile, то есть они, это такое, видимо, преддверие того, что будет называться Profile Guided Optimization, то есть они смотрят, какие куски используются при стартапе, и, соответственно, именно только их делают ahead of time.
1013.72 1015.84 "Игорь Лабутин" Остальное все GIT потом скомпилируется.
1015.84 1026.20 "Игорь Лабутин" И надо сказать, что их настолько устроило вот это поведение того, как оно стартует, оно стало быстрее, оно, конечно, медленнее, чем прям нативное приложение, но тем не менее, и поэтому это теперь дефолт.
1026.20 1040.68 "Игорь Лабутин" То есть вот такой вот Startup Tracing Profile, то есть у вас при старте собирается какой-то профайл, который потом используется для того, чтобы сделать ahead of time compilation, и потом это идет в итоговом файлике на уже телефончик, это прямо вот будет теперь дефолт.
1040.68 1055.12 "Игорь Лабутин" Ну и Microsoft говорит, что потихонечку подтягивается вся экосистема вокруг MAUI, уже и DevExpress, и Syncfusion, и Telerik выпустили свои, короче, пакеты контролов для MAUI, так что, если вас это интересует, посмотрите, что у кого появилось.
1055.12 1066.04 "Игорь Лабутин" Действительно, MAUI ждать в этом году нам не стоит, релиз кандидата обещан только в первом квартале 22 года, а General Availability релиз только во втором квартале 22 года.
1066.04 1070.16 "Игорь Лабутин" Так что ждем еще минимум полгода, я так понимаю, до нормального релиза.
1070.16 1072.56 "Анатолий Кулаков" Как ты думаешь, Microsoft будет Visual Studio переписывать на
1072.56 1074.56 "Игорь Лабутин" MAUI? Нет, сомневаюсь.
1074.56 1092.08 "Игорь Лабутин" Судя по тому, что они, мы сейчас поговорим про это, про 22-ую студию на MAGI, где они начали использовать уже нативный прям UI, то есть я так понимаю, что там остался Xamarin, и никаких особо сильных изменений, я не знаю, мне кажется, что UI-фреймворки у Microsoft получаются как-то странные.
1092.08 1096.36 "Игорь Лабутин" То есть начинания вроде все хорошие, но вот непонятно, куда идут.
1096.36 1106.72 "Игорь Лабутин" Вот то, что мы с тобой обсуждали в прешоу немножко, что на этой неделе, соответственно, Microsoft кажется, ну не похоронил, но где-то близко к тому, почти забил на UVP.
1106.72 1112.60 "Игорь Лабутин" Как бы такого не случилось с MAUI после того, как его зарелизит какой-нибудь General Availability, я не знаю.
1112.60 1124.40 "Анатолий Кулаков" Ладно, подождем, посмотрим, а пока судьба интерфейса будущей Visual Studio не решена, у нас появился еще один редактор, который может вам в будущем и заменит эту Visual Studio.
1124.40 1131.52 "Анатолий Кулаков" Ну не то, чтобы совсем новый, этот редактор мог быть вам уже знаком, это Visual Studio Code.
1131.52 1142.08 "Анатолий Кулаков" Она появилась в своей новой реинкарнации, теперь Visual Studio Code может запускаться напрямую из браузера, напрямую из вашего табика прямо в вашем любимом браузере.
1142.08 1147.80 "Анатолий Кулаков" Вам не нужно ничего инсталлировать, не нужно ничего скачивать, вот просто открываете табик и начинаете писать код.
1147.80 1149.96 "Анатолий Кулаков" И это в принципе безумно удобно.
1149.96 1159.40 "Анатолий Кулаков" Итак, Microsoft анонсировала Visual Studio Code в браузере, никакого оригинального названия она не получила, вот просто с такой приставочкой.
1159.40 1173.60 "Анатолий Кулаков" Если вы захотите попробовать этот редактор, вы можете пройти на адрес vscode.dev и там уже непосредственно понаслаждаться без регистрации SMS очень быстрым, удобным и легковесным редактором кода.
1173.60 1181.88 "Анатолий Кулаков" Прежде всего, что хочется сказать, это действительно быстрый редактор, запускается он полностью в браузере, никаких инсталляций не требует.
1181.88 1189.20 "Анатолий Кулаков" Он умеет открывать ваши локальные файлы с вашей локальной машины, ваши локальные проекты и их редактировать.
1189.20 1194.72 "Анатолий Кулаков" Делается это с помощью файла System Access API, который поддерживает современные браузеры.
1194.72 1209.16 "Анатолий Кулаков" Это специальный API в браузерах, который позволяет с вашего разрешения естественно доступаться к файловой системе вашего компьютера, вашего локального лаптопа и оттуда считывать все необходимые данные, файлы, папочки и так далее.
1209.16 1225.36 "Анатолий Кулаков" Нужно признаться, что это отличный шанс для хромбуков и айпадов, чтобы превратить их в настоящие компьютеры для разработчиков, потому что инсталировать что-то на них или скачивать что-то на них было более проблематично, чем на обычные компьютеры.
1225.36 1234.92 "Анатолий Кулаков" Теперь вот достаточно последнего хрома и их можно превратить тоже в IDE, довольно мощные и в большинстве случаев довольно самодостаточные.
1234.92 1240.04 "Анатолий Кулаков" Visual Studio в браузере очень тесно связана с GitHub.
1240.04 1253.72 "Анатолий Кулаков" У нее есть знания про репозитории, pull-requests, GitHub code spaces, то есть она обо всем там знает, умеет клонировать, создавать pull-requests, связывать issues и в общем эта тема там продумана замечательно.
1253.72 1270.04 "Анатолий Кулаков" Также не обошли стороной Ажур репосы, то есть с микрософтовским облаком, который Ажур DevOps, часть его была, то есть там тоже есть интеграция, в общем с этим тоже в порядке все, будут работать.
1270.04 1292.04 "Анатолий Кулаков" Работает это все дело полностью в браузере, чтобы вы понимали, там именно в браузере запускается language service, который парсит ваш текст, обеспечивает полностью навигацию, обеспечивает полностью подсветку синтаксиса, никуда этот код не отсылается, все происходит прямо на вашем локальном компьютере.
1292.04 1299.08 "Анатолий Кулаков" Вроде бы работает быстро, то есть не похоже, чтобы это хоть как-то тормозило, но у этого есть и свои плюсы.
1299.08 1322.80 "Анатолий Кулаков" Так как это ваш локальный компьютер, никакой виртуальной системы за этим не стоит, вы соответственно не получите никакого терминала, никаких консольных утилит, никакой отладки и никакой компиляции, то есть никакой там .NET тест или .NET compile вы запустить не сможете и соответственно никакого дебага, никакой трассировки, никаких профайлеров у вас пока не будет.
1322.80 1333.20 "Анатолий Кулаков" Есть сторонние проекты, которые в принципе нацелены на то, чтобы запускать контейнеры прямо у вас в браузере, без каких-то там виртуалок, а использовать мощности вашей текущей операционной системы.
1333.20 1337.96 "Анатолий Кулаков" Но это все как бы так спекуляции на будущее, пока этого ничего не поддерживается.
1337.96 1347.74 "Анатолий Кулаков" То есть сейчас это просто хороший редактор кода без каких-то претензий на IDE, по крайней мере для компилируемых языков.
1347.74 1362.40 "Анатолий Кулаков" Для недоязыков типа HTML, CSS и прочей Node.js шелупени, которая у вас умеет запускаться непосредственно на JavaScript, там все будет работать в принципе точно так же, как и в нативной Visual Studio Code.
1362.40 1365.32 "Анатолий Кулаков" То есть полностью весь experience можно перенести.
1365.32 1371.60 "Анатолий Кулаков" Поддерживается огромное число плагинов, интеграций, подсветочек и прочего-прочего.
1371.60 1377.40 "Анатолий Кулаков" То есть для каких-то простеньких вещей вы большой разницы с Visual Studio Codem не найдете.
1377.40 1380.92 "Анатолий Кулаков" Еще один интересный момент является синхронизация настроек.
1380.92 1393.08 "Анатолий Кулаков" То есть вы вполне можете все эти шоткаты, сниппеты, темы Visual Studio Code, которые вы себе установили где-то, синхронизировать между разными Visual Studio Codem.
1393.08 1395.88 "Анатолий Кулаков" А я напомню, что их уже есть как минимум три.
1395.88 1399.72 "Анатолий Кулаков" Это обычная Desktop Visual Studio Code, которая с нами с самого начала.
1399.72 1408.36 "Анатолий Кулаков" Далее GitHub Codespaces объявил интеграцию с редактором, с помощью которого можно редактировать прямо репозиторий, из GitHub.
1408.36 1410.52 "Анатолий Кулаков" Это тоже по сути Visual Studio Code.
1410.52 1418.32 "Анатолий Кулаков" И вот этот Visual Studio Code в отдельном табике, который уже не так плотно привязан к GitHub, но зато умеет все остальное.
1418.32 1420.44 "Анатолий Кулаков" Это мажоры, локальную фазовую систему и прочее-прочее.
1420.44 1429.80 "Анатолий Кулаков" Это все три Visual Studio Code и вы можете легко синхронизировать их с помощью специального сервера Settings Sync.
1429.80 1436.52 "Анатолий Кулаков" Вот тоже такая удобная штука, которая позволяет вам в разных энвайроментах иметь удобные, привычные для себя настройки.
1436.52 1437.52 "Игорь Лабутин" Ну, звучит прикольно.
1437.52 1446.28 "Игорь Лабутин" Я не знаю, насколько это действительно полезно там над разработчиком, просто там покомпилять ничего не сделать и зачем открывать браузер со своим локальным кодом.
1446.28 1453.20 "Игорь Лабутин" Проще же держать студию у себя локально и если очень хочется побраузить локальный код, открыть там код, пробел точкой и все хорошо.
1453.20 1475.04 "Игорь Лабутин" Но, наверное, если хочется быстренько посмотреть какой-нибудь гитхабовский, либо не гитхабовский, а например ваш собственный проект, который у вас не склонирован, ну в смысле проект вашей организации, но который не склонирован, может быть действительно это интересная тема, если там лежит в Azure DevOps, например, кинули ссылочку прямо в этот Fibovsky VS Code и он там сам все откроет.
1475.04 1476.72 "Игорь Лабутин" Ну, наверное, имеет смысл, не знаю.
1476.72 1480.96 "Анатолий Кулаков" Да, наверное, разрабатывать никто в этом не будет, по крайней мере, действительно, на C#.
1480.96 1487.80 "Анатолий Кулаков" А если что-нибудь посмотреть или отредактировать какой-нибудь конфиг или поправить мелкий баг, тебе же не обязательно это запускать здесь.
1487.80 1496.44 "Анатолий Кулаков" У тебя уже наверняка настроены какие-нибудь CIDI, тебе достаточно отредактировать, закоммитить, а дальше там уже удаленные машины все теперь билдят, то есть запустят и покажут.
1496.44 1498.96 "Игорь Лабутин" Да, еще бы баги пофиксили сначала.
1498.96 1505.32 "Анатолий Кулаков" Скоро, скоро, вот интеллисенс уже с искусственным интеллектом пришел, который пишет за нас программы, скоро он сам же себе будет баги фиксить.
1505.32 1513.52 "Игорь Лабутин" Да, будет CI, который для кода без багов, и CI, который сначала баги пофиксит, а потом отдаст первому CI, и вот они там будут кодом перекидываться туда-сюда.
1513.52 1529.72 "Игорь Лабутин" Ладно, VS Code в браузере это, конечно, хорошо, но у нас есть все-таки наша Visual Studio, которая тоже потихонечку движется вперед, и мы вот все думали, гадали, когда же будет выпущена Visual Studio 2022, и вот, наконец-таки у нас есть ответ.
1529.72 1536.92 "Игорь Лабутин" Visual Studio 2022 будет выпущена в 8.30 утра по Pacific Time 8 ноября этого года, то есть в 2021 году.
1536.92 1537.92 "Игорь Лабутин" Назваться будет 2022.
1537.92 1542.32 "Анатолий Кулаков" Да, тут интересно сказать, что Visual Studio 2022 будет выпущена в 2021.
1542.32 1549.80 "Игорь Лабутин" Ну а какая-нибудь нормальная версия, когда там починят все детские болезни, будет таки как раз к январю 2022 года, и все как раз сойдется.
1549.80 1550.80 "Игорь Лабутин" Не знаю.
1550.80 1560.76 "Игорь Лабутин" То есть забавный факт состоит в том, что вышел буквально недавно, 12 октября, это важно, вышел Relate Candidate 1.
1560.76 1562.16 "Игорь Лабутин" Ну вышел и вышел, как бы, что такого.
1562.16 1568.84 "Игорь Лабутин" Там не так много изменений было, там есть загадочная строчка, про которую я особо нигде ничего не нашел, называется Add Xcode Support.
1568.84 1571.12 "Игорь Лабутин" Зачем Visual Studio в Маке по саппорту Xcoda?
1571.12 1576.68 "Игорь Лабутин" Ну, наверное, в смысле, это же не Мак даже, это же просто студия.
1576.68 1581.36 "Игорь Лабутин" Что там подержано в Xcode, я не знаю, но, наверное, какая-нибудь ремонт, отладка, что-нибудь на Маке, я не знаю.
1581.36 1582.36 "Игорь Лабутин" Вот.
1582.36 1593.76 "Игорь Лабутин" И что интересно, не важно, они, как и обещали, расширяют список того, чего поддержано в Hot Reload, то есть теперь у вас есть довольно прикольный Hot Reload, но почему-то в тест-коде.
1593.76 1598.40 "Игорь Лабутин" То есть вот мне интересно, зачем мне Hot Reload в тестовом коде?
1598.40 1610.48 "Игорь Лабутин" То есть там, например, написано, что вы можете добавлять тесты, добавлять классы, добавлять Async Code и добавлять новые строчки в XUnit-овые тесты, которые, знаешь, в теории, да, где куча этих данных.
1610.48 1611.48 "Игорь Лабутин" Да.
1611.48 1613.92 "Игорь Лабутин" Вот, вот можно добавлять на лету с Hot Reload.
1613.92 1618.44 "Игорь Лабутин" Я не очень понимаю, на филе это в тестах, в тестах, ну что, добавил тест, запустил, добавил тест, запустил.
1618.44 1623.96 "Игорь Лабутин" То есть тесты по определению должны как-то быстро работать, и Hot Reload там вроде как, наверное, не нужен.
1623.96 1628.28 "Анатолий Кулаков" Может, это они нашли такой minimal surface, на котором это легко очень попробовать и отладить?
1628.28 1634.60 "Анатолий Кулаков" То есть, может, на практике это действительно никому не нужно, но с технической точки зрения сделать легче всего было именно там.
1634.60 1635.96 "Игорь Лабутин" Может быть, может быть.
1635.96 1642.24 "Игорь Лабутин" Ну вот, короче, действительно непонятная такая для меня фича, но тем не менее радует, что Hot Reload список расширяется и это полезно.
1642.24 1643.24 "Игорь Лабутин" Вот.
1643.24 1653.52 "Игорь Лабутин" Ну, я вроде как порадовался, что вышел RC1, добавил даже новость в наш бэклог, чтобы обсудить ее, значит, сегодня на записи, и 19 октября вышел внезапно релиз Кандидат 2.
1653.52 1655.68 "Игорь Лабутин" То есть релиз Кандидата прямо вот в течение недели уже 2.
1655.68 1659.24 "Игорь Лабутин" Что ж будет, так они до 8 ноября успеют еще там штуки 4 наклепать, не знаю.
1659.24 1665.36 "Игорь Лабутин" А в релиз Кандидата 2 там я для себя выводил 3 улучшения.
1665.36 1671.96 "Игорь Лабутин" Во-первых, они улучшили интеллисенс для сурс-генераторов, ну это полезно, то есть, наверное, там что-нибудь не работало, хорошо.
1671.96 1676.40 "Игорь Лабутин" Во-вторых, они заресторили экзамарин профайлер, видимо, что-то отломали в прошлой версии.
1676.40 1680.36 "Игорь Лабутин" А в-третьих, они заимпровили очень важную метрику, называется solution close time.
1680.36 1681.36 "Анатолий Кулаков" Именно close, не load, да?
1681.36 1690.36 "Игорь Лабутин" Да, да, да, именно close, это не load time, не open time, не какой-нибудь там reload time или там clean, build, recompile, я не знаю, что, именно close time.
1690.36 1699.24 "Игорь Лабутин" Нет, у меня бывает, что я закрываю solution и открываю другой, но, как правило, вот это время закрытия, оно прям, ну, ничтожно мало по сравнению с временем открытия следующего.
1699.24 1708.56 "Игорь Лабутин" Интересный, важный момент, что если вы пойдете смотреть на сайт Visual Studio 2022, вы увидите, что у вас есть релиз Кандидат, а есть превью 5.
1708.56 1713.68 "Игорь Лабутин" Я долго пытался найти отличия между ними и пришел к выводу, что отличий между ними нет, это одна и та же версия.
1713.68 1725.28 "Игорь Лабутин" Но есть важный момент, если вы поставите себе релиз Кандидат, то, соответственно, 8 ноября, ну или когда там выйдет General Availability, ваш релиз Кандидат превратится, собственно, апдейтом.
1725.28 1732.88 "Игорь Лабутин" Ну, если вы включите автоапдейт, да, или вы скажете check for updates, он превратится в General Availability, и будет у вас нормальная 22-я релизная студия.
1732.88 1746.24 "Игорь Лабутин" А если вы поставите превью 5, что на данный момент то же самое, что релиз Кандидат 2, то вы получите в 8 ноября или опять же, когда там, вы получите Visual Studio 2022.17.1 превью 1.
1746.56 1750.36 "Игорь Лабутин" То есть, короче, следующую превью после релизной версии.
1750.36 1762.48 "Игорь Лабутин" И поэтому, как бы, Microsoft говорит, что, типа, если вы хотите использовать Visual Studio для production radio applications и так далее, и не хотите получать очень частые апдейты, берите, значит, RCE сейчас.
1762.48 1764.88 "Игорь Лабутин" Он у вас автоматически превратится в GA.
1764.88 1771.04 "Игорь Лабутин" А если вы типа там вышли try out the latest features, то тогда берите, конечно, превью, и там будет все гораздо чаще и интереснее.
1771.04 1772.04 "Игорь Лабутин" Вот.
1772.04 1776.92 "Игорь Лабутин" И вот это такая вот интересная, скажем так, подход, такой интересный подход к тому, как делать.
1776.92 1780.08 "Игорь Лабутин" Я впервые вижу, чтобы одну и ту же версию называли релиз Кандидатом и превью.
1780.08 1785.88 "Анатолий Кулаков" Microsoft как-то часто экспериментирует с вот этими всякими версиями Continuous Delivery для доконечного пользователя.
1785.88 1788.64 "Анатолий Кулаков" Вот в этом году прямо их проперло, мне кажется.
1788.64 1789.64 "Игорь Лабутин" Ну, тем интереснее.
1789.64 1797.32 "Игорь Лабутин" Я думаю, что как раз мы следующий выпуск будем писать, там, незадолго, я надеюсь, до релиза, собственно, посмотрим, что получится.
1797.32 1800.08 "Игорь Лабутин" Сколько релиз Кандидата к тому моменту они выпустят.
1800.08 1805.36 "Анатолий Кулаков" Вообще с этой Visual Studio 64 какая-то муть происходит, если честно.
1805.36 1813.56 "Анатолий Кулаков" Ну, то есть был, естественно, сам шок, что она будет 64-я, потом непонятно, когда она выйдет, потом очень резко она начала развиваться.
1813.56 1824.16 "Анатолий Кулаков" За неделю наклепали два релиз Кандидата, в то же самое время вышла не в том году, которая циферка, еще как бы непонятно, будет ли работать DotNet 6 без нее.
1824.16 1827.80 "Анатолий Кулаков" То есть очень много как-то вокруг нее непонятных вещей творится.
1827.80 1830.08 "Анатолий Кулаков" Все они не то чтобы очень хорошие.
1830.08 1835.84 "Игорь Лабутин" Ну, хорошие, плохие непонятно, они как бы непрозрачные, что ли, и непредсказуемые, я бы их назвал так.
1835.84 1842.20 "Игорь Лабутин" Непрозрачные, ладно, мы относительно привыкли, что, ну, DotNet стало весьма прозрачным, то есть вы можете сходить на GitHub и все посмотреть.
1842.20 1846.00 "Игорь Лабутин" С Visual Studio не так все, ну, это закрытый продукт.
1846.00 1861.76 "Игорь Лабутин" Но частота обновления, она, конечно, была хороша у Microsoft, они довольно регулярно выпускали новые привдюшки и довольно активно туда внедряли все новые фишечки, там, новые языки, ну, в смысле, новые версии языка, новые версии рантайма, SDK там всякие, вот эти все.
1861.76 1867.24 "Игорь Лабутин" Поэтому с прозрачностью тут, наверное, ладно, а вот с предсказуемостью, конечно, да.
1867.24 1870.44 "Игорь Лабутин" Непонятно, что ожидать и непонятно, насколько стабильно она будет к моменту релиза.
1870.44 1876.36 "Анатолий Кулаков" Ну, хорошо, у нас вышла еще одна Visual Studio 2022, но на этот раз for Mac.
1876.36 1878.56 "Анатолий Кулаков" Ты заметил, сколько у нас вообще Visual Studio расплодилось?
1878.56 1888.48 "Анатолий Кулаков" Одних кодов три штуки, теперь еще как бы большая Visual Studio для Windows, Visual Studio для Mac, не считая сторонних IDE-шек, у одного Microsoft-а только этих Visual Studio вполно.
1888.48 1890.68 "Анатолий Кулаков" Ну, зато есть выбор.
1890.68 1902.16 "Анатолий Кулаков" Хорошо, ну, если вы сидите под Mac, выбор у вас, в принципе, не велик, хотя есть, есть кандидаты, но мы в данном случае поговорим именно о Visual Studio 2022 для Mac.
1902.16 1923.04 "Анатолий Кулаков" А вот такая штука тоже есть, я напомню, раньше это был Monodevelop, который Microsoft купила вместе с поглощением Mono, перевила ему иконки, название и запустила это все под своим названием обычным, который знает каждый пользователь, каждый разработчик, но ничего общего с той Visual Studio, на которой мы работаем под Windows, эта штука не имеет.
1923.04 1937.48 "Анатолий Кулаков" И вот все эти не то чтобы долгие, но годы Microsoft пытается хоть как-то мимикрировать под тот User Experience, который уже есть у Windows Visual Studio и прежде всего пытается вычистить из Monodevelop все его баги.
1937.48 1969.52 "Анатолий Кулаков" В данном случае новая Visual Studio сосредоточилась на UI, они полностью обновили UI, сделали его полностью нативным для Mac OS, а раньше это приложение выглядело очень чужеродно, как-то совсем не вливалось в всю экосистему окошечек Mac OS, теперь это все выглядит чистенько, красивенько, Visual Studio сама из себя не перегружена никакими элементами и очень даже приятно на ней что-нибудь пописать.
1969.52 1982.32 "Анатолий Кулаков" Также они увеличили скорость работы и стабильность самой DA, пофиксили кучу багов, уменьшили количество падений и вот прочие такие performance вещи сделали.
1982.32 1993.16 "Анатолий Кулаков" Рассказали также о новой интеграции с Git, то есть это окошко Git Changes теперь выглядит более похоже на то, что есть у большой Visual Studio, вот что не может не радовать.
1993.16 2006.80 "Анатолий Кулаков" В общем, Visual Studio для Mac будет поддерживать .NET 6 и C# 10, безусловно, куда же без этого, и частично поддерживает MAUI проекты, полная поддержка ожидается, соответственно, во втором квартале 2022 года, когда MAUI зарелизится.
2006.80 2022.48 "Анатолий Кулаков" Нужно отдельно отметить, что ARM Apple процессоры M1, которые сейчас на данный момент не поддерживаются, но это все в планах и скоро разработчики обещают добавить такую архитектуру к их IDE.
2022.48 2046.76 "Игорь Лабутин" Ну прикольно, кажется, что Mac версия сильно не дотягивает до того, что умеет полноценная Visual Studio, но и понятно, что старую Visual Studio вряд ли так легко перенести на Mac, а в новой Visual Studio, в Mac версии довольно сложно написать все эти фичи, которые написаны в большой, нужна просто вторая, а то и в двойном размере полноценная команда, чтобы это все сделать, так что посмотрим, куда это будет двигаться.
2046.76 2053.24 "Анатолий Кулаков" Просто интересно, что Microsoft развивает и Visual Studio Code, одновременно конкурирует с Visual Studio for Mac.
2053.24 2066.08 "Игорь Лабутин" Это да, это интересно и непонятно, хотя я не пробовал честно говоря Visual Studio Code именно полноценно разрабатывать на C#, может быть там есть какие-то тонкости, неудобства, ради чего стоит все-таки использовать Visual Studio Code.
2066.08 2071.80 "Игорь Лабутин" Может быть у них есть большие планы туда действительно что-то попортировать из большой студии, какие-то фичи.
2071.80 2081.32 "Анатолий Кулаков" Ну вот, я же упоминал, сейчас Visual Studio большую перейдут на MAUI на кроссплатформе, она откомпилирует под .NET 6 и можно будет перемещать между всеми операционными системами.
2081.32 2084.24 "Игорь Лабутин" Ну а зачем тогда сейчас было бы тратить время, чтобы сделать нативный macOS?
2084.24 2087.84 "Анатолий Кулаков" Ну как-то ж надо это время занять, наверняка будет не за полгода.
2087.84 2091.00 "Игорь Лабутин" А ну да, ладно, так команда непростая, что-то делает.
2091.00 2092.00 "Игорь Лабутин" Тренируется.
2092.00 2093.00 "Игорь Лабутин" Иконочки переписывает.
2093.00 2096.08 "Игорь Лабутин" Там же новые иконки, ты же помнишь, как мы на новом цели студии.
2096.08 2098.36 "Игорь Лабутин" Ладно, поехали дальше.
2098.36 2101.72 "Игорь Лабутин" С новой студией на самом деле есть еще один момент.
2101.72 2109.08 "Игорь Лабутин" Наша новая, 22-я студия означает, что у нас на самом деле, поскольку все 64-битное теперь, то и экстенджины должны быть новые.
2109.08 2127.28 "Игорь Лабутин" И Microsoft, кажется, вложилась немножко в то, чтобы писать новые экстенджины стало чуть проще и запилила плейлист видосиков, их там по-моему 9 штук, за авторством Мэтца Кристенсона о том, как вообще делать, как вообще писать Visual Studio экстенджины.
2127.28 2133.88 "Игорь Лабутин" Мэтц Кристенсон - это такой чувак, у которого написано, ну я не знаю, если я скажу 40 или 50 экстенджинов для студии, я, наверное, не сильно ошибусь.
2133.88 2147.36 "Игорь Лабутин" Он очень плодовитый, понятно, что написав один экстенджин, написать второй, третий уже не так сложно, он реально пишет их пачками, они все очень маленькие, делают их, как правило, одну-две штуки, но делают их настолько хорошо, что прям прикольные экстенджины.
2147.36 2153.56 "Игорь Лабутин" И это как раз-таки серия видосиков за его авторством на тему того, а как вообще писать такие экстенджины.
2153.56 2172.56 "Игорь Лабутин" Причем он начинает прям вот с основ, про то, какой тулинг вам нужен, как вообще все это настроить, как все отлаживать, всякие рассказывает бест-практиссы, чуть ли не до чек-листов, то делай, то не делай, и заканчивает это все тем, как все это выложить на, соответственно, marketplace, чтобы это увидели все остальные.
2172.56 2197.28 "Игорь Лабутин" То есть, если вы задумывались о том, не написать ли вам экстенджин, или не опередив кого-то спортировать чей-нибудь экстенджин на 64-битную студию и занять его место, еще что-нибудь в таком духе, то посмотрите видосики, они все очень коротенькие, там буквально минут по пять, но я так понимаю, что довольно плотный по контенту, и скорее всего там это все не rocket science, то есть нужно просто знать опишку, знать тулинг, и после этого все становится довольно просто.
2197.28 2202.56 "Игорь Лабутин" Так что пишите экстенджины, возможно это будет полезно всем остальным.
2202.56 2206.36 "Анатолий Кулаков" Если вы захотите скопировать какой-то популярный экстенджин, начните с решарпера.
2206.36 2210.04 "Игорь Лабутин" Как ты думаешь, это удастся?
2210.04 2212.00 "Игорь Лабутин" Ну, неожиданный вопрос.
2212.00 2215.92 "Игорь Лабутин" Да нет, удастся, конечно, вопрос размера команды, скорости, времени и так далее.
2215.92 2222.68 "Анатолий Кулаков" Ну да, я думаю, что если вы в одно лицо спортируете решарпер, то вам место в JetBrains гарантировано.
2222.68 2223.68 "Анатолий Кулаков" Отличное, теплое.
2223.68 2231.16 "Анатолий Кулаков" За решарпер я начал говорить не просто так, а у решарпера и у райдера вышли в E-Up!
2231.16 2233.72 "Анатолий Кулаков" версии 2021.3.
2233.72 2238.36 "Анатолий Кулаков" Мы обсуждали уже roadmap на эти версии, посмотрим, чему же нас порадует E-Up!
2238.36 2239.36 "Анатолий Кулаков" уже сейчас.
2239.36 2245.12 "Анатолий Кулаков" Вы можете это все скачать, попробовать, потыкать и обязательно зарепортить, если вдруг что-то у вас там не работает.
2245.12 2254.04 "Анатолий Кулаков" Прежде всего, поддержка Visual Studio 2022 превью уже включена в этот E-Up!
2254.04 2257.36 "Анатолий Кулаков" То есть можно пробовать обе превьюшки, смотреть, как они вместе работают.
2257.36 2261.72 "Анатолий Кулаков" И действительно, все наши ожидания оправдались.
2261.72 2266.16 "Анатолий Кулаков" Решарпер в 64-разрядной студии работает намного быстрее.
2266.16 2272.12 "Анатолий Кулаков" Поэтому, если вдруг у вас решарпер тормозит, якобы, то попробуйте вот эту новую связку.
2272.12 2275.64 "Анатолий Кулаков" Я думаю, что вас ждут какие-то интересные открытия.
2275.64 2281.64 "Анатолий Кулаков" Если мы говорим про функциональность, то добавились QuickFixes для FileScope Namespaces.
2281.64 2283.96 "Анатолий Кулаков" Мы их сегодня уже упоминали.
2283.96 2299.76 "Анатолий Кулаков" Здесь стоит отметить, что вы можете во всем вашем проекте, если вам вдруг понравились эти FileScope Namespaces, типичным решением для QuickFixes перевести все ваши проекты, весь ваш solution просто с помощью одного клика на вот этот новый синтаксис.
2299.76 2303.48 "Анатолий Кулаков" Тоже, соответственно, это можно будет сделать.
2303.48 2304.48 "Анатолий Кулаков" Поддержка Global Usings.
2304.48 2319.24 "Анатолий Кулаков" Из интересного, если, например, у тебя Global Usings нигде не используется, и по правде этот Global Usings не нужно было объявлять, то решаперы подсветят, как и обычные No Usages, тебе это подсветит в коде, и ты можешь это удалить одним QuickFix.
2319.24 2324.16 "Игорь Лабутин" Но только для этого нужно будет сходить в тот файл, где эти Global Usings объявлены.
2324.16 2326.36 "Игорь Лабутин" А ты же его наверняка будешь очень редко открывать.
2326.36 2334.08 "Анатолий Кулаков" Ну и для этого есть специальное окошко, которое тебе подсказывает все диагностики, по-моему, у него называется.
2334.08 2337.48 "Анатолий Кулаков" То есть все проблемы, которые он считает, у тебя могут быть в коде.
2337.48 2345.08 "Анатолий Кулаков" Наверное, в этих диагностиках появится вот эта надпись, если ты хорошо следишь за этим окошком, а надо за ним, по идее, хорошо следить.
2345.08 2352.84 "Игорь Лабутин" Я за ним хорошо слежу, но на моем solution, который я тут недавно открывал, в Ryder, правда не в решапере, там что-то типа около 2000 ворнингов.
2352.84 2358.12 "Игорь Лабутин" Ну, наверное, где-то там был ворнинг, может быть, и ворнинг про Global Usings тоже.
2358.12 2360.44 "Анатолий Кулаков" Надо не запускать, не запускать.
2360.44 2366.16 "Анатолий Кулаков" Вот в самом начале включил и все, и там на 0 поставил, и commit hook написал, чтобы никто не баловался.
2366.16 2367.16 "Игорь Лабутин" Будем стараться.
2367.16 2372.56 "Анатолий Кулаков" Вот еще одну интересную прослойку населения покрыл JetBrains.
2372.56 2377.64 "Анатолий Кулаков" Это те люди, которые очень много любят копировать код из других репозиторий, из GitHub, из TechOverflow.
2377.64 2383.92 "Анатолий Кулаков" В общем, он учел, что многие копируют код, тот, который не совместим с nullable-тайпами.
2383.92 2393.00 "Анатолий Кулаков" Ну, то есть, или в нем уже написаны какие-то вопросики, которые ваш проект еще не поддерживает, или наоборот, вопросиков нет, а в вашем проекте они есть.
2393.00 2408.48 "Анатолий Кулаков" В общем, вот эти копипасты он тоже учел, и, соответственно, вы теперь можете в скопированном коде, например, удалить все nullable-аннотации, которые там были, но если они в solution у вас не поддерживаются, или наоборот, заменить их на JetBrains annotations.
2408.48 2410.60 "Анатолий Кулаков" Тоже очень удобно.
2410.60 2417.88 "Анатолий Кулаков" Интересно, мы с тобой обсуждали недавно про performance улучшения, как надо правильно писать ваши локальные функции.
2417.88 2435.00 "Анатолий Кулаков" И там был некий такой хак, что уменьшить число аллоцированных лямбдочек, аллоцированных делегатиков можно с помощью передачи параметра в вашу функцию и, соответственно, после передачи параметра пометить ее как static, то есть превратить кложи в static local function.
2435.00 2442.20 "Анатолий Кулаков" У ReSharper добавилось такой quick fix, поэтому теперь вы можете это делать очень легко, очень быстро и красиво.
2442.20 2446.80 "Анатолий Кулаков" Вот и таким образом улучшать performance в критикал местах, где вам это, естественно, необходимо.
2446.80 2450.20 "Анатолий Кулаков" Хорошенький метод добавился, это copyCodeReference.
2450.20 2453.80 "Анатолий Кулаков" Он объединил в себя предыдущие методы, плюс переименовался.
2453.80 2471.60 "Анатолий Кулаков" В общем, это такая штука, где вы можете в удобном окошке скопировать имя вашего метода, на котором вы сейчас стоите, или файлик, где этот метод расположен, или имя класса, или ссылку на GitHub, где этот файлик может лежать, или XML document ID и так далее.
2471.60 2480.24 "Анатолий Кулаков" То есть какой-то идентификатор, который может ссылаться на этот метод, или на файлик, или на класс внутри этого метода, который как бы релевантен внутри вашего контекста.
2480.24 2483.64 "Анатолий Кулаков" Тоже удобная штука, я думаю, часто люди будут ей пользоваться.
2483.64 2485.56 "Анатолий Кулаков" Добавились новые ленгвиджи.
2485.56 2497.12 "Анатолий Кулаков" Я напомню, что внутри ReSharper вы можете не только C#-код подсвечивать и работать с ним, но и небольшие кусочки другого произвольного кода ReSharper может понимать.
2497.12 2508.56 "Анатолий Кулаков" Наверняка, если кто-то из вас сталкивался с регулярными выражениями и писал регулярные выражения, то вот сам template, сам шаблон регулярного выражения, он задается не в виде простого текста.
2508.56 2512.36 "Анатолий Кулаков" Там у вас работает подсветка синтаксиса, там работают у вас какие-то подсказки.
2512.36 2514.12 "Анатолий Кулаков" Я не удивлюсь, даже если рефакторинги.
2514.12 2525.32 "Анатолий Кулаков" И такие маленькие колдунчики, такие маленькие ленгвидж инджекшены, они есть не только для Regexp, они есть и для HTML, для CSS, для JavaScript, для JSON, для XML.
2525.32 2528.44 "Анатолий Кулаков" И все это вы можете обозначить в вашем коде.
2528.44 2555.92 "Анатолий Кулаков" То есть, если вы обозначили параметр, что в этом параметре передается строка, но вы обозначили, что там по правде хранится семантика HTML, как только вы начнете присваивать в этот параметр какие-то строчки, ReSharper запустит вам полный анализ этой строки, этой стринги, сделает вам подсветку синтаксиса HTML, начнет вам IntelliSense HTML предлагать, CodeCompletion HTML, в общем, полная красота.
2555.92 2558.52 "Анатолий Кулаков" Вот, тоже интересная штука.
2558.52 2559.72 "Анатолий Кулаков" Вот, добавилось побольше.
2559.72 2567.16 "Анатолий Кулаков" В Rydri, в Rydri все естественно то же самое, что и в ReSharper, плюс добавились некоторые свои моменты.
2567.16 2571.36 "Анатолий Кулаков" В частности, поддержка .NET 6 SDK.
2571.36 2576.04 "Анатолий Кулаков" И начиная с этого EAP, Rydri теперь запускается на Apple Silicon.
2576.04 2584.24 "Анатолий Кулаков" Раньше для этого вам нужно было качать специальный отдельный бранчик Rydri, не основной его веткой, не основной его EAP.
2584.24 2590.20 "Анатолий Кулаков" Но после того, как все тестировали, все проверили, поддержка Apple Silicon включена уже непосредственно в EAP.
2590.20 2597.16 "Анатолий Кулаков" Есть фичи, которые все еще не работают, это Hot Reload и дебаг Blazor для .NET 6.
2597.16 2600.40 "Анатолий Кулаков" Это пока еще в разработке, это пока еще не работает.
2600.40 2610.64 "Анатолий Кулаков" Вот, появился Problem U в Windows, то есть это как раз таки окошко, которое должно указать на все проблемные места, которые, по мнению Rydri, у вас есть.
2610.64 2622.36 "Анатолий Кулаков" Туда включается абсолютно все, и ошибки компиляции, и ошибки Nuget, и какие-то синтаксические ворнинги, в общем, любые-любые подозрительные вещи, которые могут в вашем проекте быть, заходите туда, посмотрите.
2622.36 2626.12 "Анатолий Кулаков" Новый UI для дебаггинга.
2626.12 2646.28 "Анатолий Кулаков" Команда переработала, пересмотрела некоторые моменты, немножко все приукрасила, стало получше, стало покрасивее, надо посмотреть побольше, как теперь на практике дебаг будет себя показывать, потому что старенький дебаг UI был действительно очень-очень сильно кривоват.
2646.28 2674.08 "Игорь Лабутин" Да, он был несколько неочевиден, я пробовал много раз и на самом деле писал много разного фидбэка команде, потому что, ну да, прям как-то, мне в принципе вот этот райдеровский подход к UI, как бы нажми кнопочку слева, открой табочку снизу, потом нажми кнопочку в верхнем тулбаре, откроется, оно поделится пополам, и в правой половинке этого окошка нажми еще одну кнопочку, что-нибудь еще сделай, оно прям вот такое, когнитивно сложно, надо посмотреть, что в дебаге появилось, поменялось.
2674.08 2681.84 "Анатолий Кулаков" Да, действительно, особенно после Visual Studio, когда мы привыкли к немножко другому юзер-экспириенсу, вот этот переход, он очень больный.
2681.84 2690.72 "Анатолий Кулаков" Будем надеяться, что команда и дальше продолжит идти в сторону упрощения и более очевидного не только дебага, но и остального интерфейса райдера.
2690.72 2701.44 "Анатолий Кулаков" Вот райдер научился запускать UVP-проекты прямо под дебагером, раньше нужно было специально оттачиться к какому-то удаленному процессу, вот сейчас это можно делать по-человечески.
2701.44 2714.20 "Анатолий Кулаков" Сейчас можно дебажить Windows Docker контейнеры под .NET, под .NET Core и под .NET Framework, вот раньше это можно было делать только с Linux контейнерами, вот сейчас Windows контейнеры тоже поддерживаются.
2714.20 2720.48 "Анатолий Кулаков" Вот на этом, наверное, все, вот такой вот списочек довольно интересных вещей у нас будет в 2021.3.1 EAPI.
2720.48 2738.28 "Игорь Лабутин" Ну, прикольно, не знаю, буду ли я ставить EAPI, в принципе, интересно посмотреть на дебаг Experience, мне кажется, что пока там шестой додна этой прочей мне не сильно интересен, а вот такие именно визуально юзабельные улучшения, Problems U тот же самый, посмотреть, может быть, будет полезно.
2738.28 2742.48 "Игорь Лабутин" Посмотрю, не знаю, буду ставить, нет, может быть, дождусь просто, когда его зарелизится.
2742.48 2760.84 "Игорь Лабутин" Пойдем дальше, у нас сегодня такой выпуск больше про тулинг, как мне кажется, Visual Studio, Visual Studio, есть еще один тул, который не так полезен для программирования, но очень полезен для проверки ваших гипотез, какого-то такого скрэчпада, как его иногда называют, это LinkPad.
2760.84 2786.24 "Игорь Лабутин" LinkPad существует в двух параллельных ветках, есть LinkPad 5 версии, последняя версия, которая поддерживает .NET Framework, то есть если вам нужно что-то проверять на .NET Framework, используйте LinkPad 5, и есть LinkPad 6, который поддерживал собственно .NET Core, и 5.NET, и вот вышла бетка LinkPad 7, которая теперь поддерживает .NET Core 3.1, .NET Core 5, и .NET 6 теперь.
2786.24 2795.36 "Игорь Лабутин" Это пока бетка, но она довольно стабильная, я себе поставил, и поэкспериментировал, немножко прям выглядит, и работает очень хорошо.
2795.36 2808.88 "Игорь Лабутин" Вы можете прямо для вашей кверки, которую вы написали, кусочка программки на C#, в дропдауне выбрать, на runtime запускать, и он будет запускать соответственно на 3.1, на 5.0 или на 6.0, ну в зависимости от того, что у вас установлено.
2808.88 2815.48 "Игорь Лабутин" Вот у меня сейчас 6.0 SDK не стоит, он говорит типа извини, на 6.0 запустить не смогу, а на 3.1 и на 5.0 все, пожалуйста, можно запускать.
2815.48 2828.80 "Игорь Лабутин" Эта версия LinkPad полностью поддерживает Windows ARM 64, включая дебаггинг, так что если у вас вдруг, кто у нас на Windows ARM, все в фейсбуке, вот если он, то соответственно, можете смело ставить, все будет работать.
2828.80 2833.92 "Игорь Лабутин" У него есть нативная поддержка Entity Framework 6.0, то есть он знает тонкости работы EF 6.0.
2833.92 2839.80 "Игорь Лабутин" Я никогда не использовал LinkPad с базами данных, поэтому ничего не смогу сказать, что же там такого нативного и что он делает.
2839.80 2861.12 "Анатолий Кулаков" Посмотри, тут просто LinkPad с базами данных и LinkPad с Entity Framework это вообще абсолютно два разных юзкейса, потому что он как бы поднялся и стал знаменит на основании того, что он напрямую может коннектиться к базе данных и выдавать через прекрасный линку синтаксис полностью любые кверики к базе данных без всякого Entity Framework.
2861.12 2867.96 "Игорь Лабутин" Я вот знаю, именно поэтому я даже пробовал немножко кверить им базы данных напрямую, свои локальные, которые у меня на компе там тестовые лежат.
2867.96 2880.20 "Игорь Лабутин" И, ну, я больше привык к менеджмент студии, поэтому у меня как-то не сильно пошло, вот, но вот там прям вот написано, что типа в релиз ноутсах, что вот мы полностью поддержим EF Core 6.0.
2880.20 2883.96 "Игорь Лабутин" Я не знаю зачем, но, наверное, зачем-то надо.
2883.96 2884.96 "Игорь Лабутин" Вот.
2884.96 2899.44 "Игорь Лабутин" Все это работает сайт-бай-сайт с LinkPad 5, причем у 7 пока на бета, у него даже нет инсталлера, то есть вы просто качаете дипчик и там внутри буквально десяток файликов, причем половина из них, чтобы там есть типа x64 версия, x86 версия и арб64 версия, соответственно три x-шника.
2899.44 2903.08 "Игорь Лабутин" Так что все очень компактно, все просто берет и работает.
2903.08 2911.24 "Игорь Лабутин" Оно автоматом подхватило все мои кверики из прошлого LinkPad, то есть вы вполне можете использовать ваши запомненные кверики, если они и остались.
2911.24 2918.08 "Игорь Лабутин" Единственное, что понятно, если там есть референсы на .NET Framework, то они будут игнорироваться.
2918.08 2930.00 "Игорь Лабутин" Лучше всего, конечно, если вы хотите использовать кверики, использовать какие-нибудь там нетстандартные библиотечки либо Nuget пакеты, которые таргетят и то и другое, и тогда LinkPad будет автоматически правильно использовать нужные бинарнички.
2930.00 2955.12 "Игорь Лабутин" При этом есть еще такая штука, если вы хотите писать какие-то общие кверики, у вас есть возможность использовать ifdef, потому что LinkPad определяет специальный символ при процессоре, netcore большими буквами, и вы можете в своих квериках понимать, собственно, если нетcore определен, значит вы работаете под седьмым или шестым LinkPad, а если вы работаете под пятым LinkPad, то этого символа не будет.
2955.12 2959.00 "Игорь Лабутин" Но это позволяет, соответственно, как-то в кверике сделать какой-то if на тему, кусочка кода.
2959.00 2968.08 "Игорь Лабутин" Прикольно, что мне понравилось, на самом деле то, ради чего я поставил себе седьмой LinkPad, это на самом деле отличный способ поиграться с новым C#.
2968.08 2983.92 "Игорь Лабутин" То есть у меня всегда есть проблема, ну окей, я хочу попробовать новый C#, но то есть это надо либо придумать себе какой-нибудь проект, либо просто в очередном новом консольном тулзе Visual Studio попытаться что-то там поделать, новые какие-то фичи.
2983.92 3008.28 "Игорь Лабутин" А здесь в LinkPad все прикольно, у него есть встроенная, так сказать, ну это не help, это такая библиотека сэмплов, и там есть сэмплы по всем фичам C#, соответственно, восьмого, девятого, десятого, разбитого по папочкам, разбитого на отдельные, собственно, кверики, которые вы можете просто подергать, там прям все комментариями объяснено, что вот так, тут эдак, прям очень удобно, их можно поредактировать, ну и соответственно, поиграться с этим всем.
3008.28 3014.64 "Игорь Лабутин" Мне прям очень понравилось, как вот именно такой Playground Scratchpad для новых версий языка, я как-то раньше для этого не использовал.
3014.64 3025.96 "Анатолий Кулаков" Ну да, я тоже встречал очень много уроков, надо признать, что LinkPad был специально заточен под такую функцию, вот как типа самостоятельного или полусамостоятельного осваивания каких-то техник.
3025.96 3047.96 "Анатолий Кулаков" Там есть не только для языков, но и для различных популярных библиотек, вы наверняка можете найти вот для некоторых библиотек это такие туториалы бесплатные, для некоторых библиотек они есть платные, распространяются, то есть если вы никогда не пробовали для самостательного изучения вот использовать LinkPad, попробуйте бесплатные версии, я думаю, вам вполне хватит, чтобы получить тот экспириенс и понять, интересно вам это или нет, но вещь действительно стоящая.
3047.96 3058.76 "Игорь Лабутин" Да, на самом деле я тут видел как-то доклад Джо Албахари, собственно, автора этого LinkPad, он на самом деле даже свои презентажки делает из LinkPad, у него есть специальный презентейшн мод, который позволяет, собственно, практически заменить PowerPoint.
3058.76 3095.96 "Анатолий Кулаков" Да, мне сразу на ум приходил Албахари, когда он объяснял нейронные сети, он прямо в LinkPad в процессе всего доклада объяснял, что такое персептроны, нейронные связи и прочие вот эти глупости, прямо там же писал код, и вы видите все, как это происходит, как это сразу визуализируется, и LinkPad, естественно, может визуализировать намного больше, чем обычная консоль, он умеет там строить таблицы, умеет строить графики, умеет показывать картинки и много чего еще умеет, то есть визуализация у него довольно мощная, и да, доклады у него получаются красочные, интересные, сочные и сразу с лайв-демками, с кодом, который можно скачать и самому же попробовать.
3095.96 3104.48 "Анатолий Кулаков" Интересно, кстати, LinkPad сравнить со всякими юпитерными ноутбуками, насколько вот этот experience развит и там, и там.
3104.48 3112.32 "Анатолий Кулаков" Понятно, что их используют в разных местах, но мне кажется, вот для каких-то таких вещей, типа попробовать изучить, вот здесь ниша у них довольно сильно пересекается.
3112.32 3125.48 "Игорь Лабутин" Да, наверное, пожалуй, ты прав, может быть действительно для там Jupyter Notebooks и Python-чик какой-нибудь сравним с этим, я не знаю, насколько там прям, типа, presentation и вот это все, но именно для Playground, наверное, действительно прикольно, вот.
3125.48 3126.48 "Игорь Лабутин" Ну ладно, давай дальше.
3126.48 3135.68 "Анатолий Кулаков" Дальше, захотелось немножко уйти от наших EDS-шек, потому что мы про EDS-шек уже целый час разговариваем, вот, небольшой апдейт произошел на Nuget.org.
3135.68 3139.40 "Анатолий Кулаков" Вообще, Игорь, ты часто заходишь на Nuget.org, на именно веб-сайт?
3139.40 3146.00 "Игорь Лабутин" Наверное, нет, но бывает очень редко, когда меня туда выводит Google, если я что-то ищу по какому-то конкретному пакету.
3146.00 3153.88 "Игорь Лабутин" Я знаю, зачем я туда иногда захожу, чтобы там нажать кнопочку "Link to source", если мне почему-то не очевидно, где он лежит на GitHub.
3153.88 3184.56 "Анатолий Кулаков" Ну вот Nuget, как признаются авторы, уже более 4-х лет не обновлял свой веб-дизайн, вот, и многие люди считают, что это ему критически необходимо, поэтому Nuget, вот они владельцы, организаторы, сделали небольшой опросик, в опросе поучаствовало 700 человек, в котором они спросили, что вы хотите от веб-UI самого Nuget, как его улучшить, чего вы ожидаете, что вам нужно сделать и прочие-прочие вещи.
3184.56 3191.20 "Анатолий Кулаков" Вот, они все это сколлектили, собрали, проанализировали и сделали первый шаг к улучшению Nuget.org.
3191.20 3209.00 "Анатолий Кулаков" Вот, и самое внимательное уже могли заметить, самое, наверное, очевидное, что произошло, это то, что в основная теперь вкладка, когда ты открываешь страничку пакета, основная вкладка выражает README самого пакета, самого проекта.
3209.00 3224.44 "Анатолий Кулаков" Вот, если кто не знал, то файл README можно вложить непосредственно в ваш пакет, это можно сделать различными способами, например, указав ссылку на README в Носпике или рекомендованный способ указав ссылку в файле проекта.
3224.44 3229.80 "Анатолий Кулаков" Вот, и после сборки пакета ваш пакет будет знать, где находится README.
3229.80 3232.48 "Анатолий Кулаков" Вот, и этой информацией как раз пользуется Nuget.org.
3232.48 3239.40 "Анатолий Кулаков" Он отображает красиво README-страничку, даже вместе с некоторыми картинками, если эти картинки расположены на доверенных ресурсах.
3239.40 3245.84 "Анатолий Кулаков" В общем, это все выглядит так довольно красиво, хипстерски и в принципе, как у JS-ников уже довольно-таки давно.
3245.84 3252.04 "Анатолий Кулаков" Если вы вставили плагины к Visual Studio Code, то, наверное, вы с такой картинкой уже сталкивались.
3252.04 3254.48 "Анатолий Кулаков" Вот, это действительно намного удобнее, чем было раньше.
3254.48 3265.80 "Анатолий Кулаков" Они почистили очень хорошо правую колоночку, то есть там, где различная дополнительная статистика об этом пакете, дополнительные ссылочки, куда везти, как открыть, где отладить.
3265.80 3268.72 "Анатолий Кулаков" В общем, там это все было тоже прочищено и улучшено.
3268.72 3274.44 "Анатолий Кулаков" В общем, Nuget.org, как по мне, так стал намного чище, прозрачнее, понятнее.
3274.44 3277.20 "Анатолий Кулаков" И при этом вроде не утерял свои привычности.
3277.20 3282.88 "Анатолий Кулаков" То есть новый пользователь, который давно привык к старому UI, чувствует себя там довольно комфортно.
3282.88 3287.24 "Анатолий Кулаков" Никаких вот этих проблем с кардинальной переработкой всего не было.
3287.24 3294.92 "Анатолий Кулаков" В планах у них также обработать остальные фичи, которые они собирали в своем опросе.
3294.92 3307.08 "Анатолий Кулаков" И одна из первых, самых важных и запрашиваемых – это поиск по target framework, когда вы ищете что-то с учетом того framework, на котором эта библиотека должна работать.
3307.08 3309.88 "Игорь Лабутин" Ну да, я вот сейчас зашел ради интереса посмотреть.
3309.88 3315.72 "Игорь Лабутин" Не сказать, что там действительно как-то сурово все поменялось, это на самом деле, наверное, хорошо.
3315.72 3325.84 "Игорь Лабутин" Изменения такие довольно незаметные с одной стороны, но с другой стороны действительно стало немножко визуально почище и побольше свободного места, повоздушнее, назовем это так.
3325.84 3326.84 "Игорь Лабутин" Похипстернее.
3326.84 3332.96 "Игорь Лабутин" Ну пусть будет похипстерее или как ты там это назвал.
3332.96 3334.92 "Игорь Лабутин" Давай последнюю тему на сегодня рассмотрим.
3334.92 3351.56 "Игорь Лабутин" Как мы сказали, у нас будет скоро релиз Visual Studio 8 ноября, а при этом с 9 по 11 ноября пройдет .NET Conf 2021, где будет собственно официально зарелизен .NET 6 и все причитающиеся вокруг кусочки SPNET и все такое, C# 10.
3351.56 3362.68 "Игорь Лабутин" Вот, для такого собственно важного события Microsoft как обычно устраивает .NET Conf, где будет большой набор разных фильмических докладов вокруг .NET 6 и не только.
3362.68 3367.88 "Игорь Лабутин" Конференция пройдет 3 дня, с 9 по 11 ноября, она в Америке, поэтому в основном всего по американскому времени.
3367.88 3381.52 "Игорь Лабутин" Но кстати сайт у них очень удобный, можно посмотреть прям с учетом, он по дефолту показывает твой часовой пояс, поэтому не удивляйтесь, когда у вас будет день первый, это типа там среда-четверг, день второй - четверг-пятница, ну как-то так они показывают, прикольно.
3381.52 3396.08 "Игорь Лабутин" Первый день в основном посвящен именно всяким новинкам, то есть это будут доклады в основном ребят из Microsoft, Pro, C# 10, F# 6, мы кстати почти не касались F#, но там что-то видимо тоже менялось и будет доклад от Дона Сайма, что же такого в F# 6.
3396.08 3406.80 "Игорь Лабутин" Ну вот Reload, Minimal API, C# Core с Razer, Blazer, ну в общем это такие, все те хайлайты, которые мы с вами весь год обсуждали в этом подкасте, в основном про Dotnet 6.
3406.80 3432.48 "Игорь Лабутин" На второй день будет больше такой прикладной штуки, тоже около Microsoft, но вокруг Dotnet, то есть это всяческие обновления в Ажуре, Performance вокруг этого, Serverless, Machine Learning, те самые Jupyter Notebooks, GraphQL, Internet of Things, ну в общем все прикладные вещи, которые мы пишем на Dotnet или для Dotnet или вокруг Dotnet.
3432.48 3463.20 "Игорь Лабутин" Здесь уже более разнообразный состав спикеров, а на третий день там будет вообще все такое около вокруг Dotnet, то есть там и про MAUI поговорят, и про OpenTelemetry, и про архитектуру, но кстати второй день тоже немножко будет архитектуры, и про кроссплатформенную разработку, и там уже в третий день количество докладчиков просто огромное, и они не только из Microsoft, а из всяких разных сторонних компаний в том числе, так что такой интересный мне кажется день возможно будет, на самом деле и первый и второй тоже вполне достойны того, чтобы на них посмотреть.
3463.20 3473.72 "Игорь Лабутин" Посмотрите на программу, программа уже висит на сайте, возможно вы-то выберете себе что-то интересное, интересующее для вас, и из первых рук узнаете, что там новенького произошло.
3473.72 3489.44 "Анатолий Кулаков" Да, просто огромное число докладов, шикарный спикер, я очень много вижу знакомых фамилий, ну кажется Microsoft действительно привлек сюда и классных инженеров, и классных евангелистов, и много интересных разработчиков, прямо программа крутая.
3489.44 3520.84 "Игорь Лабутин" Да, и надо заметить, кстати, что например некоторые доклады будут читать реальные ребята, которые прям разрабатывали фичи, то есть например Hot Reload будет рассказывать Дмитрий Лялин, который, как я понимаю, был собственно ледом в разработке этой фичи, то есть мы от него практически не знаем, мы от него ничего не слышали, никаких докладов, но вот он лидил эту разработку, он про нее очень хорошо знает, в том числе технически, и это здорово, что они не девелоперы-адвокаты будут рассказывать про какие-то новые фичи, а прямо вот ребята, которые их писали.
3520.84 3532.04 "Анатолий Кулаков" Да, именно поэтому и сделали первый день такой более анонсовый, здесь будут более такие высокие шишки, которые вам высокоуровнево сделают красивые анонсы, про все расскажут, а остальные два дня, похоже, будут инженеры шпарить со всех углов.
3532.04 3555.92 "Игорь Лабутин" Ну там и во второй день хватает девелопер-адвокатов наверняка, и в первой наверняка есть инженеры, но действительно вот она скорее больше тематическая разбивка, но действительно смотрите на то, кто рассказывает, то есть понятно, что Схонхансельман конечно сделает какое-нибудь шоу, а вот такие инженеры наверняка вам расскажут, ну если не там хардкорный доклад, как мы это любим, но по крайней мере довольно низкоуровневый и полезный практически с точки зрения.
3555.92 3564.00 "Анатолий Кулаков" Ну а если вам лень все это смотреть, то слушайте наш подкаст, мы наверняка какие-нибудь интересные и хорошие мысли отсюда выберем и обязательно вам осветим.
3564.00 3566.76 "Игорь Лабутин" Это если нам будет лень смотреть, посмотрим.
3566.76 3569.48 "Игорь Лабутин" Итак, давайте посмотрим, о чем мы сегодня поговорили.
3569.48 3575.24 "Игорь Лабутин" У нас вышел DotNet 6 релиз кандидат 2, не так много новенького, но немножко обсудили.
3575.24 3580.96 "Игорь Лабутин" Узнали про планы MAUI и превью 9, ждем еще полгода, пока оно не зарелизится.
3580.96 3591.60 "Игорь Лабутин" Visual Studio Code теперь доступен в браузере, можно там прям практически полноценный IDE, только нельзя компилировать, отлаживать и запускать, а так все почти как IDE.
3591.60 3593.04 "Игорь Лабутин" А так прямо IDE.
3593.04 3603.44 "Игорь Лабутин" Из нормальных IDE изобрели интересные планы по запуску Visual Studio 2022, а также вышло превью 5, она же релиз кандидат 2, никогда не думал, что я так скажу.
3603.44 3611.92 "Игорь Лабутин" Visual Studio 2022 для Mac обновилась и там доступны превью, ну там и первая и уже сразу вторая доступны за то время, пока мы писали подкаст.
3611.92 3621.84 "Игорь Лабутин" Для Visual Studio мы узнали, что в принципе можно писать экстенджены, сюрприз, и Мэтт Скристенсен в своем плейлисте рассказал, как это можно делать.
3621.84 3630.28 "Игорь Лабутин" Из еще нормальных IDE ReSharper Rider появился YAB версии 2021.3, там довольно интересные фичи, смотрите, кому интересно.
3630.28 3635.44 "Игорь Лабутин" LinkPad 7 бета-версия, если вам хочется потрогать Death Note 6 и C# 10.
3635.44 3639.88 "Игорь Лабутин" И например, кстати, не хочется ставить 22-ю студию, это прекрасный вариант.
3639.88 3643.52 "Игорь Лабутин" Я не уверен, что 10-я C# заработает в 19-й студии, наверное не заработает.
3643.52 3652.08 "Анатолий Кулаков" Слушай, это будет смешно, когда студия 19-я не будет поддерживать Death Note 6, а вот LinkPad будет, и он будет мощнее, чем вся IDE.
3652.08 3655.00 "Игорь Лабутин" Да, будем программировать к LinkPad, чего такого.
3655.00 3657.80 "Игорь Лабутин" Там отладчик даже есть, в общем почти все готово.
3657.80 3666.52 "Игорь Лабутин" NuGetOrg обновил детали, странички для пакетджей, стало по хипстере, или как мы там правильно это обозвали.
3666.52 3672.64 "Игорь Лабутин" Ну и соответственно, 9-11 ноября будет .NET Conf, смотрите, наслаждайтесь тем, что нам приготовил .NET.
3672.64 3683.72 "Игорь Лабутин" И надо сказать, буквально сегодня видел твит от Стивена Тауба про то, что он там где-то уже подготавливает потихонечку репозиторий .NET к тому, чтобы обновить версию на 7-ку.
3683.72 3686.00 "Игорь Лабутин" Так что скоро начнем говорить про 7-ой .NET.
3686.00 3691.24 "Анатолий Кулаков" Ну что ж, готовимся все к большому празднику, я надеюсь, что мы еще с вами увидимся до этого момента.
3691.24 3695.48 "Анатолий Кулаков" Ну а затем все, всем до новых встреч, пока.
