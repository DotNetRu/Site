0.00 7.02 UNKNOWN [музыка]
7.02 16.02 SPEAKER_01 Здравствуйте, дорогие друзья! В эфире Radio.net и с вами не только его постоянные ведущие, а в частности Анатолий Кулаков и Игорь Лабутин, всем привет!
16.02 19.02 SPEAKER_01 И еще целая гора каких-то непонятных лиц.
19.02 21.02 SPEAKER_01 Друзья, давайте по порядку представимся, кто вы такие.
21.02 23.02 SPEAKER_01 Я вас буду называть в порядке, как вы у меня есть.
23.02 25.02 SPEAKER_01 Евгений, ты кто? Ты зачем здесь?
25.02 28.02 SPEAKER_01 Да, всем привет. Меня зовут Евгений.
28.02 32.02 SPEAKER_01 Я дотнет-разработчик, около 10 лет.
32.02 35.02 SPEAKER_01 Сейчас нахожусь в Армении.
35.02 40.02 SPEAKER_01 Работал в различных продуктовых и отсорсивных компаниях.
40.02 43.02 SPEAKER_01 Вот это, если коротко, про мой скромный опыт.
43.02 47.02 SPEAKER_01 Фактически, все вот эти 10 лет на дотнете.
47.02 50.02 SPEAKER_01 Хотя бы, держи, ты хотя бы дотнетчик, да, уже хорошо.
50.02 52.02 SPEAKER_01 Так, Игорь.
52.02 54.02 SPEAKER_01 Игорь, какой? Ты про меня?
54.02 56.02 SPEAKER_01 А, нет, тебя уже все видели. Нет.
56.02 59.02 SPEAKER_01 Не, ну я могу рассказать. Подожди, подожди, подожди.
59.02 61.02 SPEAKER_01 Может быть, все меня слушают.
61.02 62.02 SPEAKER_01 А, никто не видел.
62.02 64.02 SPEAKER_01 Никто, во-первых, не видел.
64.02 65.02 SPEAKER_01 Это Игорь.
65.02 68.02 SPEAKER_01 Ой, прикольно, ты правильное место для меня, в том числе, показываешь.
68.02 71.02 SPEAKER_01 Прекрасно. Мы, интересно, у всех одинаково, да, так нарисованы?
71.02 72.02 SPEAKER_01 На записи.
72.02 73.02 SPEAKER_01 Нет.
73.02 76.02 SPEAKER_01 Ну, ладно. Значит, Толя будет показывать рандомные места.
76.02 80.02 SPEAKER_01 Да, я на самом деле дотнет-разработчик.
80.02 82.02 SPEAKER_01 Очень часто меня, почему-то, называют архитектором.
82.02 90.02 SPEAKER_01 В дотнете я с 2008 года, примерно, придя туда на 3.5 SP1.
90.02 92.02 SPEAKER_01 И так на нем долго-долго-долго проработал.
92.02 96.02 SPEAKER_01 Сейчас немножко поменьше иногда на дотнете.
96.02 102.02 SPEAKER_01 То есть не фуллтайм дотнет-разработчик, но в целом остаюсь на дотнете, пишу на дотнете и так далее.
102.02 104.02 SPEAKER_01 Так что, да, кто меня не видел, всем привет.
104.02 106.02 SPEAKER_01 Так звучит Игорь.
106.02 108.02 SPEAKER_01 Так, теперь Игорь второй.
108.02 110.02 SPEAKER_01 Да, всем привет.
110.02 117.02 SPEAKER_01 Меня зовут Игорь, я занимаюсь дотнетом уже больше 15 лет.
117.02 123.02 SPEAKER_01 Занимаюсь разработкой, в последнее время больше руковожу людьми.
123.02 126.02 SPEAKER_01 И последнее время, ну, проработал в разных компаниях.
126.02 136.02 SPEAKER_01 Сейчас работаю в компании, которая занимается автоматизацией подбора персонала в России.
136.02 138.02 SPEAKER_01 Ну, собственно, нахожусь я в Москве.
138.02 140.02 SPEAKER_01 Это неплохо, то есть ты самые лучшие вакансии можешь подыскивать, да?
140.02 142.02 SPEAKER_01 Прямо автоматизированно.
142.02 148.02 SPEAKER_01 Ну, мы в основном занимаемся автоматизацией именно подбора массы персонала.
148.02 154.02 SPEAKER_01 То есть это всякие продавцы, ритейл.
154.02 156.02 SPEAKER_01 Ну, окей, окей.
156.02 158.02 SPEAKER_01 Так, следующий, Сергей.
158.02 162.02 SPEAKER_01 Всем привет, Сергей Бенденко.
162.02 168.02 SPEAKER_01 Я разработчик, у меня стажер лет 20 примерно, в дотнете примерно лет 8.
168.02 173.02 SPEAKER_01 Автор канала дотнет, разработчик в Телеграме.
173.02 181.02 SPEAKER_01 А так, в основном, ну, я на одном месте в небольшой компании.
181.02 184.02 SPEAKER_01 У нас, правда, фреймворк еще.
184.02 189.02 SPEAKER_01 Еще пока не доросли до новых дотнетов, но последними версиями активно интересуюсь.
189.02 192.02 SPEAKER_01 Я за новостями, за всеми следую.
192.02 197.02 SPEAKER_01 У вас одно приложение, вы там не можете как-нибудь микросервисик рядом поставить на новом фреймворке?
197.02 199.02 SPEAKER_01 Приложений несколько, но я так пытаюсь немножко.
199.02 207.02 SPEAKER_01 Там ребята такие очень консервативные, поэтому я пытаюсь побивать новинки, но с трудом получается.
207.02 213.02 SPEAKER_01 Ну да, мы по статистике как раз в прошлом выпуске смотрели, что довольно много все-таки людей еще остается на фреймворках.
213.02 216.02 SPEAKER_01 Поэтому ты не одинок.
216.02 219.02 SPEAKER_01 Так, Антон.
219.02 222.02 SPEAKER_01 Всем привет, меня зовут Шевченко Антон.
222.02 228.02 SPEAKER_01 Я дотнет-разработчик, специалист по интеграциям с разными другими сервисами.
228.02 233.02 SPEAKER_01 Работаю в небольшой компании по автоматизации больниц, лабораторий.
233.02 240.02 SPEAKER_01 И у нас здесь как последние версии дотнета, так и еще бородатые 4.5 фреймворки.
240.02 246.02 SPEAKER_01 Очень сильно. То есть все, что старое, работает не трогай.
246.02 248.02 SPEAKER_01 Так, слегка причесать, добавить что-то.
248.02 253.02 SPEAKER_01 А вот если пишем что-то принципиально новое, то пишем на последних версиях дотнета, аскнета.
253.02 255.02 SPEAKER_01 Вот так вот.
255.02 257.02 SPEAKER_01 Не, ну уже неплохо. В принципе, хорошая позиция.
257.02 262.02 SPEAKER_01 То, что может сломаться, лучше не ломать, а надолго можно уже экспериментировать.
262.02 270.02 SPEAKER_01 Проблема в том, что то, что работает, и лучше не трогать, не ломать, все-таки нужно ломать, чтобы оно работало под Linux.
270.02 272.02 SPEAKER_01 Потому что это уже очень сильное требование.
272.02 274.02 SPEAKER_01 Сейчас пока через Vine запускается.
274.02 278.02 SPEAKER_01 Хотя бы новое просто напишите, и все, так намного надежнее и не страшно.
278.02 282.02 SPEAKER_01 А то ты так перепугаешь всех директоров. Linux там и все такое.
282.02 285.02 SPEAKER_01 Хорошо. И Гурий.
285.02 288.02 SPEAKER_01 Да, всем привет. Меня зовут Гурий.
288.02 293.02 SPEAKER_01 Формально я уже где-то с год как не дотнетразработчик, потому что я сейчас в Амазоне.
293.02 297.02 SPEAKER_01 И, соответственно, я пользуюсь нелюбимыми многими джавой.
297.02 305.02 SPEAKER_01 Но до этого я, наверное, опыт лет 7 был, работал в частности, как говорит Игорь, архитектором.
305.02 311.02 SPEAKER_01 Меня называли, хотя по факту я был такой просто ведущий разработчик дотнет-сервисов.
311.02 314.02 SPEAKER_01 И сегодня дотнет как раз, когда уходил, подняли до седьмого.
314.02 317.02 SPEAKER_01 Ну, не знаю, как сейчас идет дело.
317.02 320.02 SPEAKER_01 Главное, чтобы не уронили обратно.
320.02 323.02 SPEAKER_01 Не, ну обратно они не уронили.
323.02 330.02 SPEAKER_01 Ну, по крайней мере, то, что мне писали, мне обычно спрашивали про какие-то другие вещи, что они там хотели заменить, выпилить.
330.02 332.02 SPEAKER_01 Понижать версию дотнет, ну, не знаю, это такое.
332.02 334.02 SPEAKER_01 Я о таком не слышал вообще.
334.02 336.02 SPEAKER_01 Может, такое бывает, но...
336.02 341.02 SPEAKER_01 Ну, наверное, только если брейк какой-нибудь поймал на раннем апгрейде, тогда, наверное, придется.
341.02 345.02 SPEAKER_01 Да, но имеется в виду, что там у тебя в проде уже что-то отработало полгода.
345.02 347.02 SPEAKER_01 И ты такой, ну, нет, это все не то.
347.02 349.02 SPEAKER_01 Мы переходим на 4.8 слишком быстро.
349.02 351.02 SPEAKER_01 Да, мне это не годится, нет.
351.02 353.02 SPEAKER_01 Работать на линуксе, к тому же, зачем?
353.02 355.02 SPEAKER_01 Нет.
355.02 358.02 SPEAKER_01 Слушай, я думаю, ты у нас будешь просто засланный казачок.
358.02 362.02 SPEAKER_01 Мы тебя заслали в Амазон для того, чтобы ты там внедрил дотнет вообще, где только можно.
362.02 364.02 SPEAKER_01 И где-то нельзя тоже все переписать на дотнет.
364.02 366.02 SPEAKER_01 Ну, где-то он там внедрен все-таки.
366.02 368.02 SPEAKER_01 Но...
368.02 370.02 SPEAKER_01 Надо больше, чтобы публично было где-то.
370.02 372.02 SPEAKER_01 Ну, это безусловно, надо к этому стремиться.
372.02 385.02 SPEAKER_01 Я уже говорил, по-моему, в каком-то из подкастов, что вот если посмотреть новости, то кажется, что иногда после выхода всяких новых фич Амазон чуть ли не первый бежит и делает всякие разные поддержки этих самых фич, по сравнению даже с самим Майкрософтом.
385.02 392.02 SPEAKER_01 Что-то была какая-то история про то, что в Azure Functions что-то было не поддержано, а в Амазонах в лямбдах уже все работало.
392.02 396.02 SPEAKER_01 То ли какое-то новое превью дотнета, то ли что-то, не помню.
396.02 400.02 SPEAKER_01 Там довольно мощная команда, которая работает над лямбдами, надо признать.
400.02 403.02 SPEAKER_01 Ну, по всем языкам, не касается конкретно дотнета.
403.02 405.02 SPEAKER_01 Но при этом куча ограничений.
405.02 409.02 SPEAKER_01 Я вот, допустим, когда делал недавно для себя лямбду, почему-то там версия шестая.
409.02 412.02 SPEAKER_01 Ну, не работает редактор кода в браузере.
412.02 414.02 SPEAKER_01 Ну, то есть, как бы особо не нужно, да?
414.02 416.02 SPEAKER_01 Но, естественно, в Java работает.
416.02 418.02 SPEAKER_01 Естественно, в JS работает.
418.02 420.02 SPEAKER_01 Ну, в общем, какие-то такие вещи, которые...
420.02 424.02 SPEAKER_01 Мне кажется, да, просто у Амазона команда, которая вообще о консюмерах, о кастомерах своих беспокоится.
424.02 431.02 SPEAKER_01 Поэтому, может, там не дело не в дотнете, как бы просто в хорошей команде, которая всегда беспокоится обо всех.
431.02 437.02 SPEAKER_01 Так, и, в принципе, я, наверное, должен теперь объяснить после всего этого большого введения, что здесь конкретно происходит.
437.02 440.02 SPEAKER_01 Происходит здесь наш обычный новогодний выпуск.
440.02 448.02 SPEAKER_01 Один раз в год мы позволяем себе не обсуждать новости, не обсуждать то, что написали другие люди, не обсуждать статьи, какие-то личности, какие-то еще.
448.02 452.02 SPEAKER_01 Все то, что вы привыкли слышать целый год, мы хотим не делать.
452.02 453.02 SPEAKER_01 Мы делать не хотим.
453.02 464.02 SPEAKER_01 И собираемся раз в год в новогодний выпуск для того, чтобы просто поговорить на болевшем, на накопившем и просто пообщаться с теми, кто поддерживал нас все эти годы на Boosty.
464.02 469.02 SPEAKER_01 И сейчас вы видите как раз тех замечательных людей, которые нас поддерживали.
469.02 478.02 SPEAKER_01 И, в общем, если вы хотите новостей, если вы хотите статей, если вы не хотите разговоров про жизнь, то милости просим вас на следующий выпуск.
478.02 481.02 SPEAKER_01 Там это все обязательно будет формально, четко и красиво.
481.02 487.02 SPEAKER_01 Если же вы хотите просто посмотреть, как люди общаются на какие-нибудь дотнетные темы, то милости просим к нам.
487.02 490.02 SPEAKER_01 У нас здесь будет немножко такая ламповая вечеринка.
490.02 493.02 SPEAKER_01 И здесь собрались не все наши помогаторы.
493.02 497.02 SPEAKER_01 Я хочу упомянуть как раз тех, кто к нам не собрался.
497.02 499.02 SPEAKER_01 Прежде всего, это Александр и Сергей.
499.02 505.02 SPEAKER_01 Это наши самые старые, плохое слово, наши самые опытные, самые первые наши помогаторы.
505.02 507.02 SPEAKER_01 Спасибо, что они сегодня к нам не присоединились.
507.02 516.02 SPEAKER_01 А также Владислав Шевченко-Антон, Лазарев Илья, Гурий Самарин, Виктор Руслан Артамонов, Александр Ерыгин, Сергей Безенко и Александр Лапернин.
516.02 519.02 SPEAKER_01 На самом деле, этот кусочек мы всегда записываем.
519.02 521.02 SPEAKER_01 Даже сейчас Толя просто был вставлен.
521.02 526.02 SPEAKER_01 Если вы заметили, он перечислил все фамилии, как обычно, в том же порядке, с теми же ударениями.
526.02 528.02 SPEAKER_01 И с видео, да, с тем же?
528.02 529.02 SPEAKER_01 Да, и с тем же видео.
529.02 531.02 SPEAKER_01 У меня просто есть предзаписанный Толя с нужным видео.
531.02 534.02 SPEAKER_01 В шапочке, в летней футболке, в зимней футболке.
534.02 537.02 SPEAKER_01 Это просто твой дневник кремления.
537.02 542.02 SPEAKER_01 Он, если его спросит где-то, остановит на улице, он точно той же интонации выдаст, и все.
542.02 545.02 SPEAKER_01 Разбудить посреди ночи.
545.02 549.02 SPEAKER_01 Ты же видел, в начале как Толя вспоминал, как же начинается у нас запись подкаста.
549.02 550.02 SPEAKER_01 Так что, не-не-не.
550.02 551.02 SPEAKER_01 Это мы вырежем.
551.02 555.02 SPEAKER_01 Этого никто не увидит, кроме наших, конечно, помогаторов.
555.02 561.02 SPEAKER_01 А, ты не можешь меня в летней футболке заснять, потому что у нас выпуск пишется только один раз зимой.
561.02 572.02 SPEAKER_01 Кстати, если вдруг вам интересно, то мы в прошлых наших зимних выпусках, посмотрите, мы там обсуждали, и как мы подкаст начинали, и как мы микрофоны выбирали, и какая там у нас статистика, пара прослушиваний.
572.02 574.02 SPEAKER_01 В общем, все вот эти технические вещи.
574.02 581.02 SPEAKER_01 Если вам интересно вообще, как там подкаст создавался, подкаст делался, и вообще, как сделать свой подкаст, то, в принципе, новогодние выпуски – это как раз то, что вам нужно.
581.02 583.02 SPEAKER_01 Они до сих пор актуальны, можно их пересмотреть.
583.02 585.02 SPEAKER_01 Они все есть в наших плейлистах.
585.02 586.02 SPEAKER_01 Главное – одеть шапочку.
586.02 588.02 SPEAKER_01 И сразу все пойдет.
588.02 592.02 SPEAKER_01 Шапочку надо одевать даже для того, чтобы все ваши задумки удались.
592.02 597.02 SPEAKER_01 Так, ну что, Игорь, с какой темы начнем-то?
597.02 599.02 SPEAKER_01 Ну как, Microsoft отдыхает.
599.02 601.02 SPEAKER_01 Никаких новостей нет.
601.02 603.02 SPEAKER_01 Никаких превью не вышло.
603.02 605.02 SPEAKER_01 Все скучно и неинтересно.
605.02 609.02 SPEAKER_01 Рассказывать, в общем-то, нечего.
609.02 612.02 SPEAKER_01 Не, ну мы бы тогда не собрались, если бы не было ничего рассказать.
612.02 614.02 SPEAKER_01 Ты же понимаешь, моя работа – это смотреть список и рассказывать.
614.02 617.02 SPEAKER_01 Давай, теперь твоя работа.
618.02 619.02 SPEAKER_01 Так, хорошо.
619.02 620.02 SPEAKER_01 У нас тут есть небольшой список.
620.02 625.02 SPEAKER_01 И, в принципе, я предлагаю начать с итогов года.
625.02 636.02 SPEAKER_01 То есть хочется от каждого из вас услышать, что было в вашем этом году самое главное, может быть, самое интересное, самое запоминающееся.
636.02 638.02 SPEAKER_01 Естественно, касаемо платформы.
638.02 640.02 SPEAKER_01 Ну или, может быть, работы.
640.02 643.02 SPEAKER_01 Короче, желательно платформы.
643.02 649.02 SPEAKER_01 Если вдруг платформа у вас там где-то на втором плане, то, может быть, что-то интересное касательно работы, инструментов.
649.02 653.02 SPEAKER_01 Мы для себя что-то открыли в этом году и так далее.
653.02 654.02 SPEAKER_01 Так, надеюсь, порядок вы запомнили, да?
654.02 659.02 SPEAKER_01 Вот сначала Игорь, Евгений, Игорь, Сергей, Антон и Егорий.
659.02 661.02 SPEAKER_01 Давайте в таком порядке, в принципе, и работать.
661.02 666.02 SPEAKER_01 Игорь, что у тебя в этом году больше всего запомнилось, тронуло?
666.02 674.02 SPEAKER_01 Запомнилось мне в этом году, что я в этом году впервые собрал у себя локально .NET Runtime.
674.02 676.02 SPEAKER_01 Не спрашивайте, зачем я это сделал.
676.02 679.02 SPEAKER_01 Да-да-да, был первый вопрос, а как бы зачем тебе это надо?
679.02 681.02 SPEAKER_01 На самом деле у меня было интересно два момента.
681.02 685.02 SPEAKER_01 Во-первых, мне было нужно в какой-то момент для какой-то очень...
685.02 693.02 SPEAKER_01 не то чтобы интересной, очень сложной проблемы, не могу, к сожалению, рассказывать.
693.02 695.02 SPEAKER_01 Вот это все, детали.
695.02 698.02 SPEAKER_01 Короче, воткнуть дебажный аутпут туда, где его нет.
698.02 699.02 SPEAKER_01 Мне нужно было.
699.02 701.02 SPEAKER_01 Отладка printfами, наше все, вот это все.
701.02 706.02 SPEAKER_01 И как бы берем runtime, клонируем, собираем.
706.02 710.02 SPEAKER_01 Благо MacBook достаточно мощный.
710.02 726.02 SPEAKER_01 Короче, полный релизный runtime с CLR плюс библиотеки, это, я так понимаю, стандартный кусочек, который собирается, если не брать уже совсем-совсем-совсем low-level штуку, собирается примерно за, чтобы не соврать, четыре с копейками минут.
726.02 728.02 SPEAKER_01 Слушай, это как-то очень быстро.
728.02 730.02 SPEAKER_01 Там не работают люди или это просто современные суперкомпьютеры?
730.02 732.02 SPEAKER_01 Это современные суперкомпьютеры.
732.02 734.02 SPEAKER_01 И .NET, видимо, такой маленький.
734.02 736.02 SPEAKER_01 Я не пробовал на нем запускать полноценно.
736.02 745.02 SPEAKER_01 Я оттуда взял нужную мне, там, систем, что-то там, условный коллекшн, там, я не помню точно, кого, подложил ее, подхачив, чтобы была нужная версия.
745.02 746.02 SPEAKER_01 Вот это все.
746.02 748.02 SPEAKER_01 Благо у нас сейчас нет strongnames.
748.02 750.02 SPEAKER_01 И, в принципе, то, что мне нужно, получил.
750.02 752.02 SPEAKER_01 Оно собралось, подхватилось, заработало.
752.02 759.02 SPEAKER_01 Но я не проверял, что там работает кастомный gc, я не пытался printf в gc вставить в таком духе.
759.02 761.02 SPEAKER_01 Хотя это будет интересный эксперимент.
761.02 763.02 SPEAKER_01 Следующий шаг, да, следующий уровень.
763.02 765.02 SPEAKER_01 Типа написать теперь свой gc и скомпилировать.
765.02 772.02 SPEAKER_01 Не, ну давай просто взять какой-нибудь этот app4grabs в этом .NET Runtime, в репозитории, что-нибудь зафиксить.
772.02 774.02 SPEAKER_01 Ну подожди, так ты в Microsoft уйдешь такими шагами.
774.02 778.02 SPEAKER_01 Да, ну, Аупа поменяет тебя в статье, прикинь.
778.02 781.02 SPEAKER_01 Вот, Егор Богатов тоже думал, да ну, да ну, а теперь смотри.
781.02 785.02 SPEAKER_01 Ну, теперь фигачит, она на плюсах пишет, я оттуда не хочу.
787.02 789.02 SPEAKER_01 В Runtime проблема в том, что на плюсах писать надо.
789.02 793.02 SPEAKER_01 Хорошо, так, народ, а из вас кто-нибудь еще Runtime компилировал?
793.02 795.02 SPEAKER_01 Кто-нибудь еще такой же страшный, как Игорь?
795.02 797.02 SPEAKER_01 Ну это же была активность прошлого года.
797.02 799.02 SPEAKER_01 В прошлом году я компилировал.
799.02 801.02 SPEAKER_01 Я думаю, все понимают, прямо в марте.
801.02 805.02 SPEAKER_01 Прямо надо было обязательно проверить, что Runtime собирается.
805.02 809.02 SPEAKER_01 Собрался?
809.02 811.02 SPEAKER_01 Удивительно, да.
811.02 813.02 SPEAKER_01 Я не ожидал такого.
813.02 818.02 SPEAKER_01 Но после того, как мы убедились, что все собирается, почему-то всем это перестало быть интересно.
818.02 822.02 SPEAKER_01 Но мне точно не было интересно прямо что-то запускать.
822.02 824.02 SPEAKER_01 То есть я этого не хотел.
824.02 826.02 SPEAKER_01 Мне сказали, ты можешь это проверить?
826.02 828.02 SPEAKER_01 Ну, давайте проверим, почему нет.
828.02 830.02 SPEAKER_01 Если вы так сильно волнуетесь.
830.02 834.02 SPEAKER_01 Не, ну, справедливости ради, Microsoft действительно сделала большую работу на тему того, чтобы Runtime нормально собирался.
834.02 837.02 SPEAKER_01 Буквально это заняло git-клон и build.sh.
837.02 839.02 SPEAKER_01 Все, ну, с нужным набором аргументов.
839.02 842.02 SPEAKER_01 И оно все собралось, как надо.
842.02 844.02 SPEAKER_01 Типа make-config и все такое?
844.02 846.02 SPEAKER_01 Не-не-не, ничего не надо.
846.02 850.02 SPEAKER_01 Один, ну, build.sh, если на Mac, либо build.ps1, если на Windows, соответственно.
850.02 852.02 SPEAKER_01 Оно сама все скачает, все, что нужно, все поставит, все добавит.
852.02 854.02 SPEAKER_01 Там всякие питоны, не питоны.
854.02 860.02 SPEAKER_01 Ему там нужен зачем-то, по-моему, то ли питон был, то ли кто-то такой. Короче, все скачает, все, куда нужно, воткнет.
860.02 866.02 SPEAKER_01 А там как сейчас тенденция с тем, чтобы вот, как для Linux, чтобы он мог сам себя компилировать?
866.02 868.02 SPEAKER_01 Там же вот такая критерия добавления.
868.02 873.02 SPEAKER_01 Слушай, там, да, в Debian он еще на эту тему пока не добавлен.
873.02 885.02 SPEAKER_01 Ubuntu, которая как бы основана на Debian и как бы наследует его политике, принципы, но несколько более расслаблена, удовлетворена, и в Ubuntu они собирают, насколько я понимаю, сами уже.
885.02 893.02 SPEAKER_01 И RedHat собирают сами себе runtime. Но, по-моему, там все-таки есть еще пререквизит, что тебе нужны какие-то там, то ли build-тулы от Mac.
893.02 901.02 SPEAKER_01 Ну, там, знаешь, есть вот этот вот пакет, типа там, не вижу у студии, а типа как-то так назывался, Microsoft build-tools или что-то в таком духе.
901.02 903.02 SPEAKER_01 Компилятор от Microsoft и какие-то такие вещи.
903.02 905.02 SPEAKER_01 Вот их нужно пока брать вроде как.
905.02 929.02 SPEAKER_01 Но мы, вот точно помню, в подкасте в районе где-то первой трети этого года обсуждали те самые, во-первых, reproducible билды, Толь, помнишь, наверное, и, во-вторых, как раз работу с Canonical на предмет появления полноценных reproducible билдов, так, чтобы можно было просто склонировать в репозиторий, да, и не имея никакого на компе все собрать.
929.02 933.02 SPEAKER_01 Когда эта работа завела, не знаю, никаких статей от Microsoft я на этот счет больше не видел.
933.02 941.02 SPEAKER_01 То есть то ли они договорившись с Canonical, пока эту работу ну, типа приостановили или как-то уже не так публично пихают.
941.02 953.02 SPEAKER_01 На момент июля этого ничего нет, потому что я на тот же Astralinux или Ubuntu ставил через такие костыли клонировать репозиторий, скачать, то склонировать, то скачать.
953.02 959.02 SPEAKER_01 Ну, короче, там нельзя написать апдегет инсталл дотнет, там так не работает.
959.02 973.02 SPEAKER_01 Нет, слушай, на Ubuntu на момент релиза восьмерки я видел статьи, сам не пробовал, сразу скажу, но на момент релиза восьмерки я видел статьи, что типа вау, как теперь удобно поставить на Ubuntu такую штуку.
973.02 975.02 SPEAKER_01 Ну, в смысле просто апдегет инсталл и что-то там.
975.02 989.02 SPEAKER_01 Дотнет, я не помню, как он называется, пакет точно, там он как-то не просто дотнет, по-моему, называется, он как-то более нетривиально назывался, но в целом работало. Но я не уверен, что ты при этом можешь его полностью собрать по всем законам опенсурсного Линукса.
989.02 997.02 SPEAKER_01 Слушай, ну я влазил по докер-контейнерам, которые со скрэча, по сути, собираются, и там вроде тоже ставится действительно весь этот дотнет, там парой команд.
997.02 999.02 SPEAKER_01 Ну, значит...
999.02 1001.02 SPEAKER_01 Ничего такого страшного.
1001.02 1005.02 SPEAKER_01 Я думаю, что они двигаются в это направление, и им куда деваться-то?
1005.02 1007.02 SPEAKER_01 Некуда деваться, нужно, чтобы все работало.
1007.02 1009.02 SPEAKER_01 Ну, в принципе, да.
1009.02 1017.02 SPEAKER_01 Если вас вдруг интересует, почему наши выпуски иногда выходят за 2 часа, это вот потому, что Игорь все время болтает, его невозможно остановить.
1017.02 1023.02 SPEAKER_01 Евгений, давай, срочно перебивай Игоря и бери на себя.
1023.02 1025.02 SPEAKER_01 Так, значит, что по главным событиям?
1025.02 1031.02 SPEAKER_01 Ну, честно говоря, по дотнету я бы не сказал, что прямо было какое-то для меня лично главное событие.
1031.02 1051.02 SPEAKER_01 Есть немножко отключенная тема, это нейросети вот эти, которые появляются, и в том числе, которые начинают поддерживать и студия, и райдер в том или ином виде, в виде плагинов искусственного интеллекта, которые позволяют быстрее, лучше, проще писать тот или иной код.
1051.02 1059.02 SPEAKER_01 Для меня, наверное, это какие-то нейросетевые штуки, которые появляются и которые упрощают работу.
1059.02 1061.02 SPEAKER_01 А иногда и делают сложнее.
1061.02 1063.02 SPEAKER_01 Реально пользуешься, да?
1063.02 1065.02 SPEAKER_01 Да, я реально пользуюсь.
1065.02 1069.02 SPEAKER_01 В основном, чат GPT использую.
1069.02 1085.02 SPEAKER_01 В райдере у меня в превью-версиях был бесплатный доступ к джетбрейновскому вот этому поделке. Но, насколько я понимаю, она тоже базируется на том же самом чат GPT или на чем-то похожем.
1085.02 1089.02 SPEAKER_01 То есть, по сути, тот же самый чатик с теми или иными возможностями.
1089.02 1099.02 SPEAKER_01 Они недавно зарелизили свежую версию райдера, и там чуть более расширенный экспириенс, так сказать, появился.
1099.02 1101.02 SPEAKER_01 За это они хотят еще...
1101.02 1107.02 SPEAKER_01 Денежку заплатил дополнительно, порядка 100 долларов в год или что-то такое.
1107.02 1109.02 SPEAKER_01 То есть, плюс к чату GPT ты платишь, да?
1109.02 1115.02 SPEAKER_01 Ну, нет. Чат GPT я использую бесплатный, 3.5 версия.
1115.02 1125.02 SPEAKER_01 Если пользоваться райдером, то да, хочется полной поддержки и хочется всех фич, тогда приходится доплачивать сверх того, что ты плачешь за лицензию.
1125.02 1133.02 SPEAKER_01 Ну, мне в целом, я так попробовал, показалось, что пока что хватает и словно бесплатного чат GPT.
1133.02 1137.02 SPEAKER_01 Захожу в браузер, те или иные запросы вбиваю и смотрю, что он мне выдает.
1137.02 1143.02 SPEAKER_01 Слушай, а может пример привести, вот как нормальный разработчик может использовать чат GPT в своей работе?
1143.02 1145.02 SPEAKER_01 Зачем ты к нему ходишь?
1145.02 1147.02 SPEAKER_01 С чем он хорошо справляется?
1147.02 1149.02 SPEAKER_01 Вообще разные сценарии.
1149.02 1155.02 SPEAKER_01 Надо ему скармливать любой вообще вопрос, который тебе в голову приходит, как он на него реагирует.
1155.02 1159.02 SPEAKER_01 Но тебе надо от кода это делать, как какой-то запрос, который не с твоим кодом.
1159.02 1163.02 SPEAKER_01 Иначе тебе придется сначала весь код загрузить, а потом каким-то образом...
1163.02 1165.02 SPEAKER_01 Не обязательно весь код.
1165.02 1173.02 SPEAKER_01 Ты можешь, например, какой-нибудь маленький кусочек кода загрузить в тот же чат GPT, сказать ему, вот, пожалуйста, объясни мне, что делает этот код.
1173.02 1175.02 SPEAKER_01 Ну, там, классик загрузил, условно.
1175.02 1187.02 SPEAKER_01 Он его анализирует и, в принципе, иногда даже довольно какой-нибудь сложный, запутанный код, и ты не можешь понять, что он делает, он довольно неплохо объясняет или какие-то идеи тебе накидывает.
1187.02 1191.02 SPEAKER_01 Прочитав их, уже гораздо проще что-то с ним сделать.
1191.02 1195.02 SPEAKER_01 Можно попросить его тот или иной код отрефакторить.
1195.02 1203.02 SPEAKER_01 Он может просто его причесать, может какие-нибудь рефакторинги предложить, о которых ты даже не задумывался.
1203.02 1205.02 SPEAKER_01 Какие-нибудь оптимизации.
1205.02 1209.02 SPEAKER_01 Одну из задач, которую я решал, он как раз мне помог.
1209.02 1215.02 SPEAKER_01 Но это уже был не C#, это был на стыке C# и SQL.
1215.02 1221.02 SPEAKER_01 Всякие оптимизации предложил, как можно циклы попереписывать и так далее.
1221.02 1227.02 SPEAKER_01 И, в принципе, довольно годные идейки. И, опять же, раз на раз не приходится.
1227.02 1245.02 SPEAKER_01 Бывает, ему в одном виде запрос скармливаешь, он тебе классный, годный ответ с кучей идей дает, а иногда скармлишь практически все запросы. Он вообще какую-то невнятную фигню предлагает. Ну, тут как бы тоже надо варьировать.
1245.02 1247.02 SPEAKER_01 Тесты неплохо пишут тоже.
1247.02 1253.02 SPEAKER_01 Кидаешь ему маленький кусочек кода, покрой тестами, он довольно неплохие сценарии пишет.
1253.02 1261.02 SPEAKER_01 Ну, и можно просить, покрой еще этот кейс, покрой этот, так, используй это, не используй то.
1261.02 1263.02 SPEAKER_01 И, в принципе, понимает и работает.
1263.02 1271.02 SPEAKER_01 То есть, объяснить какой-то кусок, да, если тебе непонятно, наверное, для каких-нибудь незнакомых языков.
1271.02 1285.02 SPEAKER_01 Ну, да, просто представь, что ты с разработчиком переписываешься и просишь его журнал условный или кого-то, вот там, 3FAC-код в таком виде, сделай так, вот тебе пример, и он, в принципе, это все учитывает.
1285.02 1307.02 SPEAKER_01 Ну, не всегда точно, но, в принципе, прикольно. Для незнакомых языков я вообще прям это использую постоянно, в том плане, что какие-нибудь кодики туда впихнешь, и он такой, ну, как бы, в предположении, что я знаю все эти операторы, потому что в рубях же можно чего угодно наворотить, на такой DSL-DSL практически, наверное, этот код делает вот такое.
1307.02 1317.02 SPEAKER_01 И почти всегда, если это не какой-то прям сумасшедший код, а нормальный Ruby, то, в принципе, конкретно на рубях вот у меня был опыт, я пробовал, нормально, зашло, вполне разобрался.
1317.02 1323.02 SPEAKER_01 Крутенько, а кто-нибудь еще из вас занимается нейросетями для работы?
1323.02 1325.02 SPEAKER_01 Ну, у нас свой...
1325.02 1329.02 SPEAKER_01 Говорит, ты замечен.
1329.02 1331.02 SPEAKER_01 Ну, я просто уступил слово.
1331.02 1333.02 SPEAKER_01 Ну, ладно, тогда я продолжу.
1333.02 1337.02 SPEAKER_01 У нас свой есть код Whisperer, который амазоновский, я им, в принципе, пользуюсь.
1337.02 1345.02 SPEAKER_01 Ну, не знаю, я воспринимаю скорее как какой-то продвинутый для меня интеллисенс, который просто подсказывает большие куски кода.
1345.02 1349.02 SPEAKER_01 А он у тебя интегрирован как-то?
1349.02 1357.02 SPEAKER_01 Да, да. Ну, Whisperer он интегрирован, но он также в эти, в JetBrains-овские продукты тоже интегрировался. И в каком?
1357.02 1361.02 SPEAKER_01 Как ты его там используешь? Просто ставишь точку и смотришь интеллисенс или все-таки там пишешь какой-то коммент?
1361.02 1365.02 SPEAKER_01 Я пишу просто код, и он мне там предлагает две страницы непонятно чего.
1365.02 1367.02 SPEAKER_01 Такой говорит, мне кажется, ты хочешь вот это написать.
1367.02 1369.02 SPEAKER_01 Я говорю, нет, ни хрена, убери это.
1369.02 1375.02 SPEAKER_01 Вот, но иногда дельно, иногда нет. Я как поставил, просто я люблю новые вещи. Интересно.
1375.02 1379.02 SPEAKER_01 Ну, и поскольку эта вещь сейчас активно внедряется, то пробую.
1379.02 1381.02 SPEAKER_01 Ну, не знаю, вот как раз Ruby - это моя боль.
1381.02 1383.02 SPEAKER_01 Ruby, Python.
1383.02 1385.02 SPEAKER_01 Но у нас там не такие вещи, надо понять.
1385.02 1393.02 SPEAKER_01 Очень много всяких инфраструктурных вещей написано на Ruby. И там скорее мне просто нужно дописать какой-то другой кусок кода.
1393.02 1397.02 SPEAKER_01 Вот здесь мне не могу сказать, что сильно помогает, потому что...
1397.02 1399.02 SPEAKER_01 Ну, потому что мне нужно понять, что я пишу.
1399.02 1407.02 SPEAKER_01 А то, что написано, вроде и так понятно, потому что там инфраструктурный язык, он, ну, на чем ни пиши, в общем, по сути, там ничего такого нет.
1407.02 1415.02 SPEAKER_01 Там какие-то аккаунты, да, там айпишники, что-нибудь еще. Ну, ты смотришь, ты понимаешь, о чем речь. А вот когда тебе надо что-то добавить, я такой, смешной уже. Так.
1415.02 1419.02 SPEAKER_01 Ну, в общем. Не, ну, интересно, но для меня пока не более.
1419.02 1423.02 SPEAKER_01 То есть я не ощутил преимущества, но не могу сказать, что мне это мешает.
1423.02 1431.02 SPEAKER_01 То есть как бы так бы я в 100% случаев набирал это сам, тут в 50% случаев я в раздражении это удаляю.
1431.02 1433.02 SPEAKER_01 Ну, ну что ж.
1433.02 1435.02 SPEAKER_01 Зато прикольно.
1435.02 1443.02 SPEAKER_01 Да какая-то новая технология. Так, еще кто-нибудь пользуется? Я пользуюсь не чат-жипить, а скорее вот это гигачат от Сбера.
1443.02 1447.02 SPEAKER_01 Это аналог. Он тоже код умеет, что ли? Он тоже код умеет.
1447.02 1457.02 SPEAKER_01 Ну, правда, я пользуюсь через браузер, то есть просто Ctrl+C, Ctrl+V туда, и, типа, напиши комментарий, summary, и так далее.
1457.02 1461.02 SPEAKER_01 Иногда прошу оптимизировать.
1461.02 1469.02 SPEAKER_01 Был случай, когда задолбал его настолько с оптимизацией, что мне в тупо в код вставил Assembler.
1469.02 1473.02 SPEAKER_01 Оптимальнее не придумаешь по скорости.
1473.02 1475.02 SPEAKER_01 Получай, да, что хочешь.
1475.02 1481.02 SPEAKER_01 Да, иногда бывают и такие забавные случаи, но в целом процентов 80 от того, что он предлагает, работает.
1481.02 1485.02 SPEAKER_01 Так, а расскажи потом, что ты еще от него требуешь, то есть где он тебе еще может помочь?
1485.02 1487.02 SPEAKER_01 Он мне картинки генерирует.
1487.02 1489.02 SPEAKER_01 Для чего? Для кода?
1489.02 1493.02 SPEAKER_01 Как комментарий в Комиту, для Ишусов, для чего тебе нужны картинки?
1493.02 1495.02 SPEAKER_01 Нет, картинки я просто пробую.
1495.02 1511.02 SPEAKER_01 А для кода я в основном спрашиваю, ну, слушай, я вошел в Дотнет, когда была версия 4.6, 4.5, а иногда сейчас приходится работать на версии, которая 2.0, 3.0, и некоторые конструкции для меня не совсем понятны.
1511.02 1517.02 SPEAKER_01 Я вот прошу, говорю, какой таргет, прошу объяснить, что происходит. И он с этим справляется.
1517.02 1523.02 SPEAKER_01 Прикольно. А можно, наоборот, дать ему проект под 4.5 и сказать, сделай мне из этого восьмерочку?
1523.02 1527.02 SPEAKER_01 Я не пробовал, но можно попробовать. Такая мысль не была.
1527.02 1531.02 SPEAKER_01 Он просто скажет, берешь, ставишь таргет фреймворк 8, и все работает.
1531.02 1533.02 SPEAKER_01 У нас же C# обратно совместимый.
1533.02 1535.02 SPEAKER_01 Типа да, да, просто меняешь таргет фреймворк 8.
1535.02 1553.02 SPEAKER_01 Нет, он может переписывать, если ему явно скажешь, если он знает об этом новом синтаксисе. Вот, например, chat gpt 3.5, до какого-то года, до 21, по-моему, у меня в вас данных. То есть свежие версии идут на это, он, наверное, не подскажет, там совсем-совсем свежие.
1553.02 1585.02 SPEAKER_01 Кстати, интересная идея для, этот самый, закинуть надо в Майкрософт для их апгрейда асиста, вот этой утилитки, которая апгрейдит ваш проект из фреймворка на новый, чтобы подрубить туда этот самый gpt и чтобы он более эффективно апгрейдил проект, а не то, что там создаешь новый и там в полный новый режим его переносишь.
1585.02 1597.02 SPEAKER_01 Не, ну нейроситочки же используются для всяких переводов, грубо говоря, чем это отличается от того, что ты из китайского на английский переводишь? Да, да. Наверное, это же такая же фигня. Берешь один язык, переводишь его в другой. Вообще, эта тема должна быть не только между фреймворками, но и между языками точно так же.
1597.02 1603.02 SPEAKER_01 Ну, знаешь, когда школьные сочинения перестанут компилироваться, вот тогда это будет то же самое.
1603.02 1607.02 SPEAKER_01 А тут, если их почитать, они точно не должны компилироваться.
1607.02 1611.02 SPEAKER_01 Тем не менее, их можно даже сдать и получить три, допустим.
1611.02 1613.02 SPEAKER_01 Ну, видишь, это программирование "три" не катит.
1613.02 1615.02 SPEAKER_01 Иначе это значит не работает.
1615.02 1617.02 SPEAKER_01 Продай мне где-то руки, там все на пятерочку.
1617.02 1621.02 SPEAKER_01 Хорошо, пойдем дальше. Игорь Второй, как тебе год?
1621.02 1627.02 SPEAKER_01 Я думаю, что я не могу отметить какие-то именно дотнетовские события.
1627.02 1647.02 SPEAKER_01 Наверное, самым таким приятным событием стал выход восьмого дотнета, потому что у нас как раз-таки выдался шанс перевести один из проектов, переписать его с нуля, и мы как раз-таки сделали пустой репозиторий.
1647.02 1651.02 SPEAKER_01 Вот это вот приятное ощущение, когда ты начинаешь делать с нуля.
1651.02 1657.02 SPEAKER_01 Взяли сразу дотнет восьмой и поехали вперед.
1657.02 1659.02 SPEAKER_01 Ты хочешь попробовать, да?
1659.02 1663.02 SPEAKER_01 Я, по крайней мере, желаю в новом году, чтобы всем выдался такой шанс.
1663.02 1669.02 SPEAKER_01 Желательно регулярно, чтобы такой шанс каждый полгодика выдавался.
1669.02 1677.02 SPEAKER_01 Справедливости ради, это не так, что мы просто взяли и сказали, переписали с нуля.
1677.02 1693.02 SPEAKER_01 Это было такое легаси, которое полтора года поддерживалось, и мы долго разбирались о бизнес-процессах, и когда у нас сложилось понимание, как это вообще должно работать, мы поняли, что время настало.
1693.02 1705.02 SPEAKER_01 Это как раз-таки очень важное свойство, потому что как раз многие проекты тянутся десятилетиями, и их сложно поддерживать, огромные команды и все такое.
1705.02 1711.02 SPEAKER_01 Единственная причина этому просто потому, что не сели люди вовремя и не переписали.
1711.02 1721.02 SPEAKER_01 Мне кажется, disposable code недооценен. Есть же там идея у какого-то большого гиганта, что каждые 5 лет надо продукт полностью переписывать.
1721.02 1737.02 SPEAKER_01 Это, наверное, не касается Microsoft Office или Винды, или чего-нибудь такого, но если мы говорим про какой-то микросервис, который можно за 3 месяца переписать, то раз в 5 лет переписывайте. Благое дело, на новых технологиях, фреймворках, утилитах, а самое главное, с теми знаниями, которыми вы накопили за все это время.
1737.02 1743.02 SPEAKER_01 Мне только песня от Тилона Битли "Big rewrite" приходит в голову на этот счет.
1743.02 1745.02 SPEAKER_01 А вот...
1745.02 1747.02 SPEAKER_01 Другого не знаю.
1747.02 1767.02 SPEAKER_01 На самом деле, мне кажется, в большинстве случаев да, действительно, хватает софта, который надо было вовремя переписать, но в большинстве случаев люди наоборот переписывают софт, а потом еще раз переписывают софт, и потом еще раз переписывают. Он так и не становится тем самым древним софтом, который надо переписать, а просто остается таким полурабочим.
1767.02 1771.02 SPEAKER_01 Безусловно, все проблемы с помощью переписывания не решишь, как-то не старайся просто.
1771.02 1775.02 SPEAKER_01 Нужно выделять какой-то небольшой пласт, где все-таки эти проблемы решаются именно так.
1775.02 1779.02 SPEAKER_01 Сергей, давай перейдем к тебе.
1779.02 1785.02 SPEAKER_01 У меня, наверное, личное, скорее, большее событие.
1785.02 1791.02 SPEAKER_01 Я в этом году впервые выступал на .NEXT офлайн.
1791.02 1795.02 SPEAKER_01 Был еще в прошлом, но там только на онлайн части.
1795.02 1799.02 SPEAKER_01 Очень понравилось, пообщались, все здорово.
1799.02 1801.02 SPEAKER_01 Ты наклеечку нашу получил, нет?
1801.02 1805.02 SPEAKER_01 Нет.
1805.02 1809.02 SPEAKER_01 Мы радийные наклеечки еще раз давали, для тех, кто был оффлайн.
1809.02 1813.02 SPEAKER_01 Значит, надо подавать на следующий.
1813.02 1815.02 SPEAKER_01 Попробуем. Значит, надо повторить, да?
1815.02 1817.02 SPEAKER_01 Да.
1817.02 1819.02 SPEAKER_01 Ну, в общем, очень здорово, всем советую.
1819.02 1823.02 SPEAKER_01 Приходите на конференции, общайтесь.
1823.02 1825.02 SPEAKER_01 Замечательно молодой консультант.
1825.02 1829.02 SPEAKER_01 А кто из присутствующих был на .NEXT, хотя бы не в этом году?
1829.02 1831.02 SPEAKER_01 Вообще бывал?
1831.02 1833.02 SPEAKER_01 Я.
1833.02 1835.02 SPEAKER_01 Ты и в этом тоже был, да? Да.
1835.02 1839.02 SPEAKER_01 Так, Антон, Игорь, не это самое, да?
1839.02 1841.02 SPEAKER_01 Я был только онлайн.
1841.02 1845.02 SPEAKER_01 У меня не получилось, скажем так.
1845.02 1849.02 SPEAKER_01 Онлайн, конечно, хорошо, но, не знаю, наверное, Сергей подтвердит, что разница большая.
1849.02 1853.02 SPEAKER_01 Есть плюсы и там, и там, конечно, но это два разных экспириенса абсолютно.
1853.02 1867.02 SPEAKER_01 Самая классная сессия была, которая вообще не записывалась, про общение насчет поиска талантов .NET, которые теперь просто не найти, но там вообще шикарно пообщались.
1867.02 1869.02 SPEAKER_01 По-моему, часа три, что ли.
1869.02 1881.02 SPEAKER_01 Ну, вот видишь, так всегда, ты полгода как бы вытаскиваешь самые хардкорные доклады, ищешь самых крутых спикеров, тренируешь их день и ночь, а самая клевая сессия - это вот, когда вышли какие-то алкоголики и начали трындеть про жизнь.
1881.02 1883.02 SPEAKER_01 Без подготовки. Да, без подготовки.
1883.02 1887.02 SPEAKER_01 А остальные там можно и онлайн посмотреть, остальные не отличаются.
1887.02 1891.02 SPEAKER_01 Я не понимаю этих зрителей вообще.
1891.02 1897.02 SPEAKER_01 Делаешь для них балабольную конференцию, говорят, мало хардкор. Делаешь хардкор, приходят, говорят, мало балаболов.
1897.02 1911.02 SPEAKER_01 В общем, да, поэтому на NEXT мы стараемся все свести вместе, и поэтому кто хочет, кто туда идет. Мы поняли, что золотую конференцию для всех сделать невозможно, нужно сделать ее как можно шире, и чтобы каждый находил для себя, что хотел.
1911.02 1913.02 SPEAKER_01 В принципе, туда и стремились.
1913.02 1917.02 SPEAKER_01 Ну, отлично, в принципе, NEXT - хорошая тема.
1917.02 1941.02 SPEAKER_01 Я хотел добавить, что обращал внимание еще, когда вот эти все NEXT-ы были, параллельно с ними вот у вас тоже проходили там оффлайн-встречи, там тоже доклады, и все в этом духе. Мне вот почему-то всегда как-то интереснее были вот эти бесплатные встречи, куда можно было прийти и послушать, ну и по содержанию докладов, по всему остальному, чем то, что было вот именно на .NEXT-е в то время.
1941.02 1943.02 SPEAKER_01 Вот, так вот интересно.
1943.02 1945.02 SPEAKER_01 Вроде и бесплатно, и интереснее.
1945.02 1947.02 SPEAKER_01 Ну, ты не ходишь, и как бы...
1947.02 1957.02 SPEAKER_01 Ну, тут может быть эффект того, что на .NEXT мы все-таки, ну, и не только мы, да, в смысле, программный комитет вообще, это не только .NEXT, кстати, касается, это любых конференций во многом.
1957.02 1967.02 SPEAKER_01 Мысль в том, что есть попытка сделать такой как бы, ну вот, типа, если уж контент, то ну, не идеальный, но близко к идеальному.
1967.02 1973.02 SPEAKER_01 А на метапе, понятно, как бы, есть что рассказать, говорить можешь, слайды есть, ну, вперед, как бы, можешь рассказывать.
1973.02 1977.02 SPEAKER_01 Ну, мы, как бы, конечно, тренируем всех докладчиков, даже на метапах, но все равно.
1977.02 1991.02 SPEAKER_01 Это, как бы, зачастую те, кто нигде не выступал или очень нишевая, узкая, не знаю, тема, которую мы там на конференты просто не возьмем, смотри, вышит Оля, да, потому что к нам потом придут, скажут, ну, зачем взял Али.
1991.02 1999.02 SPEAKER_01 А у нас, хотите про нейросетки, хотите про это, хоть как-то с программированием связано, да и то, кстати, по-моему, даже были и не совсем связаны.
1999.02 2001.02 SPEAKER_01 И то зайдет.
2001.02 2005.02 SPEAKER_01 Мы либерянство обсуждали в Англии, там, в 16 веке, какое программирование?
2005.02 2007.02 SPEAKER_01 Я не помню, это без меня, значит, было, ладно.
2007.02 2017.02 SPEAKER_01 Ну, когда еще в баре специально собирались, мы там сделали бар до неформальной обстановки, набрали пиво, и там у нас первый доклад был про квантовое вычисление, а второй, там, про либерянство в Англии. Ну вот, короче.
2017.02 2019.02 SPEAKER_01 Поставили программисты, поэтому было интересно.
2019.02 2045.02 SPEAKER_01 Да, то есть за счет этого действительно достигается вот это вот разнообразие. Но самое интересное, мы как раз потом, ну, самые, те, у кого выдержан баланс интересности и достаточного, так скажем, качества, глубины и продолжительности, тут еще тоже момент, что мы не можем там пока, по крайней мере, 20-минутные доклады на конференцию брать, хотя, может, это и изменится, но их мы постараемся как-то показать на конференции.
2045.02 2047.02 SPEAKER_01 Собственно, мы так туда и попали, в каком-то смысле.
2047.02 2049.02 SPEAKER_01 Ну, я, по крайней мере.
2049.02 2053.02 SPEAKER_01 А с какого года, кстати, по-моему, не с самого начала же, да? Что-кто?
2053.02 2067.02 SPEAKER_01 Ну, вот, вы участвуете вообще в dotnext'е? Ну, смотря что поднимать под участием. С точки зрения физического присутствия, я был на всех оффлайновых dotnext'ах в России. Вот, начиная с самого первого, 2000-й какой, Толя, поправь меня, 14-й? Вообще не помню.
2067.02 2069.02 SPEAKER_01 Весна 14-го года, по-моему, первый dotnext.
2069.02 2073.02 SPEAKER_01 Я боюсь, Швейция, ну, может быть, 13-й, но, по-моему, 14-й все-таки.
2073.02 2083.02 SPEAKER_01 Вот, и, соответственно, я был на всех оффлайновых, потом я сделал пару докладов на митапах, и меня позвали...
2083.02 2093.02 SPEAKER_01 Не, на этом, по-моему, я даже сделал один доклад на митапе, вот, про ВЦФ я тогда рассказывал, в чем мне сказали, давай более развернутое предложение делать на конфе. Я его сделал докладчиком, получил заслуженное...
2093.02 2101.02 SPEAKER_01 Вот, чтобы не соврать, что-то вроде 11-го места, мы тогда рейтинги еще считали, по отзывам, значит, получил 11-е место.
2101.02 2103.02 SPEAKER_01 Мы до сих пор считаем, не надо...
2103.02 2107.02 SPEAKER_01 Вот, ну, тогда у нас отзывов было больше, поэтому тогда они...
2107.02 2109.02 SPEAKER_01 Более релевантные были. Более релевантные были, да.
2109.02 2125.02 SPEAKER_01 Значит, получил 11-е место, все здорово, значит, потом я сделал какой-то еще один доклад на митапе, и то ли его продолжение, то ли какой-то смежный, тоже сделал на .next, второй мой доклад, получил заслуженное последнее место.
2125.02 2131.02 SPEAKER_01 Я даже не уверен, что видеозапись его есть, ну, наверное, есть, может, и не это самое.
2131.02 2139.02 SPEAKER_01 После этого решил, что, ну, все, все пропало, значит, из меня докладчик так себе, только на митапе...
2139.02 2141.02 SPEAKER_01 Это в Java ушел, да? Нет, это было потом.
2141.02 2145.02 SPEAKER_01 А после этого события меня пригласили в ПК, видимо, решив, что это...
2145.02 2149.02 SPEAKER_01 Лучше не будем выпускать таких на сцену, давайте, значит, пусть лучше доклады готовят.
2149.02 2153.02 SPEAKER_01 Раз он теперь знает, что такое делать хорошие доклады и плохие доклады.
2153.02 2155.02 SPEAKER_01 А тут тот, кто не может писать, тот критикуется.
2155.02 2157.02 SPEAKER_01 Ты можешь выступать, иди учи.
2157.02 2163.02 SPEAKER_01 Да, и поэтому, ну, вот это, наверное, был где-то шестнадцатый год, наверное.
2163.02 2167.02 SPEAKER_01 Шестнадцатый или семнадцатый год я вот в ПК, соответственно, последние шесть лет, получается.
2167.02 2173.02 SPEAKER_01 Ну вот, чтобы Игорь не прибеднялся, у него, например, есть доклад шикарный про коллекции, который он делал на митапе.
2173.02 2177.02 SPEAKER_01 И этот доклад всегда держится у нас в топах по всем лайкам и всем просмотрам.
2177.02 2181.02 SPEAKER_01 Уже много-много лет. Надо его обновить, кстати, он давным-давно устарел.
2181.02 2187.02 SPEAKER_01 Да, но тема и подходы, они шикарные, они до сих пор актуальны, и большую часть можно применять.
2187.02 2191.02 SPEAKER_01 У нас же теперь есть прошелайзер. Вот, но обновить надо, конечно.
2191.02 2195.02 SPEAKER_01 Там у тебя мьютаболов еще нет, там много куда их ставить. Да, ими кто-нибудь пользуется?
2195.02 2199.02 SPEAKER_01 Не важно, для доклада надо.
2199.02 2221.02 SPEAKER_01 Ну и если вас заинтересовала тема Евгения, что просто прийти на бесплатные доклады и посмотреть, как там все происходит, просто потусить, поговорить, послушать, посмотреть, то они, естественно, у нас всегда происходят. Правда, для этого вам нужно быть в Санкт-Петербурге, но я думаю, что это небольшая проблема, и каждый месяц у нас происходят такие бесплатные митапчики, поэтому будете проездом или как, посмотрите на календарь наших митапов и заходите.
2221.02 2227.02 SPEAKER_01 Анатолий, а вот эти вот в Петербурге, они по каким дням недели, по пятницам или в середине?
2227.02 2229.02 SPEAKER_01 Обычно четверг.
2229.02 2243.02 SPEAKER_01 Обычно четверг, да, но мы обычно как договоримся, потому что мы, по сути, у нас нет одной площадки, мы различные площадки снимаем по всему городу, чтобы было веселее. В общем, и там многое зависит от них. Ну, а там в большинстве случаев получается на четверг договориться.
2243.02 2247.02 SPEAKER_01 Ну и кроме Петербурга они же есть еще там в Москве, где еще?
2247.02 2261.02 SPEAKER_01 Какие города? Ну, именно прям вот то, что входит в dotnet.ru есть в 13, и поправь меня, городах, они сейчас в разной степени живости и активности. Во многих городах при этом есть на самом деле митапы, которые проводят компании, либо какие-то другие комьюнити.
2261.02 2273.02 SPEAKER_01 Поэтому смотрите, если вы не в Питере, по своему городу возможно есть просто IT-комьюнити, которая не прям dotnet.net, но там вполне могут быть и dotnet.net-доклады в том числе.
2273.02 2277.02 SPEAKER_01 То есть вот сейчас знаю, что таких несколько проводилось.
2277.02 2283.02 SPEAKER_01 Да, у нас, к сожалению, много ковид подкосил городов, но вот Москва сейчас хорошо активизировалась поэтому в Москве сейчас митапчики тоже идут.
2283.02 2287.02 SPEAKER_01 Если хотите, обязательно ищите.
2287.02 2305.02 SPEAKER_01 И, кстати, да, если наоборот, если вдруг в своем городе вам хочется замутить какую-то движуху, хочется собрать идейных людей, хочется поговорить о dotnet, и хочется понять, как все это делается, то тоже заходите, пишите нам. Мы, в частности, занимаемся тем, что запускаем вот такие dotnet-митапы, dotnet-сообщества в различных городах.
2305.02 2309.02 SPEAKER_01 Мы вам все научим, покажем, расскажем. Все это абсолютно бесплатно, просто на идейных основаниях.
2309.02 2311.02 SPEAKER_01 Франшиза. Франшиза, да.
2311.02 2315.02 SPEAKER_01 Ну ладно, минутка рекламы закончена.
2315.02 2317.02 SPEAKER_01 Да-да, хорошо, что подвели. Спасибо всем.
2317.02 2319.02 SPEAKER_01 Так, мы на ком остановились?
2319.02 2321.02 SPEAKER_01 На Игоре или Сергее?
2321.02 2323.02 SPEAKER_01 На Сергее. Теперь бы нам Антона послушать.
2323.02 2325.02 SPEAKER_01 Ну давай, Антон, заряжай.
2325.02 2339.02 SPEAKER_01 Ну, для меня события этого года - это то, что я попробовал нейронные сетки на dotnet. Именно не просто скопировать код, который у Microsoft представлен, и ура, компилируется.
2339.02 2351.02 SPEAKER_01 Нет, я попытался что-то свое написать, что-то потрогать. Я пытался писать для него программу, которая генерирует обучающую выборку тоже на dotnet.
2351.02 2361.02 SPEAKER_01 И также я вот ближе к концу года решил попробовать, что же такое dotnet на микроконтроллера.
2361.02 2365.02 SPEAKER_01 Вот, полагаю, для меня это вот эти вот события.
2365.02 2369.02 SPEAKER_01 Ты прям человек-паровоз вообще, во все стороны пошел. На чем не выпускал?
2369.02 2371.02 SPEAKER_01 На dotnet.
2371.02 2373.02 SPEAKER_01 Ну, помнишь...
2373.02 2391.02 SPEAKER_01 Да, помнишь, я часто в февральском или январьском митапе онлайн который был, я там показывал пример, который я просто скопировал с сайта Microsoft. Я тогда показывал что такое полигод ноутбука и вот это вот все.
2391.02 2397.02 SPEAKER_01 И, собственно, я после этого нейронными сетками в нем начал пользоваться, пробовать менять что-то.
2397.02 2415.02 SPEAKER_01 Хочу сказать отдельно, что вот обученные нейронные сетки на любом языке неважно фрейдверк какой, там TensorFlow, PyTorch и так далее можно сохранять в универсальном формате TORN или как-то так.
2415.02 2421.02 SPEAKER_01 Вот все, что в нем сохраняется ML.NET на сегодняшний день может запустить все. Абсолютно.
2421.02 2423.02 SPEAKER_01 Любую вещь.
2423.02 2431.02 SPEAKER_01 А вот если самому начать обучать с нуля сконфигурировать, там есть особенности того, чего ML.NET делать пока не умеет.
2431.02 2443.02 SPEAKER_01 Но он развивается. Еще год назад, я помню, примерно половина всех возможностей поддерживалось. Сейчас там, по-моему, есть только пленные моменты с переконечными нейронными сетями и капсульными.
2443.02 2475.02 SPEAKER_01 То есть сверточные он все уже подтягивает, что год назад еще не было. То есть он тоже развивается, он тоже движется. И меня что еще порадовало, вместе с блоком по ML.NET идет ведь блок отдельный, но вместе с ним связки по аналитике. Ведь машинное обучение не заканчивается нейронными сетями. Там же есть генетические алгоритмы, анализаторы и так далее. Вот для этого кто знает, что есть отдельная библиотечка. Я не помню, как она называется, но она идет в связке с ним.
2475.02 2479.02 SPEAKER_01 Там, по-моему, аналайзеры, что-то в этом роде.
2479.02 2503.02 SPEAKER_01 Вот она сопоставима с питоновским вариантом SkillLearn. Вот кто знает, в питоне SkillLearn есть библиотечка. Вот она сопоставима по возможностям и тоже очень-очень-очень много чего умеет делать. Вот обратите внимание, она с выходом 8-го дотнета, там очень много чего завезли, очень много чего проапгрейдили.
2503.02 2507.02 SPEAKER_01 — Ты так, как хобби, без работы это, да? — Да, это именно хобби, да.
2507.02 2513.02 SPEAKER_01 — Что тебе удалось сделать интересного, полезного? То есть для чего их вообще можно применить? — Нейронные сетки?
2513.02 2519.02 SPEAKER_01 — Ну даже не нейронные сетки, мне уже продвиждели все уши, чем нейронные сетки можно сделать. Что ты вот для себя попробовал?
2519.02 2521.02 SPEAKER_01 Что у тебя получилось?
2521.02 2531.02 SPEAKER_01 — Для меня? Ну смотри, я нейронными сетками заинтересовался, что ты смог реализовать, это когда ты пытаешься...
2531.02 2543.02 SPEAKER_01 Короче, представь, что у тебя нет никакой математической модели, где ты можешь выделить полезный сигнал. Не важно, если какой-то аудиосигнал, звуковой, изображение, вот у меня было изображение.
2543.02 2555.02 SPEAKER_01 Но при этом там есть корреляция. То есть математический аппарат, он позволяет сказать, что это есть, ну то есть может показать, это есть, этого нет, и может сказать, это есть, но не знаю как.
2555.02 2563.02 SPEAKER_01 Вот у меня была задача нейронную сетку запихнуть на спутник, который в воздухе летает.
2563.02 2567.02 SPEAKER_01 И я прототипировал, я делал на дотнете.
2567.02 2607.02 SPEAKER_01 И там нужно было искать сигнал, полезный сигнал, который меньше, чем шум фоновый. Да, если следить в процессе, в истории, то этот сигнал накапливается, его нужно выделить, но в момент времени пару кадров взять и сложить, его не видно. И вот с помощью нейронных сеток это удалось автоматизировать. То есть если там раньше на анализ одного изображения уходило пару недель, когда человек глазками смотрел, то удалось достичь 14 кадров в секунду. Только благодаря нейронной сетке. Вот яркий пример.
2607.02 2615.02 SPEAKER_01 Круто. Этот спутник с нейронной сеткой сейчас летает, он над Арктикой. Это геодезический спутник, который освещает погоду и так далее.
2615.02 2621.02 SPEAKER_01 Он в этом году третий или четвертый с этой нейронкой запустили.
2621.02 2623.02 SPEAKER_01 Это так хобби называешь, да?
2623.02 2625.02 SPEAKER_01 Я не по работе, я так в хобби взял, спутник запустил.
2625.02 2627.02 SPEAKER_01 А это как?
2627.02 2631.02 SPEAKER_01 Это не по основной работе было. Это именно как? Добзаработали, что-то в этом роде.
2631.02 2633.02 SPEAKER_01 Понятно. Не, ну звучит круто.
2633.02 2635.02 SPEAKER_01 Слушай, мы...
2635.02 2637.02 SPEAKER_01 Подкасты сможешь собрать?
2637.02 2639.02 SPEAKER_01 Ась?
2639.02 2645.02 SPEAKER_01 У нас есть расшифровка подкаста текстом. У нас есть проблема, мы не можем по нему саморез делать.
2645.02 2647.02 SPEAKER_01 Может твоя нейронная сетка, например, саморез сделать по подкасту?
2647.02 2651.02 SPEAKER_01 Так, Игорь, ты на ноутбуке что-то запускал?
2651.02 2663.02 SPEAKER_01 Нет, ну я только виспером и прочим генерирую текст. Ну, как бы просто... Ты скрями его потом Jad-GPT или там Яндекс-GPT, чтобы он выдал краткий пересказ.
2663.02 2669.02 SPEAKER_01 Надо будет попробовать. Я пока себе все сломал на ноутбуке, сейчас у меня уже три, по-моему, выпуска лежат в очереди.
2669.02 2687.02 SPEAKER_01 Я решил проапгрейдить сетку на новую, и теперь я борюсь с версиями Python, Paenvo и прочих совместимостей всей библиотек, потому что одно несовместимо с другим, второе несовместимо с третьим, а третье не работает, поэтому теперь надо все откатить аккуратно назад.
2687.02 2697.02 SPEAKER_01 Вообще-то тема с нейросетками именно прикладным, знаешь, что не возьми готовый вожу или запусти, а вот сам попробуй себе на компьютере что-нибудь сделай, очень интересно.
2697.02 2713.02 SPEAKER_01 Понимаешь, там очень большая проблема, что ты либо очень должен хорошо разбираться в математике, как это работает, либо делать все наугад, потому что какие-то параметры можно просчитать, в тупой математике, статистике просчитать, что нужно выставить.
2713.02 2717.02 SPEAKER_01 А есть некоторые вещи, которые можно выбрать только наугад.
2717.02 2731.02 SPEAKER_01 Скажем, инициализация весов примерно половина делается наугад, потому что ты можешь только примерно рассчитать, в каком диапазоне должны быть их значения, но точно сказать ты не можешь.
2731.02 2733.02 SPEAKER_01 И в этом большая проблема на самом деле.
2733.02 2747.02 SPEAKER_01 А что, нет какой-то нейросетки, которая хорошо подбирает веса? Понимаешь, любые нейронные сетки, это тебе, ну, кроме классификации, то есть, собственно, они, это всегда приближенное значение с какой-то погрешностью.
2747.02 2779.02 SPEAKER_01 И мы сталкиваемся с тем, что веса нейронной сетки как раз таки находятся в рамках статистической погрешности, их веса всегда лежат. Там потом, с помощью специальных математических операций, они доводятся до наших нормально считаемых значений, но внутри себя они существуют в таких специальных функциональных пространствах, что эти все значения, они на наших стратегических методах не работают, потому что у нас погрешность больше, чем их значение.
2779.02 2787.02 SPEAKER_01 И это, на самом деле, большая проблема. Там всего есть 3-4 варианта слоев, где мы можем это все нормально рассчитать. Все остальное только наугад.
2787.02 2791.02 SPEAKER_01 Круто, круто. Слушай, Антон, ты же уже бывал у нас на метапах.
2791.02 2795.02 SPEAKER_01 Замути, если вдруг будет большое желание замутить доклад.
2795.02 2799.02 SPEAKER_01 Ну, это же скорее не про .NET, а именно про нейронные сетки.
2799.02 2801.02 SPEAKER_01 Я не знаю, вообще это про это.
2801.02 2805.02 SPEAKER_01 Нормально. Или в связке с ML.NET и так далее. Можно о чем-нибудь подумать.
2805.02 2809.02 SPEAKER_01 Две функции на ML.NET покажешь, и в связке будет.
2809.02 2811.02 SPEAKER_01 Ну, я подумаю.
2811.02 2813.02 SPEAKER_01 Так, Гурий, что у тебя?
2813.02 2825.02 SPEAKER_01 Да, ну, у меня из личного это то, что я наконец-то переехал на Visual Studio Code, что я давно хотел сделать. Не то, что я прям очень хотел, я просто небольшой поклонник райдера.
2825.02 2829.02 SPEAKER_01 И когда я оказался на МАКе, у меня как бы не так много выбора оказалось.
2829.02 2835.02 SPEAKER_01 То есть я могу поставить виртуалку, я так и сделал, и поставил на нее студию, но это, конечно, не совсем то.
2835.02 2839.02 SPEAKER_01 Вот то же самое, что нюхать розов в противогазе, как говорят.
2839.02 2843.02 SPEAKER_01 И, соответственно, ну, переехал на Visual Studio Code.
2843.02 2845.02 SPEAKER_01 В принципе, доволен этим.
2845.02 2853.02 SPEAKER_01 Слушай, а при этом ты же, ну, ты вначале упоминал, что ты сейчас посмотрел на Java, я так понял, а Java ты при этом в идее, да, наверняка?
2853.02 2855.02 SPEAKER_01 Ну, нет.
2855.02 2857.02 SPEAKER_01 Я упростил.
2857.02 2859.02 SPEAKER_01 Я, в принципе, небольшой поклонник JetBrains.
2859.02 2861.02 SPEAKER_01 Ага, хорошо.
2861.02 2863.02 SPEAKER_01 В смысле, в Notepad или как?
2863.02 2865.02 SPEAKER_01 Нет, я имею в виду упростил мысль не только райдера.
2865.02 2871.02 SPEAKER_01 Вот мне и было интересно, потому что если в райдере, я могу понять, там, да, есть варианты.
2871.02 2891.02 SPEAKER_01 У меня все установлено как бы в резервных случаях, потому что, ну, естественная идея, так же, как и RubyMine, это достаточно распространенно, и многие решения проще, чем самому раскапывать, проще открыть там. Ну, все, что вот свои какие-то проекты, которые я постоянно ковыряю, которые я не хочу, мне нужно их настраивать, они все я обычно через VS Code открываю, и Java, и Ruby, и Python.
2891.02 2893.02 SPEAKER_01 Интересно.
2893.02 2901.02 SPEAKER_01 Слушай, ну, примерно как сравнить студию и райдер, я понимаю, там, их плюсы и минусы, а вот если сравнить студию и Visual Studio Code?
2901.02 2923.02 SPEAKER_01 Ну, вообще Visual Studio Code, это же не IDE, да, это просто, это ровно тот набор плагинов, который ты поставил. Вот в этом году, соответственно, Microsoft сделал новые плагины, соответственно, у тебя частично поменялся эксперенс. Ну, я все равно не так много, скажем так, какими фишками UI-ными пользуюсь.
2923.02 2935.02 SPEAKER_01 Многое делаю через консоль, поэтому для меня, вот, понятно, что есть такие вещи, как профайлинг, да, все это трудно сделать в VS Code, но это вещи, которые мне не нужны так часто.
2935.02 2941.02 SPEAKER_01 В этом случае. Ну, например, часто тебе нужен какой-нибудь хороший интеллисенс, рефакторинг, навигация.
2941.02 2943.02 SPEAKER_01 Да, это все вполне себе.
2943.02 2947.02 SPEAKER_01 Там все есть, даже вот до этого девкита, который они там выпустили.
2947.02 2951.02 SPEAKER_01 Да, они там в качестве extension были.
2951.02 2955.02 SPEAKER_01 Ну, до девкита я пользовался мало, поэтому я знаю, что это работало.
2955.02 2957.02 SPEAKER_01 Насколько это хорошо было, мне трудно судить.
2957.02 2979.02 SPEAKER_01 Но пользоваться можно было, потому что вот у меня коллега, он сидел на МАКе, еще вот когда в АСЕ мы были, и он пользовался VS Code. В принципе, потому что Visual Studio под МАК она, кстати, да, я не говорю про то, что она существует, но я пытался ей все время пользоваться, когда под мобильное работала, и, честно говоря, как-то вот нет, не хочу, не нравится.
2979.02 2989.02 SPEAKER_01 Из каких-то вот новинок, наверное, платформенных, может где-то прозвучит странно, но мне, поняя вот это A Head of Time компиляция, очень интересно.
2989.02 3005.02 SPEAKER_01 Может быть, потому что я в свое время работал с железом, и как-то не напрямую, но вот эти вот тематика мне интересны, когда продолжение уже предсобрано, поэтому я вижу в этой области определенный прогресс. Я, конечно, особо не использую это впроди, но сам факт это интересный.
3005.02 3011.02 SPEAKER_01 Для некоторых embedded решение это хорошая вещь, это то, что я делал на практике раньше. Вот.
3011.02 3019.02 SPEAKER_01 Ну и вот если говорить про вот этот хайп с нейронками, я, к сожалению, на Ниве медицинской накушался с Ниве в свое время.
3019.02 3025.02 SPEAKER_01 Вот. Поэтому я как-то в этом году решил не присоединяться к всеобщему веселью.
3025.02 3027.02 SPEAKER_01 Вот.
3027.02 3029.02 SPEAKER_01 И ML.NET, кстати, мы пользовались.
3029.02 3031.02 SPEAKER_01 Мы тоже вот обучали модельку.
3031.02 3039.02 SPEAKER_01 И уже обученную модельку запускали в WPF-приложении совершенно спокойно. Она нам там ставила всяческие диагнозы интересные.
3039.02 3049.02 SPEAKER_01 Но, к сожалению, у нас была такая ситуация, что у нас уже наши алгоритмы написанные работали лучше, чем просто вот так вот взята сеть. А доводить эту сеть это большая работа.
3049.02 3053.02 SPEAKER_01 И когда ты видишь то расстояние, которое тебе нужно пройти, ты такой думаешь, ну, да.
3053.02 3055.02 SPEAKER_01 Мы не пойдем.
3055.02 3059.02 SPEAKER_01 Может быть, как-то можно было обучить на ваших алгоритмах.
3059.02 3061.02 SPEAKER_01 Смотри, какая ситуация.
3061.02 3063.02 SPEAKER_01 В случае с медициной, там как?
3063.02 3065.02 SPEAKER_01 Что мы хотели делать? Мы хотели делать классификацию.
3065.02 3069.02 SPEAKER_01 Я вот буквально очень кратко скажу, потому что понятно, что мало кому интересна эта область.
3069.02 3079.02 SPEAKER_01 Но вот когда отсматривают кардиограмму человека, там на самом деле выбирают паттерны. Паттерны этих сокращений, соответственно, комплексов.
3079.02 3083.02 SPEAKER_01 И вот одна из стандартных задач как бы все это разбить на паттерны.
3083.02 3099.02 SPEAKER_01 Ну, самая простая — это корреляция. Собственно говоря, корреляция хорошо работает. То там можно использовать вивлеты и так далее. Но можно использовать нейросетку. Но для того, чтобы сделать это вот как бы по-простому, условно говоря, нужно просто посоветовать экспертов и заставить их расшифровывать пленку.
3099.02 3109.02 SPEAKER_01 Соответственно, и либо нужно очень-очень много исследований, но что не может себе позволить малая медицинская компания. Это может сделать только какой-нибудь крупный международный центр.
3109.02 3121.02 SPEAKER_01 И причем надо понимать, что в медицине большая линейка оборудования, и даже когда у компании куча центров, у них разные записи будут. То есть эти все записи потом придется калибровать, чтобы они были одинаковыми.
3121.02 3127.02 SPEAKER_01 То есть работа не по щадой края. По крайней мере, когда я уходил из медицины, было там 3 года назад, еще не было реальных результатов.
3127.02 3139.02 SPEAKER_01 То есть статей моря научных, вот реальных результатов, чтобы это вот кого-то отправило сделать огромный скачок вперед. Именно в этой области, потому что там понятно, с распознанием изображений результаты есть и вполне хорошие. Не было.
3139.02 3145.02 SPEAKER_01 Поэтому мы понимали, что у нас просто там компания, 50 человек, даже меньше, 30.
3145.02 3147.02 SPEAKER_01 Мы не сможем набрать эту базу.
3147.02 3149.02 SPEAKER_01 То есть это просто нереально.
3149.02 3153.02 SPEAKER_01 То есть основная проблема именно в базе, в наборе данных.
3153.02 3159.02 SPEAKER_01 Ну вообще, вот так, если говорить про машинное обучение, то там основная проблема - это всегда данные.
3159.02 3165.02 SPEAKER_01 Какие-то данные выбираешь, и как ты эти данные отбираешь, отбраковываешь.
3165.02 3171.02 SPEAKER_01 Вот если ты способен сделать все это, то это, во-первых, значит, что ты хорошо понимаешь предметную область.
3171.02 3183.02 SPEAKER_01 Во-вторых, это значит, что у тебя есть как раз необходимая мощность, чтобы уже дальше продвигаться. Если у тебя нету данных, то тут уже, в общем-то, идти дальше некуда.
3183.02 3189.02 SPEAKER_01 Да, понятно. Так, у нас был первый вопросик для того, чтобы разогреться и хотя бы немножко познакомиться. Мы тут просидели час.
3189.02 3191.02 SPEAKER_01 Наверное, как-то надо...
3191.02 3197.02 SPEAKER_01 Я предлагаю завершать. Давай зададим финальный вопрос, и через час разойдемся.
3197.02 3201.02 SPEAKER_01 Да, то уже салаты стынут, как бы, и все такое.
3201.02 3219.02 SPEAKER_01 Смотрите, еще такой интересный вопрос, что у каждого из нас на работе, или, может быть, в хобби-проектах, или просто в загашничках, есть какие-нибудь интересные библиотечки, инструменты, может быть, ИДЕшки, может быть, совсем не относящиеся к программированию, какие-то хорошие программки, которые помогают вам по жизни.
3219.02 3239.02 SPEAKER_01 Чувствуете, что без этих программ ваша жизнь была бы, как программист, была бы не такая эффективная. Или, может быть, у вас есть какие-то библиотечки, которые C#, которые вы используете в своих программах довольно часто, и они тоже помогают вам жить. Расскажите про такие инструменты, про такие библиотечки, которые у каждого из вас, я думаю, есть.
3239.02 3241.02 SPEAKER_01 Точно по порядку.
3241.02 3243.02 SPEAKER_01 Игорь, есть ли у тебя что-нибудь такое?
3243.02 3249.02 SPEAKER_01 Слушай, я, честно говоря, думал, и я прямо сказать не знаю.
3249.02 3255.02 SPEAKER_01 Наверняка есть. Есть некоторый стандартный список софта, как можно сказать, стандартный.
3255.02 3269.02 SPEAKER_01 Некоторый список софта, который я, как и всегда, ставлю. То есть я там не могу жить без двухпанельного файлового менеджера. Я там не умею жить в Finder. Мне нужен что-то подобное Total Commander или Faro или чему-то аналогичному на Mac.
3269.02 3275.02 SPEAKER_01 То есть я максимально всего стараюсь повесить на клавиатуру.
3275.02 3279.02 SPEAKER_01 То есть там всякие Alfred, если мы говорим про Mac, и прочие такие штуки.
3279.02 3285.02 SPEAKER_01 Но вот прямо какого-то такого супер библиотека точно нет.
3285.02 3289.02 SPEAKER_01 Нет какой-то такой убер-библиотеки.
3289.02 3291.02 SPEAKER_01 Внутри проектный Utils и Common не в счет.
3291.02 3295.02 SPEAKER_01 Ты копируешь между проектами все время.
3295.02 3297.02 SPEAKER_01 Сам Utils.
3297.02 3309.02 SPEAKER_01 К вопросу, создали новый проект, моргнули, и там уже это 100-500 каких-то файликов, потому что это ой, нам тут нужно файлик читать, ой, тут нужно почту посылать, ой, мы это возьмем из старого проекта. В итоге там уже 100-500 файлов из старого проекта уже и лежит.
3309.02 3313.02 SPEAKER_01 Ну и осталось там 3 файлика бизнес-логики, и вот тебе продукт готов.
3313.02 3329.02 SPEAKER_01 Поэтому нет, я говорю, что у меня есть некоторая списка софта, именно такого обыденного файлового менеджера, калькулятор, и прочие такие штуки, но ничего другого, ничего такого как бы нету. Что у меня, браузер, Telegram.
3329.02 3337.02 SPEAKER_01 Не, ну это у всех, это понятно. Да, да, это какой-нибудь там Draw.io, в ком мы там сейчас рисуем.
3337.02 3341.02 SPEAKER_01 И как твоя любимая DE, где ты больше всего кода пишешь?
3341.02 3343.02 SPEAKER_01 Кроме Outlook, я имею в виду.
3343.02 3353.02 SPEAKER_01 Ты знаешь, сейчас я в основном живу действительно в S-коде, просто потому, что по роду работы мне приходится переключаться между кучей языков.
3353.02 3365.02 SPEAKER_01 Но, в принципе, у меня сейчас я смотрел, у меня стоит, понятно, идея, у меня стоит PyCharm, у меня стоит Rider, у меня стоит Vendai, в ней стоит, соответственно, студия.
3365.02 3379.02 SPEAKER_01 Вот знаете, у меня, наверное, студия и Rider 50/50, просто потому, что у меня есть ряд очень старых проектов, где есть еще Winform, которые в Rider до сих пор нормально не поддержаны.
3379.02 3381.02 SPEAKER_01 Вот, и...
3381.02 3387.02 SPEAKER_01 Может быть, кстати, сейчас последних и поддержано, но я по привычке пользуюсь студией для этого. Вот.
3387.02 3393.02 SPEAKER_01 Ну, для Java либо в S-код, либо идея, для Python чаще в S-код, иногда PyCharm запущу.
3393.02 3395.02 SPEAKER_01 Ну, в общем-то, вот.
3395.02 3397.02 SPEAKER_01 Примерно. Это такой у меня набор.
3397.02 3399.02 SPEAKER_01 Угу. Окей.
3399.02 3403.02 SPEAKER_01 Да, пойдем дальше тогда. Евгений, что ты скажешь?
3403.02 3417.02 SPEAKER_01 Ой, ну, мне вспоминается тулза небольшая, которую я написал, когда еще работал в одной фирме. У нас использовалась ORM-ка, предок Entity Framework.
3417.02 3421.02 SPEAKER_01 Link to Database, по-моему, называется, или как-то так.
3421.02 3439.02 SPEAKER_01 Вот. И там тоже были всякие подходы с генерацией моделек для доступа к базе. У нас использовался что-то вроде Model First подхода, когда открываешь в студии схемку, там куча табличек, куча связей между ними.
3439.02 3451.02 SPEAKER_01 Хочется поменять схему баз данных, ты ее меняешь, потом обновляешь эту модель, она там какое-то время крутится, думает и выплевывает тебе новые файлики с C# кодом.
3451.02 3465.02 SPEAKER_01 Вот. Это все, в принципе, работало, но не было какой-то ценности в том, чтобы перетаскивать мышкой из SQL эти таблички, чтобы они появлялись, как-то обновлялись.
3465.02 3471.02 SPEAKER_01 В какой-то момент я переехал из Екатеринбурга, где у нас стояли сервера, в Питер.
3471.02 3483.02 SPEAKER_01 И в силу того, что связь там ходила намного дольше до этих серверов, вот эта вся машинерия с перегенерацией моделек начала очень сильно тормозить.
3483.02 3485.02 SPEAKER_01 Прям буквально.
3485.02 3493.02 SPEAKER_01 То, что там в ЕКБ буквально, не знаю, секунд 10-20 занимало, там до 5 минут крутилось.
3493.02 3495.02 SPEAKER_01 Ну и я думал, что с этим сделать.
3495.02 3503.02 SPEAKER_01 Покопался, погуглил, нашел, что всю ту же самую модельку можно генерировать через консольку.
3503.02 3533.02 SPEAKER_01 Утилит, по-моему, назывался Discoil Metal. Ну и вот просто поверх нее написал небольшой враппер, который ее дергает с нужными параметрами, ну и втащил это дело в проект. Там буквально по одному клику мышкой у тебя перегенерировалась моделька, и это занимало гораздо меньше времени. Очень сильно упрощало жизнь. Правда, это поделие прожило недолго, мы в итоге просто потом переехали на антифреймворк. Но вот какое-то время помогало.
3533.02 3535.02 SPEAKER_01 Какое-то время экономило силы.
3535.02 3539.02 SPEAKER_01 Ну, такого плана, наверное.
3539.02 3541.02 SPEAKER_01 А если есть утилиты, которые помогают тебе в работе?
3541.02 3543.02 SPEAKER_01 Можете что-нибудь выделить?
3543.02 3545.02 SPEAKER_01 Да нет, я бы не сказал.
3545.02 3553.02 SPEAKER_01 Наверное, ноутпад с парочкой каких-нибудь команд хитрых для PowerShell и еще чего-то.
3553.02 3561.02 SPEAKER_01 Прибить какой-нибудь порт подвисший и какую-нибудь часто повторяющуюся проблему, которую чинит.
3561.02 3563.02 SPEAKER_01 Так, в принципе, ничего такого нет.
3563.02 3565.02 SPEAKER_01 Какая у тебя основная идея?
3565.02 3567.02 SPEAKER_01 Райдер.
3567.02 3571.02 SPEAKER_01 Райдер на какой операционной системе?
3571.02 3573.02 SPEAKER_01 На винде.
3573.02 3587.02 SPEAKER_01 Мне когда-то давали мак на работе, но я очень быстро попросил, чтобы мне дали виндовый, потому что не хотелось извращения с виртуальной машиной и всем остальным.
3587.02 3589.02 SPEAKER_01 Плюс к шоткатам очень сложно привыкать.
3589.02 3591.02 SPEAKER_01 Знакомая боль.
3591.02 3593.02 SPEAKER_01 Хорошо, Игорь, дела?
3593.02 3603.02 SPEAKER_01 Ну, на самом деле, есть очень много всяких мелких библиотек, которыми мы пользуемся, но я бы, наверное, отметил две.
3603.02 3605.02 SPEAKER_01 Первая тоже связана с базами данных.
3605.02 3617.02 SPEAKER_01 Когда мы сейчас переходим с MongoDB на Postgres и начали смотреть в сторону миграции, то есть как их накатывать.
3617.02 3621.02 SPEAKER_01 В Дотнете сейчас есть три основных мигратора.
3621.02 3629.02 SPEAKER_01 Это стандартная миграция Entity Framework, есть Fluent Migrator, который достаточно популярный, и есть относительно молодая библиотечка Evolve.
3629.02 3631.02 SPEAKER_01 И вот мы как раз остановились на ней.
3631.02 3653.02 SPEAKER_01 Вообще миграции Entity Framework совершенно не зашли, потому что, к сожалению, Entity Framework при создании миграции генерирует вот эти файлы снапшотов, которые содержат много мусора, он может нагенерить какие-то индексы, которые вы не хотите оставлять в коде.
3653.02 3657.02 SPEAKER_01 Вы их должны как-то удалить, они в файлах-снапшотах все равно остаются.
3657.02 3659.02 SPEAKER_01 В этом потом очень тяжело разбираться.
3659.02 3663.02 SPEAKER_01 И вот мы остановились на библиотечке Evolve.
3663.02 3669.02 SPEAKER_01 Она, по сути, является переделкой какой-то популярной джавской библиотеки.
3669.02 3677.02 SPEAKER_01 Позволяет писать миграции на чистом SQL, то есть в обычных файликах.
3677.02 3689.02 SPEAKER_01 Там поддерживаются версионный и repeatable миграции, то есть версионный, он смотрит, какие миграции не накачаны и накатывает те, которые еще не были накачаны.
3689.02 3697.02 SPEAKER_01 И repeatable -- это то, что если он понимает, что файлик, например, был заменен, то он перенакатывает его при накатке миграции.
3697.02 3703.02 SPEAKER_01 И, в частности, это один из, по-моему, это единственный мигратор, который поддерживается в кластерный режим.
3703.02 3709.02 SPEAKER_01 То есть он умеет перед накатом миграции делать блокировку.
3709.02 3737.02 SPEAKER_01 И если, например, мы говорим о том, что миграция накатывается при старте подов кубере и подов несколько, то там гарантируется, что один под получит блокировку, накатит миграции, и следующий под получается уже получит блокировку только после, и поймет, что миграции никаких больше не надо накатывать, и просто продолжит дальше выполнение.
3737.02 3739.02 SPEAKER_01 Как он блокировку делает? Через какие инструменты?
3739.02 3743.02 SPEAKER_01 На самом деле там поддерживается несколько баз данных.
3743.02 3749.02 SPEAKER_01 Там есть Postgres, MS SQL, и в каждой базе данных есть разные механизмы блокировок.
3749.02 3777.02 SPEAKER_01 В Postgres, по-моему, это называется консультативной блокировкой, что-то такое. То есть можно просто блокировать некое целочисленное число, которое должно быть где-то в константе прописано, и Postgres гарантирует, что если один процесс получил доступ, то другой процесс уже не сможет получить. Но аналогичные механизмы есть в MS SQL сервере тоже.
3777.02 3785.02 SPEAKER_01 Самое смешное, что тебе каким-то образом надо гарантировать, чтобы это число в другой процесс такой же не использовал, такое же точно число. И как это сделать?
3785.02 3799.02 SPEAKER_01 Это да, но в принципе, если использовать это для синхронизации, то это может быть не так критично, потому что кто-то получит блокировку, что-то сделает, разблокирует, и какой-то другой процесс сможет это сделать.
3799.02 3801.02 SPEAKER_01 А может и не разблокирует?
3801.02 3811.02 SPEAKER_01 Да, здесь нужно быть на самом деле внимательным. Либо как-то иметь возможность настраивать это, чтобы если такое случилось, то можно переконфигурировать.
3813.02 3821.02 SPEAKER_01 На самом деле вторую библиотечку вы периодически упоминали, по-моему, в выпусках радио.
3821.02 3823.02 SPEAKER_01 Это тест-контейнер.
3823.02 3839.02 SPEAKER_01 Она прям очень зашла для написания тестов. То есть до этого, когда мы писали интеграционные тесты, получается, локально мы что-то поднимали там в докере, поднял, например, Postgres в докере и прогнал тесты.
3839.02 3845.02 SPEAKER_01 Потом этот докер надо как-то убивать, что с ним делать? В GitLab приходилось пользоваться...
3845.02 3859.02 SPEAKER_01 В GitLab есть такой механизм сервисы. Это когда запускается GitLab-джоба, она выполняет какую-то работу, но рядом с ней может подняться еще набор контейнеров. Например, там же можно поднять Postgres или еще что-то.
3859.02 3877.02 SPEAKER_01 Но у GitLab есть проблема, что он эти сервисы может не убивать. То есть несколько последовательных запусков тестов могут использовать существующую базу данных, и это очень все сложно синхронизировать. С тест-контейнерами оказалось, что мегаудобно.
3877.02 3885.02 SPEAKER_01 То есть одни и те же тесты, один и тот же код работает как локально, так и в GitLab, в контейнерах.
3885.02 3889.02 SPEAKER_01 Причем не надо ничего чистить, там все само чистится.
3889.02 3893.02 SPEAKER_01 То есть он поднимает контейнеры, понимаешь, что все они завершились, и все это убивает.
3893.02 3895.02 SPEAKER_01 Нафиг.
3895.02 3897.02 SPEAKER_01 Можно запускать сколько угодно.
3897.02 3899.02 SPEAKER_01 Это отличная вещь.
3899.02 3901.02 SPEAKER_01 У меня по Evolve есть вопрос.
3901.02 3909.02 SPEAKER_01 А почему, если Evolve, ну, по крайней мере, у них там написано, что они вдохновлены Flyway, почему не Liquibase и не Flyway?
3909.02 3923.02 SPEAKER_01 Ну, поскольку у нас .NET, и нам хотелось бы в том числе из кода запускать миграции, то есть у нас прям .NET-овский процесс, который поднимает сервис, может в том числе накатывать миграцию.
3925.02 3927.02 SPEAKER_01 Поэтому нам хотелось встроить это все
3927.02 3929.02 SPEAKER_00 в наш проект.
3929.02 3935.02 SPEAKER_01 Понятно.
3935.02 3937.02 SPEAKER_01 Так, хорошо. В какой .DE работаешь?
3937.02 3951.02 SPEAKER_01 Ну, вообще, в последнее время .NET-овский код в райдере, но на самом деле я очень много пишу в S-ходе, потому что я очень много пишу на баше, потому что я очень много пишу пайплайнов для GitLab.
3953.02 3955.02 SPEAKER_01 И под какой персональной системой?
3955.02 3957.02 SPEAKER_01 Под виндой.
3957.02 3959.02 SPEAKER_01 Хорошо. Смотри, у нас такая хорошая статистика получается.
3959.02 3961.02 SPEAKER_01 Оказывается, я не думал, что в S-коде так много людей пользуются.
3961.02 3965.02 SPEAKER_01 Оказывается, у нас даже среди слушателей миллион народа.
3965.02 3967.02 SPEAKER_01 Ну и хотя ты от него денешься.
3967.02 3969.02 SPEAKER_01 Удобно же.
3969.02 3973.02 SPEAKER_01 Да не то, что удобно, просто действительно альтернатив никаких нет.
3973.02 3977.02 SPEAKER_01 Я, например, тоже очень много в PowerShell пишу, да, и раньше для PowerShell была своя собственная .DE.
3977.02 3997.02 SPEAKER_01 Потом они просто написали плагин для S-кода и сказали, все, наша собственная .DE никому не нужна, переходите все туда. Я так понимаю, что очень многие пошли по этому пути именно. Намного легче плагин написать для S-кода и не заморачиваться этими текстовыми редакторами, просто пишешь умный шарп какой-нибудь, IntelliSense даешь, подсветку даешь, и все, и занимаешься узкоспециализированным нормальным доменом.
3997.02 4001.02 SPEAKER_01 С тех пор только они Monaco Editor выпустили как раз, да, все устало.
4001.02 4003.02 SPEAKER_01 Все стали его брать и всюду втыкать.
4003.02 4005.02 SPEAKER_01 В общем, да.
4005.02 4011.02 SPEAKER_01 Ну вот, смотри, Microsoft то же самое пошел, он же Visual Studio for Mac в пользу S-кода.
4011.02 4015.02 SPEAKER_01 Скорее всего, он точно так же и подумал, зачем...
4015.02 4019.02 SPEAKER_01 Ну, они еще, видимо, посмотрели, сколько там людей пользуется Visual Studio for Mac, и в общем...
4019.02 4023.02 SPEAKER_01 Понял, что до того не стоит.
4023.02 4027.02 SPEAKER_01 Хорошо, Сергей, ты нам расскажешь, про какие библиотечки полезные?
4027.02 4029.02 SPEAKER_01 Расскажу.
4029.02 4035.02 SPEAKER_01 Я, поскольку FullStack и в Web, часто занимаюсь,
4035.02 4045.02 SPEAKER_00 в том числе в Nintendo, ну, у нас просто чистый голый HTML и JavaScript, без каких-то фреймворков фортпендерских.
4045.02 4049.02 SPEAKER_00 Вот, недавно буквально использовал
4049.02 4083.02 SPEAKER_01 Nuget для генерации айдишников по типу ютубовских. То есть, наши айдишники целочисленные в базе, чтобы их не выдавать на фронт, библиотечка просто использует алфавит и генерирует буквенное представление айдишников. В зависимости от того, какие буквы и в каком порядке использовал в алфавите, получается псевдо-случайное.
4083.02 4089.02 SPEAKER_01 То есть, его можно и туда и обратно генерировать. Это, конечно, не криптографически безопасно.
4089.02 4093.02 SPEAKER_01 При желании это можно обратно получить, это число исходное.
4093.02 4109.02 SPEAKER_01 Но, в принципе, для таких простых случаев, когда айдишник просто хочется скрыть от крипта посторонних глаз без заморочек на безопасность, библиотечка называется SQIDS.
4109.02 4115.02 SPEAKER_01 Она для многих языков есть, в том числе, вот сейчас, и для .NET.
4115.02 4117.02 SPEAKER_01 Вот.
4117.02 4119.02 SPEAKER_01 Вот такая интересная штука.
4119.02 4129.02 SPEAKER_01 А еще, кстати, Игорь напомнил про тесты. Вот недавно потыкал PlayWrite для end-to-end тестирования.
4129.02 4131.02 SPEAKER_01 Тоже в .NET.
4131.02 4133.02 SPEAKER_01 Интересная штука.
4133.02 4141.02 SPEAKER_01 То есть, он запускает браузер, точнее, не браузер, а движок браузера внутри себя.
4141.02 4151.02 SPEAKER_01 Открывает страничку, ты можешь заходить туда, что-то тыкать, вводить, логин, пароль условно нажимать кнопку, и все логинится.
4151.02 4159.02 SPEAKER_01 Он постепенно все твои действия может записать в .NET-код, в том числе .NET, но там еще и другие есть.
4159.02 4171.02 SPEAKER_01 И потом ты просто вставляешь этот код в тесты и можешь дописать, проверить, что после логина появилась залогиненная страница.
4171.02 4175.02 SPEAKER_01 Или проверить, что если пароль неправильный, то появилось сообщение такое.
4175.02 4183.02 SPEAKER_01 То есть чисто для end-to-end тестирования, но это все можно писать прямо в C#-коде без заморочек.
4183.02 4213.02 SPEAKER_01 - Кстати, крутая тема, я тоже давно смотрю на этот PlayWrite, для того, чтобы end-to-end тесты как-то реанимировать, потому что все предыдущие инструменты, которые я пробовал, они такие довольно убогенькие. И надо сказать, что нет, не было хороших инструментов для этого. - Да, более-менее хорошо генерировать, единственное, что почему-то, вот не знаю, может что-то не так у нас, почему-то иногда отваливаются по тайм-ауту, если много тестов, которые идут на несколько страничек, ну, на разные страницы идут, почему-то рандомно какая-то страница обязательно отвалится. Не знаю, почему.
4213.02 4215.02 SPEAKER_01 - Там они параллельно выполняются?
4215.02 4229.02 SPEAKER_01 - Нет, последовательно выполняются. Но почему-то как-то тайм-аут вызывает, потом перезапускаешь этот тест, все проходит. Перезапускаешь опять все тесты, все может проходить. А на следующий раз опять какая-то другая отвалится.
4229.02 4233.02 SPEAKER_01 - По видосикам, по документации, выглядит довольно привлекательно.
4233.02 4237.02 SPEAKER_01 То, что оно и мощное, и читабельное одновременно, и поддерживаемое. Как раз все, что надо.
4237.02 4243.02 SPEAKER_01 - Да, он прикольный. Во-первых, там не только .NET поддерживается, это, конечно, не имеет отношения к теме подкаста, но тем не менее.
4243.02 4249.02 SPEAKER_01 По-моему, там и Java, и JS, и там много языков точно было.
4249.02 4267.02 SPEAKER_01 А потом еще там есть запись трейса, очень удобно, что если запускаешь тест, можно прям посмотреть, в каком состоянии было окно вот этого браузера, даже снято, отображалось. Очень удобно отлаживать, можно прям его протыкать, найти, что пошло не так. Мне очень понравилось. - Да, да, да.
4267.02 4275.02 SPEAKER_01 Интересно, кстати, он может делать скриншоты, то есть помимо того, что он просто ходом может проверять, там, какой-то текст вывелся или что-то. Вот.
4275.02 4303.02 SPEAKER_01 Также можно делать скриншоты и в сочетании, допустим, еще с третьей библиотечкой, дай бог памяти, называется Acceptance Test или что-то такое, который позволяет сравнивать просто два выхода, то есть два файла фактически, то есть в тесте он генерирует какой-то файл, ты говоришь, да, он хороший, approval test.
4303.02 4305.02 SPEAKER_01 Вот.
4305.02 4331.02 SPEAKER_01 То есть это позволяет в тестах тестировать вывод, который у тебя может быть не в коде, например, там, картинки, музыкальный файл или что-то такое, PDF, если генерируется PDF, допустим, запускаешь тест, говоришь, да, он тебе первый раз открывает файл, ты говоришь, да, это то, что я хотел получить, и в следующий запуск он просто сравнивает эти два файла, если они одинаковые, значит, тест прошел.
4331.02 4335.02 SPEAKER_01 Если разные, он тебе покажет, что файл разный, тест.
4335.02 4343.02 SPEAKER_01 - Ну и это все дело работает в докер-контейнере, поэтому отдельно интересно, каким образом он оттуда скриншоты берет, но факт, что это работает.
4343.02 4351.02 SPEAKER_01 - А он запускает в Джо браузер и из своего браузера может, то есть, ну, из этого движка он делает скриншоты.
4351.02 4357.02 SPEAKER_01 - Непривычно, знаешь, когда у тебя в докер-контейнере есть какой-то скриншот интерфейса из браузера.
4357.02 4365.02 SPEAKER_01 - Ну, а снапшот тестирования он только так и работает, это как-то там кто-то XML файл, не XML, а там XLS файл сравнивает, кто-то еще там.
4365.02 4377.02 SPEAKER_01 То есть иногда приходится, иногда проще, чтобы сравнить отчет, да, проще сравнить его картинку, как он будет выглядеть, чем реально писать парсинг структуры документа и все равно ты там где-нибудь...
4377.02 4379.02 SPEAKER_01 - Точно.
4379.02 4391.02 SPEAKER_01 - С PlayWrite прикольная была тема, что у них примеры долго были без Minimal API, поскольку у меня подгорает, ну, не Minimal API, а как без, короче, не без Main, я забыл слово, как это называется у нас?
4391.02 4393.02 SPEAKER_01 Когда не нужен Main?
4393.02 4395.02 SPEAKER_01 - Когда Main? - Да.
4395.02 4397.02 SPEAKER_01 - Top-level statements?
4397.02 4407.02 SPEAKER_01 - Да, без Top-level Statements. Я пришел, сделал им PR с этим, они его приняли и написали мне, что вообще-то я, хоть и maintain этот проект, я вообще не знаю, как у вас C# синтакс, меня так это удивило.
4407.02 4419.02 SPEAKER_01 Ну, то есть я написал, что я делаю как бы PR в документацию, потому что мне кажется, что ну и к тому же это тесты, кому тут нужен Main? Ну, мне говорят, да, спасибо, я к этому особо не слежу.
4419.02 4421.02 SPEAKER_01 В смысле ты особо не следишь?
4421.02 4425.02 SPEAKER_01 - Где-то там человек еще, который C# знал, может быть, оно еще лучше работало бы, да?
4425.02 4439.02 SPEAKER_01 - Чудеса бы, возможно, там были какие-то. - Кстати, насколько я помню, вот когда я тыкал, там уже он генерировал с Top-level. То есть он может генерировать тесты, а может еще генерировать скрипт, который просто проходит по...
4439.02 4441.02 SPEAKER_01 Ну, то есть как только.
4441.02 4443.02 SPEAKER_01 - Это было больше года назад, я по-моему.
4443.02 4445.02 SPEAKER_01 Года полтора назад я туда приходил.
4445.02 4451.02 SPEAKER_01 Вот когда они только еще стали появляться в блогах, у нас как раз была актуальная задача, я пришел попробовать.
4451.02 4461.02 SPEAKER_01 И естественно, меня же не важные вещи волнуют, функциональность, а просто вот то, что как так, какой Main, что вообще, что это за неуважение к языку.
4461.02 4479.02 SPEAKER_01 - Вообще, если вы искали какую-то тему на .NEXT, например, то вот идеальная вообще, вот расскажите про эту библиотечку тестирования, про Approval Test, и вот вас просто с руками заберут. Поэтому классная тема, да, обидно, что у нас до сих пор про нее никто не рассказывал. Я надеюсь, что в будущем мы справимся.
4479.02 4487.02 SPEAKER_01 - А вот под капотом этот PlayWrite, он, получается, поднимает браузер, то есть ему нужно, чтобы там были установлены какие-то браузеры?
4487.02 4493.02 SPEAKER_01 - Там даже есть скрипт, который эти браузеры, то есть там в принципе все это автоматизировано.
4493.02 4511.02 SPEAKER_01 - Да, Nuget ставит в файлах Nuget, когда он ставится, он добавляет два PowerShell скрипта, которые при первом запуске, он говорит, тебе нужно там его выполнить, когда он поставит движок, и уже в следующий раз он будет выполняться.
4513.02 4515.02 SPEAKER_01 - То есть скачивает движок локально, да?
4515.02 4517.02 SPEAKER_01 - Да, да.
4517.02 4523.02 SPEAKER_01 - Я думаю, если запускать это где-то в контейнере, то есть это надо как-то предустановить же?
4523.02 4527.02 SPEAKER_01 - Как вариант, чтобы быстрее все это запускалось, да.
4527.02 4533.02 SPEAKER_01 - Ну ты можешь там, да, или каждый раз скачать, но скорее всего ты хочешь скомпилить в контейнер, да и все.
4533.02 4543.02 SPEAKER_01 - Зависит от длительности теста. Есть какой-то очень долгий тест, там у нас, допустим, диаграмма Ганта грузилась, она грузилась столько, что там можно браузер скачать, ничего страшного.
4543.02 4545.02 SPEAKER_01 - И перекомпилировать еще самому рантайм, да.
4545.02 4553.02 SPEAKER_01 - Да, и .NET перекомпилировать, совершенно неважно. Главное, тест не запускать, другие, в смысле .NET-овские, например, и все нормально.
4553.02 4557.02 SPEAKER_01 - Да, хорошая тема, блин, надо обязательно докопать мне тоже.
4557.02 4561.02 SPEAKER_01 Сергей, скажи, какой основной IDE и под какой операционной системой сидишь?
4561.02 4565.02 SPEAKER_01 - У меня Windows и Visual Studio.
4565.02 4569.02 SPEAKER_01 - Visual Studio, наконец-то, первый человек, у которого IDE основной.
4569.02 4575.02 SPEAKER_01 - И с базой тоже работаю, там дань JetBrains, там DataGrip.
4575.02 4577.02 SPEAKER_01 - Хорошо.
4577.02 4579.02 SPEAKER_01 А студия с ReSharper или без?
4579.02 4587.02 SPEAKER_01 - Нет, я несколько раз его пробовал, но почему-то понял, что он меня бесит больше, чем помогает.
4587.02 4599.02 SPEAKER_01 То есть, ну, какие-то, что-то все время в каких-то мелочах становится по-другому, поэтому как-то вот поведение очень не нашло.
4599.02 4601.02 SPEAKER_01 - Есть там порог, есть, конечно.
4601.02 4603.02 SPEAKER_01 Так, а, Антон, тебе слово.
4603.02 4619.02 SPEAKER_01 - Ну, я очень, я пользуюсь полиглотом ноутбукс очень часто, именно, когда мне нужно по-быстренькому понять, что делает эта или иная функция, как именно она выглядит на выходе.
4619.02 4651.02 SPEAKER_01 То есть, например, мне очень часто приходится работать с датой времени, а именно ту стринг использовать, причем использовать очень нестандартно, там, вывести только три числа из года, там, месяц, там, вывести в том или ином формате. Вот, как это все выглядит, я просто строчку написал в полиглот-ноутбуке, смотрю, как выводится. Там очень заходит, ну, экспериментируют с ML.NET, там, что, как там функционирует.
4651.02 4677.02 SPEAKER_01 Всякие, вот, как аналитик, всякие анализаторы пишут для себя, то есть, анализ данных, чтение CWS-файлов и как-то проброс анализ. Например, вот эта библиотечка Microsoft Data из большого фреймверка ML.NET очень в этом помогает. То есть, я использую очень много аналитических нудепакетиков, которые упрощают именно аналитику.
4677.02 4695.02 SPEAKER_01 И именно вот работа, скорее всего, как именно табличная информация какой-то, подтянуть с базы данных информацию, проанализировать, найти там корреляцию, интерполяцию сделать, пропущенные данные восстановить и тому подобное.
4695.02 4697.02 SPEAKER_01 То есть, там математику глубоко делаю.
4697.02 4699.02 SPEAKER_01 Это все на C#?
4699.02 4703.02 SPEAKER_01 Да. И много таких пакетов на C# есть? Хватает ли тебе?
4703.02 4707.02 SPEAKER_01 В целом не хватает.
4707.02 4717.02 SPEAKER_01 Есть, на самом деле, немножечко, немного библиотек. Есть вот Microsoft Data. Есть такой нудепакетик Microsoft ML Data.
4717.02 4719.02 SPEAKER_01 Это аналайзер.
4719.02 4721.02 SPEAKER_01 И есть Microsoft Data.
4721.02 4723.02 SPEAKER_01 Тоже два разных нудепакета.
4723.02 4725.02 SPEAKER_01 В целом они друг друга дополняют.
4725.02 4737.02 SPEAKER_01 И, собственно, я не помню название нудепакета, тоже от Майкрософта, который добавляет нумерик или как-то так, который вообще добавляет различные типы специфических данных.
4737.02 4739.02 SPEAKER_01 Тенсоры, матрицы и тому подобное.
4739.02 4743.02 SPEAKER_01 Он расширяет функционал в виде экстенджен-методов.
4743.02 4751.02 SPEAKER_01 И, в целом, мне этого с головой хватает, потому что все, что на математику я знаю, мне кажется, сложно ее писать 5-10 минут, и все работает.
4751.02 4755.02 SPEAKER_01 В основном, этим я использую.
4755.02 4761.02 SPEAKER_01 Интересно, сфера нудепакетов, которые позволяют работать каким-то образом с данными.
4761.02 4769.02 SPEAKER_01 Да, это очень удобно, потому что, например, писать своих библиотек, которые работают с матрицами или с тенсорами, это можно чокнуться.
4769.02 4777.02 SPEAKER_01 Да, математика, кажется, простой, но там, блин, не с того столбца обходишь матрицу, у тебя, получается, уже другие данные.
4777.02 4785.02 SPEAKER_01 Не так перемножаешь, скажем, матрицу А на матрицу В, умножить и их поменять местами, у тебя тоже будет абсолютно другой результат.
4785.02 4793.02 SPEAKER_01 И дальше у тебя бывают специфические функциональные пространства, например, количественные кривыли, полиогону А и так далее.
4793.02 4813.02 SPEAKER_01 Там вообще математика по-другому в себе работает, то есть спокойно 5+7 ты можешь получить 2, а не то, что в привычном варианте. И там нужно это держать в голове, все это, а библиотеки на себя берут поддержку этой актуальности. Это очень удобно.
4813.02 4817.02 SPEAKER_01 Точные науки, без них никуда. Именно.
4817.02 4821.02 SPEAKER_01 Хорошо, я правильно понимаю, что основная IDE у тебя - это полиглот-ноутбук?
4821.02 4825.02 SPEAKER_01 Нет, основная IDE - это Visual Studio большая.
4825.02 4837.02 SPEAKER_01 Я VSCode использую только для всякого непонятных питонов и так далее, либо же полиглот-ноутбук.
4837.02 4839.02 SPEAKER_00 Ну и дальше
4839.02 4843.02 SPEAKER_01 SQL скрипты там исполняю, чтобы посмотреть, что в базе данных.
4843.02 4849.02 SPEAKER_01 То есть, когда нужно быстро залезть в базу данных, а большая студия у меня не открыта, так я через нее бы полез.
4849.02 4853.02 SPEAKER_01 Я открываю VSCode, полиглот-ноутбук и там пишу скрипт-запрос.
4853.02 4855.02 SPEAKER_01 С райдером или без?
4855.02 4863.02 SPEAKER_01 Скажем так, он стоит с ReSharper, вместе с ним стоит райдер, но я не помню, когда я последний раз его открывал, вот честно.
4863.02 4865.02 SPEAKER_01 По-моему, было в марте.
4865.02 4867.02 SPEAKER_01 Хорошо.
4867.02 4869.02 SPEAKER_01 Договорились.
4869.02 4873.02 SPEAKER_01 Так, Гури, твои впечатления о годе?
4873.02 4877.02 SPEAKER_01 Я человек простой, у меня нужно скопировать код, его куда-нибудь вставить.
4877.02 4881.02 SPEAKER_01 Главной инструмент разработки - это буфер обмена.
4881.02 4883.02 SPEAKER_01 Клавиатура? Нет, буфер обмена с историей.
4883.02 4895.02 SPEAKER_01 Клавиатура, ладно, я могу мышкой это сделать, но вот если у меня история пропадает, то я скопирую. В МАКе я первое, что я долго искал, ну, относительно долго, пытался подобрать себе буфер обмена, который мне понравился.
4895.02 4917.02 SPEAKER_01 А также, если продолжить эту тему, мне очень нравится Sharp Lab, но я думаю, все его знают, но тем не менее, это такая вещь, которая вообще позволяет не запускать IDE в каких-то таких ситуациях, там, в дороге, хочешь что-нибудь посмотреть, мне очень нравится сам факт, что вообще мне не нужно, я просто код набросал в браузере, и в общем-то, какая-то основная функциональность.
4917.02 4921.02 SPEAKER_01 Можно посмотреть, как будет все работать к тому, что есть декомпилятор.
4921.02 4941.02 SPEAKER_01 Если говорить про Nuget, ну, вот говорили про тест-контейнеры, я до тест-контейнеров, до того, как я помнил, увидел, что они есть, я использовал .NET, Docker .NET библиотеку, которая позволяет самому запускать контейнеры, вот я сам писал обвязку, ну, это, наверное, такой интересный опыт, но, конечно, этим не стоит заниматься, если ты делаешь тесты.
4941.02 4959.02 SPEAKER_01 Вот, но вот у меня как раз дело такое-либо, в принципе, если делаешь какой-то уже продвинутый сценарий, то, может быть, где-то, потому что Docker .NET, это прям вот обертка над API Docker, и уже, если прям хочется какой-то кастумный сценарий, может быть, даже проще будет начать оттуда.
4959.02 4967.02 SPEAKER_01 Свой Kubernetes написать, если захотите. Да, ну, я почему нет, ну, как бизнес-задача, они, в конце концов, очень скучные часто.
4967.02 4969.02 SPEAKER_01 А вот свой Kubernetes написать, это...
4969.02 4977.02 SPEAKER_01 Ну, да, если раньше люди мечтали написать свою персональную систему, то теперь, примерно, это написать свой Kubernetes.
4977.02 4985.02 SPEAKER_01 Замагирование контейнерами. Да, ну там, или, как я видел недавно, свой ВАСМ-интерпретатор.
4985.02 4993.02 SPEAKER_01 Да, это тоже хорошо. Интерпретаторы вообще актуальны. Актуально, да, горячая система, и вот, напиши свой, почему нет.
4993.02 4997.02 SPEAKER_01 Как программка называется, которую для мака ты себе выбрал?
4997.02 4999.02 SPEAKER_01 Клиппи.
4999.02 5001.02 SPEAKER_01 Хорошо, и твоя основная IDE?
5001.02 5005.02 SPEAKER_01 Моя основная IDE - это VSCode, ну, и, соответственно, разрабатываю на маке.
5005.02 5015.02 SPEAKER_01 Немножко на виртуалке с этим самым, с виндой. Ну, там я, в основном, плюсовые проекты, если мне нужно что-то в плюсах поделать.
5015.02 5025.02 SPEAKER_01 Я вот плюсы никогда в VSCode не запускал. Не знаю, не думаю, что это сложно, но просто вот как-то так сложилось, что я привык, что уже плюсы я запускаю в студии, и точка.
5025.02 5037.02 SPEAKER_01 Хорошо, так, друзья, мне кажется, что все-таки надо уже закругляться, да, там два вопроса ушли, все, уже подкаст исчерпан. Давайте, может, по последнему кружку даваньем.
5037.02 5047.02 SPEAKER_01 Я бы даже сказал, Анатолий, я тебя, может быть, перебью, даже не по кружку прямо, а в свободном порядке в режиме дискуссии.
5047.02 5049.02 SPEAKER_01 А то у нас такой, а-ля, допрос, не допрос.
5049.02 5057.02 SPEAKER_01 Не знаю, ну, короче, можно вырываться, если есть что сказать. Согласен. Не надо ждать своей очереди аккуратно.
5057.02 5065.02 SPEAKER_01 Смотри, хотелось бы узнать, вот прошел год, был релиз .NET, релиз, мне кажется, все согласны, что не самый сильный, не самый интересный.
5065.02 5075.02 SPEAKER_01 Может быть, вот хочется узнать, какие самые плохие, что вы можете выделить из этого релиза, да, то есть вообще какая-то полная дичь.
5075.02 5083.02 SPEAKER_01 И, наверное, чтобы завершать на какой-то позитивной ноте, что бы вы пожелали все-таки .NETу, чтобы у него появилось?
5083.02 5089.02 SPEAKER_01 Если бы вы повелевали всем микрософтам, что бы повелели бы в первую очередь?
5089.02 5091.02 SPEAKER_01 Кто хочет начать?
5091.02 5113.02 SPEAKER_01 Я как человек, который много рассказывал в этом году про .NET, даже, может быть, рассказывал больше, чем писал на нем, на самом деле мне немножко не то, что обидно, жалко, что все вот эти эксперименты там с GrinderDAM и прочими как-то проходят быстро, ну, относительно быстро и относительно незаметно.
5113.02 5117.02 SPEAKER_01 То есть, как вот мы в последнем подкасте рассказывали про...
5117.02 5119.02 SPEAKER_01 про что мы рассказывали? А, про
5119.02 5121.02 SPEAKER_00 Async 2, который, да,
5121.02 5127.02 SPEAKER_01 где, значит, это ввели таки в экспериментальном режиме атрибут вида "сделай и конфигурируй false на всю сборку".
5127.02 5149.02 SPEAKER_01 То есть вот всякие такие мелочи по ощущениям, да, я не человек внутри Microsoft, поэтому, может быть, я не прав, но именно ощущение такое, что с GrinderDAM что-то там поэкспериментировали, быстренько за, там, полгодика поняли, что, ну, в принципе, взлетит, но дальше продолжать не будем, и в этом смысле мне бы хотелось такого более, ну, что ли, основательного подхода, типа как в Java.
5149.02 5151.02 SPEAKER_01 В Java Project Bloom, сколько он там?
5151.02 5153.02 SPEAKER_01 Года три, мне кажется.
5153.02 5157.02 SPEAKER_01 Я только про него слышу, а наверняка он начинался еще раньше.
5157.02 5163.02 SPEAKER_01 То есть у них как бы фича может лежать в превью, ну, не знаю, там, релиза 3, 4, 5, легко.
5163.02 5167.02 SPEAKER_01 Причем у нас же есть разные виды превью, там, экспериментальное превью и так далее.
5167.02 5209.02 SPEAKER_01 Вот, у нас как-то вот, я сейчас смотрю на этот эксперимент с Async 2 и тоже кажется, что сейчас вот в восьмом тут, знаете, они что-нибудь поэкспериментируют, может быть, какую-то мелочь заберут в язык, но, ну, или в runtime, да, а может, вообще не заберут, скажут, ну, типа мы подумали, посмотрели, это текущий вариант, но, может, это и ничего для общей стабильности, именно это позволяет как бы не бояться, да, платформы, в отличие от того же JavaScript, где это год не позанимался, и уже все новое, и там, берешь проект, показываешь следующему пришедшему разработчику, он говорит, это тут вообще все не так написано как бы, хотя предыдущим как бы говорил, что все было отлично, и, в общем-то, ему вполне верилось, было все прекрасно, фичи пилились, как бы скорость хорошая.
5209.02 5239.02 SPEAKER_01 Вот, с одной стороны, такая стабилизация на этом меня радует, а с другой стороны, я, может быть, бы хотел немножко такого более экспериментально свободного подхода и в языке, и в рантайме, то есть там как бы, долгое время мы просим Microsoft эти, как они там, discriminated unions, да, или что-нибудь в таком духе, долго просим там, ну, ладно, не просим, но вот те же идеи там Green Threads в разных рантаймах они работают.
5239.02 5265.02 SPEAKER_01 Может быть, действительно, и не нужно, и понятно, что команда не резиновая и тратит столько времени, ну, наверное, нет смысла, но, блин, как пользователь мне хочется всяких разных экспериментов, да, чтобы было так, было и так, там, конкурировали разные варианты, может быть, кто-то пробовал какие-то альтернативы, что-нибудь делать, вот, то такого мне как бы не хватает.
5265.02 5289.02 SPEAKER_01 Ты хочешь, чтобы доставка изменений была сделана как-то похоже на то, как сделано в Java, то есть, что у них есть флаги, которые каждый может взвести, и у него меняется поведение. Может быть, даже не обязательно флагами, то есть, меня очень хорошо устраивает подход Дотонета в виде, что вот у тебя, значит, как бы минимум конфигураций, хотя, ну, как минимум, да, если посмотреть в код, там, это флагов 50-60, которые позволяют конфигурировать рантайм, просто они там мало документированы.
5289.02 5317.02 SPEAKER_01 Может быть, отдельные билды специальные, может быть, то есть, я не говорю, что это прям единый рантайм должен быть, но... Я не про реализацию, но что ты хочешь, чтобы его пилить, вот прямо, как они, не только Loom, они же много что так делают. Да, они много чего так делают, причем делают это в параллель, причем это как-то в параллель уживается, я не знаю, как оно уживается, но как-то это уживается. Если ты хочешь это использовать, ты приходишь, ты вот в этот свой аргумент, который ты в JVM передаешь, набухиваешь все того, что ты хочешь. Да, это я понимаю, но...
5317.02 5319.02 SPEAKER_01 Друг друга не ломает?
5319.02 5321.02 SPEAKER_01 Естественно, ломает.
5321.02 5337.02 SPEAKER_01 Короче, какую-то такую штуку хочется, потому что кажется, что вот такой подход, который... Ну, я не знаю, это, может быть, такая вторая уже часть к этой хотелке в том, что хочется, чтобы больше...
5337.02 5341.02 SPEAKER_01 Короче, чтобы не только Microsoft смотрел.
5341.02 5359.02 SPEAKER_01 То есть, в Java, как бы, что прикольно, что понятно, что есть, как бы, их там раз-два я обчелся, условно, там Oracle, Red Hat, кто еще из основных контрибьюторов, но в целом там есть несколько контор, которые по-разному смотрят на то, что можно сделать в рентаме Java.
5359.02 5361.02 SPEAKER_01 У нас, понятно, это делает только Microsoft.
5361.02 5375.02 SPEAKER_01 Вот. Может быть, если иметь такой механизм, возможно, гибкости и как-то что-то включать, что-то выключать, может быть, это позволит еще кому-то что-то точно так же гибко привнести в качестве экспериментальной фичи.
5375.02 5377.02 SPEAKER_01 Не знаю.
5377.02 5383.02 SPEAKER_01 В Java просто же это еще связано с тем, что смотри, там, у JetBrains есть своя Java, у Amazon есть своя Java.
5383.02 5387.02 SPEAKER_01 То есть вопрос там количества изменений, которые есть, но тем не менее.
5387.02 5393.02 SPEAKER_01 И вот если в дотнете будет такое, то это какая-то совсем другая реакция.
5393.02 5395.02 SPEAKER_01 Это будет уже не совсем дотнет, а ближе к Java.
5395.02 5397.02 SPEAKER_01 Это будет, может быть.
5397.02 5419.02 SPEAKER_01 Да, возможно, это хорошо, да, но тем не менее вот это надо представить себе, что тогда там будет, условно говоря, Сбербанк или Яндекс, вот у него будет свой дотнет. Да, я и говорю, что мне в этом смысле нравится монолитность и стабильность дотнета, потому что как только мы вносим несколько вендоров, ну, назовем их вендорами, несмотря на то, что там почти полная копия, плюс-минус с какими-то кастомизациями, но все равно это действительно начинается.
5419.02 5421.02 SPEAKER_01 Какую Java мы будем использовать?
5421.02 5423.02 SPEAKER_01 Кого можно, кого нельзя?
5423.02 5425.02 SPEAKER_01 Чем они отличаются, зачем?
5425.02 5427.02 SPEAKER_01 В этом смысле, конечно... Там еще сертификация, да, пардон.
5427.02 5433.02 SPEAKER_01 Там же еще будет сертификация. Ну, то есть, либо это будут уже такие, как бы, неофициальные вендоры, либо нужно будет вводить сертификацию.
5433.02 5435.02 SPEAKER_01 А сертификации у Майкрософта нету, да.
5435.02 5437.02 SPEAKER_01 Потому что аналогов JavaScript и CK у нас нету.
5437.02 5439.02 SPEAKER_01 Вот.
5439.02 5445.02 SPEAKER_01 Поэтому... Короче, я с одной стороны за какую-то движуху в экосистеме, так скажем.
5445.02 5453.02 SPEAKER_01 Потому что очень у нас все... Тепло лампово стабильно, понятно, уже много-много-много-много лет, сколько я в дотнете варюсь.
5453.02 5457.02 SPEAKER_01 И это хорошо в каком-то смысле. То есть...
5457.02 5461.02 SPEAKER_01 Проще переходить на новый рантайм и...
5461.02 5463.02 SPEAKER_01 Да, смотря, опять же, на ту Java, где как бы это...
5463.02 5467.02 SPEAKER_01 Ой-ой-ой. Следующий вопрос про ZLTS, но мы все равно не пойдем туда.
5467.02 5471.02 SPEAKER_01 Потому что вдруг там что-нибудь не то.
5471.02 5475.02 SPEAKER_01 Но с другой стороны, как-то немножко расшатать экосистему тоже хочется.
5475.02 5479.02 SPEAKER_01 Пошатать ее, точнее, скажем так, чтобы, может быть, что-то делать по-другому.
5479.02 5491.02 SPEAKER_01 Слушай, мне кажется, это вообще первый раз, наверное, появляется такая идея, что раньше-то дотнет - это был самый передовой язык. У него там очень много передовых идей и технологий внедряли.
5491.02 5495.02 SPEAKER_01 То есть с того же самого F# тянули просто какими-то...
5495.02 5497.02 SPEAKER_01 Какие-то еще эксперименты.
5497.02 5499.02 SPEAKER_01 То есть он реально был глоток свежего воздуха.
5499.02 5511.02 SPEAKER_01 Если мы говорим про программистов, если люди приходили там с CI, с PHP, с Python и прочих глупостей, переходили на дотнет как на глоток свежего воздуха. Ну не говоря уже про Java, конечно, это вообще заскорю злая мамонта.
5511.02 5515.02 SPEAKER_01 Вот. И всегда это позиционировалось как глоток свежего воздуха.
5515.02 5519.02 SPEAKER_01 Всегда там были передовые фичи, хорошие эксперименты, новые библиотеки, классные подходы.
5519.02 5523.02 SPEAKER_01 И вот сейчас действительно встает вопрос, а что-то мы стагнируем.
5523.02 5535.02 SPEAKER_01 Что-то вот... Упал дух авантюризма, упало количество экспериментов, и некоторые даже старперные языки начинают нас по некоторым пунктам даже и обгонять. Что еще буквально несколько лет назад представить было сложно.
5535.02 5539.02 SPEAKER_01 Мне кажется, что обгоняют-то все-таки, знаешь, как тактическое и стратегическое.
5539.02 5551.02 SPEAKER_01 То есть вот эти изменения, это же не синтаксис. Потому что по синтаксису не знаю. Ну пусть меня хейтят любители Джавы, но после дотнета никакого удовольствия писать на Джаве нет.
5551.02 5553.02 SPEAKER_01 Я подтвержу.
5553.02 5569.02 SPEAKER_01 Но тем не менее, я вот допускаю, что есть люди, которым больше нравится Джава, и я просто привык к дотнету. Да, но тем не менее, речь же про какие-то... И речь про рантайм. То есть речь не про то, что все вещи, которыми в основном притягивают дотнет, это скорее какие-то тактические улучшения, что тебе приятнее писать код.
5569.02 5607.02 SPEAKER_01 Условно говоря, ринг - это не про скорость. А тут речь про то, что смотри, ты что-то делаешь, и у тебя рантайм за счет этого начинает лучше работать. Понятно, что понятие "лучше" как-то более эффективно. И это не совсем то же самое. Я не помню, чтобы дотнет... Может, я это упустил, но я не помню, чтобы дотнет был именно флагманом в плане того, что там какой-то очень крутой рантайм. Там наоборот рантайм позволял многие вещи делать. То есть ты там мог вплоть до каких-то делать ассемблерные вставки и получать максимум производительности, интринсики, но вот такого, чтобы рантайм прямо за тебя что-то под капотом сильно делал, может, это как-то у меня прошло.
5607.02 5613.02 SPEAKER_01 Ну, у рантайм дотнет действительно дизайнился немножко с другой стороны. Он дизайнился с большим упором на интероп.
5613.02 5619.02 SPEAKER_01 Плюс у... Нет, у нас на самом деле... Ну, у нас философия немножко другая, да, в каком-то смысле.
5619.02 5633.02 SPEAKER_01 То есть понятно, что дотнет наиболее часто сравнивают с джавой, и вот мы там когда говорили с ребятами из там МГЦ-команды, из рантайм-команды, они говорят, что у нас политика такая - делать горбочеколлектор максимально неконфигурируемо.
5633.02 5635.02 SPEAKER_01 Ну, то есть вот там у нас выставлены полторы ручки.
5635.02 5637.02 SPEAKER_01 Вот этого достаточно.
5637.02 5639.02 SPEAKER_01 В отличие от... Универсальным вроде и термин был.
5639.02 5643.02 SPEAKER_01 Да-да-да. Максимально универсальным, чтобы он просто работал везде.
5643.02 5645.02 SPEAKER_01 И сам подстраивался под все, что нужно.
5645.02 5655.02 SPEAKER_01 Это немножко... Ну, не то, чтобы это прям противоречит целям джавы, там тоже, в принципе, достаточно универсальный коллектор, но его как бы по дефолту все подкручивают в среднем. Вот.
5655.02 5663.02 SPEAKER_01 Но... Да, но дай, просто прости, краткий комментарий на этот счет. Но тебе у меня, если взять любую книжку по джаве, там напишут, ребята, не лезьте в эти флаги.
5663.02 5665.02 SPEAKER_01 Да. Не надо.
5665.02 5679.02 SPEAKER_01 Вы, скорее всего, если вы туда полезли, дело не в этом. Но, тем не менее, да, есть такая и традиция, и там действительно эти флаги как-то принято вот их выставить наружу. Я не знаю, вот у кого на сборках куча флагов выставленных, но в джава сборку предстоит себе без флагов торчащих это. Ну вот я...
5679.02 5681.02 SPEAKER_01 Размер хипа я не указал, как это...
5681.02 5683.02 SPEAKER_01 Как без XMX жить?
5683.02 5693.02 SPEAKER_01 Или XMS? Как бы, конечно, без этого никак никуда не жить. Я любой проект на работе беру на джаве, там везде что-нибудь написано, и нужно это на 2-3 строки переносить, чтобы все это запустилось.
5693.02 5699.02 SPEAKER_01 Вот, нет. Но, например, если говорить про тот же Garbage Collector, есть, например, условный...
5699.02 5701.02 SPEAKER_01 Кто там? Go, например, да? У него же тоже Garbage Collector.
5701.02 5703.02 SPEAKER_01 И тоже нифига не конфигурируемый.
5703.02 5719.02 SPEAKER_01 Но при этом как бы вполне шустрый и быстрый. Понятно, что он заточен под один единственный язык, а не под миллиард языков, которые на time могут быть, и универсальный, и у него там не силен я в Go, но, по-моему, там с интеропом... Не, он там есть, но, может быть, не такой прям...
5719.02 5725.02 SPEAKER_01 прямолинейный, как в дотнете, хотя могу ошибаться и тут могу наврать серьезно. Может быть, там все хорошо.
5725.02 5735.02 SPEAKER_01 Но вот смысл в том, что как бы при сравнении с джавой я понимаю, чем мы там проще, лучше, не знаю, языком, рантаймом. Ну, лучше. В каких аспектах мы лучше или мы другие?
5735.02 5755.02 SPEAKER_01 А вот в сравнении действительно со многими появляющимися, современными, хотя назвать Go появившимся и современным сколько ему уже лет, рука мал, вряд ли поднимется, с ними уже, да, кажется, что мы такой старенький, стабильный, такой...
5755.02 5799.02 SPEAKER_01 Старенькая стабильная платформа, язык хотел сказать, но платформа в целом, в которой удобно писать, если ты как бы на ней писал, если ты на ней не писал, в принципе, в нее несложно вкатиться, да, если тебе не нужно выучить вообще весь C#, вот, и знать, что такое ключевое слово делегат, которого современно входит, надеюсь, уже особо не встречается, но, блин, нет вот этого вот драйва и вот этого вот какого-то движухи в экосистеме, то есть мы все такие, типа, вот, там, ну, в подкастах мы тоже упоминали, вот, типа, в нотнете очередная драма, там, кто-то что-то сказал, и так далее, а вот, как ни странно, в каком-то смысле хочется такого иногда, чтобы происходило, может быть, даже побольше. Не знаю, будет это во вред или в пользу, но...
5799.02 5835.02 SPEAKER_01 Типа встряски. Типа встрясок, да, чтобы и Майкрософт тоже понимала, то есть, потому что, кажется, в том числе, там, по некоторым, не знаю, косвенным признакам, да, что основной драйвер нотнета - это во многом, как бы, там, first-tier кастомеры, которые, как бы, что, ну, Ажура, в первую очередь, наверное, Ажура, Бинг, ну, и прочие очень крупные ребята нотнете, которые приходят и говорят "Хотим вот это". Ну, и кто-то такой, да, окей, а то, что там есть еще миллиард других не таких крупных, которым нужно что-то другое, ну, как бы, ладно, подождут комьюнити, может, что-нибудь принесет.
5835.02 5837.02 SPEAKER_01 А комьюнити, как бы, вроде и не надо особо.
5837.02 5839.02 SPEAKER_01 Хотя, вон, начнем.
5839.02 5841.02 SPEAKER_01 Мне кажется, это...
5841.02 5843.02 SPEAKER_01 Давай-давай.
5843.02 5851.02 SPEAKER_01 Мне кажется, это такой, как бы, маятник, что ли, между Sharp'ом и Java.
5851.02 5863.02 SPEAKER_00 Сначала Sharp был только на винде, все попрекали Sharp только виндой, он раскачнулся в open source. Потом, значит, там начали добавлять фичи, как вы говорили, да, link-async
5863.02 5865.02 SPEAKER_01 первые были.
5865.02 5877.02 SPEAKER_01 Потом в этот раз теперь стали Java упрекать, что там этого нет, туда начали закидывать все вот эти вещи.
5877.02 5879.02 SPEAKER_01 Немножко качнулось с другой стороны.
5879.02 5885.02 SPEAKER_01 Теперь, мне кажется, Microsoft пошли по такому пути, что давайте мы упростим вход.
5885.02 5895.02 SPEAKER_01 Мы, значит, убрали, там, сделали top-level statements, мы сделали minimal API, чтобы прямо, вот, как ты скрипт написал, так он сразу у тебя в сайт запустился.
5895.02 5899.02 SPEAKER_01 То есть, куда-то вот в эту сторону ушли.
5899.02 5905.02 SPEAKER_01 Может быть, оно опять качнется в сторону фичи языка через несколько раз.
5905.02 5929.02 SPEAKER_01 Так, видишь, мне не то чтобы нужны фичи языка, мне в принципе, я понимаю всех тех, кто там хочет всякие эти discriminated unions и прочие штуки, но в целом современный C#, ну, он, не знаю, как бы, я вот пишу еще на Java довольно регулярно, и там тоже есть упрощение, но C# в разы проще, ну, в смысле компактнее, выразительнее, не знаю, что.
5929.02 5939.02 SPEAKER_01 Ну, Python, наверное, еще более выразительный, хотя там нету некоторых удобных .NET конструкций, либо я просто про них не знаю, я не такой большой программист на Python.
5939.02 5947.02 SPEAKER_01 Но смысл в том, что как раз дело не в языке, дело в том, что кажется, что .NET это скорее про...
5947.02 5951.02 SPEAKER_01 Короче, нету какого-то такого...
5951.02 5963.02 SPEAKER_01 Ну, то, что мы опять же в подкасте обсуждали, больших продуктов, если это не конечный продукт, нету вот этой вот движухи в экосистеме, где у тебя много больших контрибьюторов, которые что-то приносят.
5963.02 5967.02 SPEAKER_01 Либо, может, это, конечно, нам изнутри так кажется, не знаю.
5967.02 6017.02 SPEAKER_01 Если цитировать классику, говоришь, что бытие определяет сознание. Ну, как раз здесь .NET разработчики в каком-то смысле привыкли, что у нас сингл-вендор, который создает эту эпосистему, и, с другой стороны, действительно, вот тот момент, когда формировались вещи вроде кавки, они уже написаны на Java, условно, Cassandra, ну, там, возьмем другие примеры, и никто их переписывать не будет, а, с другой стороны, нужна ли вторая кавка? Ну, наверное, особо нет. Третий вопрос тут, опять же, важно, что не уверен, что это очень эффективная вещь, но, тем не менее, ты можешь взять Java, если у тебя очень крупная компания, взять себе, у тебя свой дистрибутив Java, и ты уверен, что что бы там ни сделал условный Microsoft, в данном случае Oracle, в случае с Java, тебе пофигу, у тебя есть своя Java, и ты выпускаешь на ней любые свои продукты, и потом вот пусть Java развивается, пусть Java не развивается, мне все равно.
6017.02 6021.02 SPEAKER_01 В случае с .NET получается, что ты должен быть уверен в Microsoft.
6021.02 6053.02 SPEAKER_01 Может быть, это тоже играет какую-то роль. Но, мне кажется, все равно .NET-разработчики в целом привыкли, что должен сделать Microsoft. То есть, хоть кто-то и ругается, вот как ругали Microsoft за System Text JSON, что же вы сделали, там была единственная нормальная библиотека, сторонняя, и вы, сволочи, сделали все оно свое. Ну, все равно, мне кажется, для большинства как-то удобнее, что это вот микрософтская библиотека, ты берешь и используешь. Ну, ничего, допилили, теперь она быстрее. Нет, она хорошая, я просто говорю о том, что было возмущение такое, что вы убиваете экосистему.
6053.02 6065.02 SPEAKER_01 Смотрите, была нормальная сторонняя библиотека, ну, потому что в каком смысле так и есть. То есть, вот у тебя в Java куча вендоров, куча разных продуктов, и ты, условно говоря, независишь ни от кого.
6065.02 6067.02 SPEAKER_01 У этого есть плюсы и минусы, как мы сейчас обсуждали.
6067.02 6071.02 SPEAKER_01 Но, тем не менее, здесь был мощная вещь, которую использовали все.
6071.02 6075.02 SPEAKER_01 Ну, потому что, а как ты будешь без сервизатора? Что тебе делать?
6075.02 6085.02 SPEAKER_01 Вот. И тут тебе сказали, так, слушай, ну, это будет микрософтская библиотека теперь. Все такие, ну, окей, отлично. Но вот, тем не менее, экосистема от этого не стала шире.
6085.02 6093.02 SPEAKER_01 Да? Ну, проблемы с фаундэйшн мы тоже знаем. Опять же, я не уверен, что в этом виноват Майкрософт.
6093.02 6107.02 SPEAKER_01 Я себе не очень представляю такую ситуацию. Вот у меня есть какой-то продукт, мне нравится, как он развивается, я получаю от него удовольствие и деньги, и все. И мне, я такой сижу, думаю, ну, надо бы его раздать всем. Не, я Майкрософт я прекрасно понимаю.
6107.02 6121.02 SPEAKER_01 Продукт приносит, на нем написаны ключевые свои сервисы, там условный ажур, бинг и прочее. Ну, как бы, отлично, мы их развиваем, мы действительно развиваем продукт для этих сервисов. То, что мы можем параллельно, ну, кого-то еще привлечь, там, попрограммировать на нем, ну, здорово.
6121.02 6127.02 SPEAKER_01 Почему нет? Нет, все понятно. Ну, как-то вот, не знаю, хочется чего-то свеженького.
6127.02 6131.02 SPEAKER_01 Может, потому что я очень давно в дотнете, может быть, еще что-то, не знаю.
6131.02 6143.02 SPEAKER_01 Я тебя поддерживаю в том смысле, что я бы очень хотел, чтобы кто-то вломился в офис конфлюента, там, я не знаю, кого-нибудь еще, переписал бы им все их продукты на дотнет, удалил джаоские исходники и сказал, ребята, ну, это все на дотнете.
6143.02 6145.02 SPEAKER_01 Они такие, ну, ну, ладно, что делать?
6145.02 6149.02 SPEAKER_01 Игорь, Игорь, а что для тебя, ну, что является критерием свежести?
6149.02 6155.02 SPEAKER_01 Потому что, если так со стороны посмотреть, то в дотнете все еще есть какая-то движуха.
6155.02 6159.02 SPEAKER_01 Может быть, она просто не укладывается в то, что ты хочешь, или то, что ты считаешь свежей?
6159.02 6163.02 SPEAKER_01 Смотри, движуха есть, и движухи много.
6165.02 6169.02 SPEAKER_01 А вот и звук идет. Интересно, от меня, не от меня?
6169.02 6171.02 SPEAKER_01 Сергей, попробуй замьют.
6171.02 6175.02 SPEAKER_01 Блин, похоже от меня, секунду, ребята. Ты замьютил.
6175.02 6181.02 SPEAKER_01 А теперь скажи, нормально тебе или нет?
6181.02 6183.02 SPEAKER_01 Вот, сейчас нет звука.
6183.02 6187.02 SPEAKER_01 Но пока я, даже когда я замьютился, у меня звук в ушах был, значит, это что-то у меня. Ладно.
6187.02 6189.02 SPEAKER_01 Будут глюки на записи, ничего страшного.
6189.02 6195.02 SPEAKER_01 Смотри, Майкрософт много делает для рантайма прям дофигища.
6195.02 6209.02 SPEAKER_01 Все эти tiered, компиляция, вот это все, то, что было в каких-то рантаймах других давно, у нас появилось. Здорово, супер, вообще зашибись. Мы там быстро работаем, на стеках реплейсим функции, отлично, супер фича и так далее.
6209.02 6213.02 SPEAKER_01 С рантаймом наверно хорошо развиваемся.
6213.02 6215.02 SPEAKER_01 На идифаот, опять же, и так далее.
6215.02 6227.02 SPEAKER_01 С языком ну, помедленнее, да, все отмечали инновационность шарф-12, но как бы фиг с ним, он и так хороший, на самом деле, по мне.
6227.02 6229.02 SPEAKER_01 Можно там что-то добавлять, но в целом нормально.
6229.02 6231.02 SPEAKER_01 У меня не было каких-то особых проблем или недостатков.
6231.02 6261.02 SPEAKER_01 То есть, рантайм окей, язык, ну, окей, а вот вокруг, может быть, действительно мне не хватает, я там последние годы полтора в джао смотрю, может быть, мне действительно из-за того, что у нас Microsoft единственный вендор, меньше, что ли, не знаю, конкуренции, не конкуренции, фиг его знает, какой-то такой именно экосистемной движухи вокруг, вот я бы так сказал.
6261.02 6269.02 SPEAKER_01 Чтобы может быть, подсознательно, я это в том числе хочу ради вот чего.
6269.02 6287.02 SPEAKER_01 Если я сейчас прихожу в какую-нибудь контору и говорю, ребят, давайте мы вот этот продукт напишем на джао, все такие, ну, давай, какую джао выберем, у нас есть там RedHat, Oracle, вот это все, типа, есть там российский, да, астрид, астрид, линукс, кто у нас там сейчас российский, не помню, джао, ну, короче, есть какие-то.
6287.02 6293.02 SPEAKER_01 Вот, а когда я прихожу, говорю, ребят, давайте напишем на дотнет, все такие, о, это Microsoft, все, не.
6293.02 6325.02 SPEAKER_01 Вот, как бы, может быть, мне хотелось бы, чтобы была какая-то движуха именно с точки зрения, чтобы народ перестал говорить, что Microsoft, дотнет - это и есть Microsoft, мы тут только что обсуждали, но вот это мешает мне, это действительно просто тупо мешает мне применять дотнет, на самом деле, довольно на многих проектах, потому что мне не удается переубедить очень часто каких-нибудь высоких там архитекторов корпоративных, что это, это, конечно, open-source, MIT, вот это все, но, блин, это Microsoft, нет, нельзя.
6325.02 6327.02 SPEAKER_01 Так, а чем плохо Microsoft?
6327.02 6329.02 SPEAKER_01 Предупреждение, мне тоже кажется.
6329.02 6331.02 SPEAKER_01 Да, а чем он плохо?
6331.02 6339.02 SPEAKER_01 Я думаю, это уже парадигма мышления, а вендерлог-то все-таки никто не отменял, ну, то есть, как бы, да.
6339.02 6347.02 SPEAKER_01 Вендерлог - американская корпорация, которая может сделать что угодно, там, начать лицензировать, сменить лицензию, еще что-нибудь.
6347.02 6351.02 SPEAKER_01 Ну, ты же можешь загонить и собрать свой рантайм.
6351.02 6353.02 SPEAKER_01 Могу.
6353.02 6363.02 SPEAKER_01 Оверхед у тебя возрастет, ну, то есть, в Джаве тебе нужно, чтобы у нас, сколько там российских дистрибутивов, не один, по-моему, их, по крайней мере, в Афганистан, мне казалось, что их...
6363.02 6365.02 SPEAKER_01 Ну, наверняка.
6365.02 6377.02 SPEAKER_01 Ну, вот, соответственно, и еще какое-то количество зарубежных, то есть, тебе нужно, чтобы тебя, условно говоря, все отвернулись, чтобы это свалило счастье на тебя, то есть, ты бы тогда сел и встал.
6377.02 6385.02 SPEAKER_01 В случае с Майкрософтом, вот одна компания, условно говоря, они, как нам говорят, вот VSCode, смотрите, у вас платный экстеншн в VSCode, ну, и что?
6385.02 6389.02 SPEAKER_01 Ну, то есть, условно говоря, ты либо платишь, либо идешь нахрен, правильно?
6389.02 6400.02 SPEAKER_01 Кстати, вспоминается история с HotReload, который хотели делать эксклюзивно для Вейс Большой зал-кода, и яркий пример этого, кстати, да, было года 2-3 назад.
6400.02 6403.02 SPEAKER_01 Не, ну, это Tooling, с Tooling ладно, с Tooling, в принципе, и идея...
6403.02 6411.02 SPEAKER_01 Не, ну, она-то заявлялась как то, что это поддерживается там рантайм, чем-то там таким, а хотели сделать эксклюзивно для Tooling.
6411.02 6417.02 SPEAKER_01 Скорее, про то, что все равно любую фишку Майкрософт имеет, и имеет полное право, действительно, поменять лицензию.
6417.02 6419.02 SPEAKER_01 Как бы я согласен, ну, а почему нет-то?
6419.02 6420.02 SPEAKER_01 Ну, имеет право.
6420.02 6428.02 SPEAKER_01 Ну, так точно и Oracle имеет право поменять любую лицензию. Да, ну, кроме Oracle есть куча ребят, которые тоже должны это сделать, чтобы обломать тебе всю малину.
6428.02 6454.02 SPEAKER_01 А здесь ты прям, тут ты сразу окажешься, сразу, то есть вот в тот момент, когда Майкрософт тебе говорит, ты как раз выкачиваешь в тот же день рантайм, и начинаешь его у себя собирать. Oracle там, кстати, другая же тема, там же, я могу сейчас ошибаться, я не настолько силен в джаво-мире, но там же как бы именно само OpenJDK, если я правильно помню, и все в него контрибьючат, грубо говоря, то есть это не джава, она не оракловая сейчас.
6454.02 6458.02 SPEAKER_01 То есть Oracle точно такой же контрибьютер в OpenJDK, как любая другая контора.
6458.02 6460.02 SPEAKER_01 Вот.
6460.02 6468.02 SPEAKER_01 И они не могут поменять лицензию OpenJDK джапейльного. Они могут себе склонить OpenJDK и продавать, ну, собственно, что они и делают. Oracle-JDK.
6468.02 6476.02 SPEAKER_01 Да-да-да, у них там набор, как вот этот был, Enterprise Java, я тоже... Да, расширений, компонентарных расширений, которые делают только они, да.
6476.02 6492.02 SPEAKER_01 Короче, там все, как бы, короче, вендерлог есть везде, просто здесь он прям сведен к одной компании, и это прям, причем американской, причем известно, что она была Windows-only, и ты попробуй, скоро произвели архитекторов, это выбей из некоторых.
6492.02 6498.02 SPEAKER_01 Вот. Я могу сколько угодно это доказывать, но вот в техрадаре компании нету.
6498.02 6500.02 SPEAKER_01 Сорян.
6500.02 6504.02 SPEAKER_01 Не будем тратить полгода, чтобы внести.
6504.02 6554.02 SPEAKER_01 Ну ладно, это все мои такие хотелки, более, не знаю, которые пытаются внедрить. Давайте, у кого что еще есть? Я могу с другой стороны повернуть, что вот эта вот опробленность Microsoft, она, наоборот, мне кажется, делает новые версии достаточно стабильными, и можно без особой опаски переключаться на последнюю версию, что, кстати, вот мы сейчас говорим в базе данных с 40-го на Postgres, что с Postgres прям не всегда срабатывает, что там нужно прям 10 раз перепроверить, а хочешь ли ты последнюю версию вставить, мы уже наткнулись на то, что какие-то фичи, вот она вышла, новая версия Postgres, а там, извините, вот то ли breaking change мы нарвались, то ли на что-то такое.
6554.02 6586.02 SPEAKER_01 Что в дутнете, прямо я не помню уже такого современного open source, чтобы что-то внезапно вдруг переставало работать в новой версии, то есть они сами говорят, что какие-то breaking changes, хотя стараются это не делать, но чтобы что-то вот внезапно через 3 месяца после выхода новой версии выяснялось, что вдруг что-то отвалилось, тут такого вот, кстати, чем тоже мне нравится дутнет, например.
6586.02 6610.02 SPEAKER_01 Ну, скорее бы вопрос про то, чего не хватает, но с этим я абсолютно согласен, да, вот с новыми версиями в дутнете все прекрасно. То есть усилие, которое трачено на обновление дутнета, оно ну вот по крайней мере на моем опыте оно было очень маленькое на фоне многих других вещей там, и да, базы данных - это один из таких ярких примеров. А потом когда обновился, еще думаешь, а точно ли перешел, потому что выглядит все так же?
6610.02 6618.02 SPEAKER_01 [смех] Просто есть самое лучшее обновление, да, когда ты не замечаешь даже, что обновился.
6618.02 6622.02 SPEAKER_01 Тогда нужно запускать бенчмарк дутнет, чтобы убедить себя, что все сделал правильно, иначе...
6622.02 6630.02 SPEAKER_01 Да, да, и накладывай свою функцию, то есть они были написаны, ты замучаешься их потом писать сначала. Зато есть чувство успокоения.
6630.02 6634.02 SPEAKER_01 Кто-нибудь еще про самую плохую или самую пожелание хорошей фичи хочет высказаться?
6634.02 6642.02 SPEAKER_01 Я могу накинуть такую очень холиварную тему.
6642.02 6652.02 SPEAKER_01 Одна из вещей, которые мне больше всего не нравятся в последних версиях дутнета, не странно, это OpenTelemetry, которую теперь повсеместно внедряют.
6652.02 6656.02 SPEAKER_01 В чем суть?
6656.02 6668.02 SPEAKER_01 Изначально в дутнете был замечательный механизм Diagnostic Source, который позволял в рантайме подписываться на какие-то события, о том, что происходит, и как это опробовать.
6668.02 6686.02 SPEAKER_01 И по факту эти события можно было ну, например, мы их использовали для того, чтобы обрабатывать два параллельных куска кода, это трассировки и сбор метрик.
6686.02 6700.02 SPEAKER_01 И последние версии дутнета идут к тому, что везде напихали вот этих вот активитей, которые по сути являются неким аналогом трассировок, то есть я так понимаю, что это именно для этого сделано было.
6700.02 6704.02 SPEAKER_01 И про то, что Diagnostic Source мог...
6704.02 6712.02 SPEAKER_01 Ну, то есть Diagnostic Source - это событие, как бы, и то, что эти события можно использовать для некоторых других вещей, про это как-то немножко забыли.
6712.02 6760.02 SPEAKER_01 И, например, мы через Diagnostic Source делали некоторые прикольные вещи, что вот у нас там были микросервисы, и для того, чтобы было конвенция о том, что когда один сервис вызывает другой, он в него должен прокинуть определенные заголовки, и вот мы их прокидывали, например, через Diagnostic Source, благодаря чему даже если какой-то плохой разработчик где-то вручную создаст HTTP-клиент, то есть он не зарегистрирует его там через DAI, то даже в этом случае все заголовки прогросятся и все метрики соберутся, и мы на этом ловили некоторые ошибки, которые могли возникать именно у разработчиков.
6760.02 6822.02 SPEAKER_01 А сейчас получается, что OpenTelemetry, она свелась к какому-то ну, я не знаю, можно ли назвать это вендерлоком, типа единственная система для сбора метрик и трассировок, что вот ты можешь использовать только ее, при этом более низковыровневые механизмы, про них как-то забыли, и я помню, даже велась какая-то, ну, в каких-то репозиториях у Майкрософта были какие-то обсуждения, что сделать стандарт вот этих вот событий для Diagnostic Source, хотели это сделать в MPG SQL для Postgres, но в итоге просто забили на это, напихали везде Activity, и, ну, к сожалению, это не то направление вообще, которое хотелось бы увидеть в плане обсервабилити, то есть хотелось бы, чтобы какие-то другие, там, ну, опять же, там, какие-то библиотеки, например, могли появляться, чтобы кто-то мог сделать что-то лучше.
6822.02 6824.02 UNKNOWN Вот.
6824.02 6834.02 SPEAKER_01 Интересное замечание, да, потому что обычно всегда все радуются, что телеметрия везде проникает, добавляется, а тут, в принципе, да.
6834.02 6882.02 SPEAKER_01 Ну, тут зависит, видишь, от того, что мне повезло, что мне нужна была какая-то телеметрия, вот как раз появилась она была в ранней бета-стадии, и мне было как раз хорошо, что вот все внедряется, и ты как бы вместе с этим внедряешься. Конечно, если у тебя повешены какие-то механизмы, там же у Майкрософта были свои обозначения, в OpenTelemetry свои, они пытались это как-то мачать, ну, не знаю, что тут можно сказать, но ведь OpenTelemetry тоже, она же через BackEach прокинуть все эти хедеры, то есть механизм там во многом то же самое, то есть, ну, GenderLock'ом бы я это не назвал в любом случае, то есть это стандарт некий, и к тому же он же возник на объединении двух стандартов Observability, то есть в общем-то это скорее такой консенсус, я не могу сказать, что это плохая вещь, но то, как делает Майкрософт реализацию, да, там возможно есть косяки.
6882.02 6884.02 SPEAKER_01 Сюрприз-сюрприз.
6884.02 6894.02 SPEAKER_01 Ну, хорошо, еще у кого-нибудь, может, накопилось за целый год, вы ждали именно этого момента.
6894.02 6896.02 UNKNOWN Нет.
6896.02 6904.02 SPEAKER_00 Ну что, мне интересно, что по последней
6904.02 6956.02 SPEAKER_01 версии, кстати, по фичам, интересные, ну, по мне показалась очень странная штука, это PrimaryConstructors, которую они выпустили для классов, вообще, кажется, очень недоделанный, и какой-то способ выстрелить себе в ногу прямо в неожиданных местах, потому что то, что они сделали, как-то совсем, точнее, больше всего мне понравилось, что теперь IDE предлагает заменить обычный конструктор с рядом для полями на PrimaryConstructors, где, как бы, параметры эти вовсе не рядом, отличается кто-то совсем не такой, который был изначально.
6956.02 6972.02 SPEAKER_01 В общем, как-то вот, часто они очень скрупулезно относятся к тому, что они вводят, к тем фичам. Вспомнить можно, там, BenchBankOperator, от которого они отказались, потому что что-то там не понравилось.
6972.02 6980.02 SPEAKER_01 И вот неожиданно показалось, что они вот это ввели, оно мало того, что отличается от рекордов, что и как-то очень странно себя ведет.
6980.02 6996.02 SPEAKER_01 Ну, то есть, ну, обычно, там, в 99% случаев будет все хорошо, но можно внезапно обнаружить, что оно ведет себя не так, как ты ожидаешь.
6996.02 7000.02 SPEAKER_01 Вот интересно узнать мнение.
7000.02 7004.02 SPEAKER_01 У меня есть ощущение, что это издержки как раз того, о чем мы говорили.
7004.02 7012.02 SPEAKER_01 Фишка - выпуск каждый год, делаются маленькие инкременты, какие-то большие вещи, не получается запилить за год.
7012.02 7018.02 SPEAKER_01 Соответственно, они делают то, что могут, часто то, что могут, получается вот так вот.
7018.02 7026.02 SPEAKER_01 То есть, может быть, это действительно издержки того, как доставка изменений идет.
7026.02 7054.02 SPEAKER_01 У меня есть предположение, что они просто потом допилят этот синтаксис до того состояния, как это сейчас работает в TypeScript, где можно в конструкторе, по-моему, указать на параметрах модификатора, например, private или read-only, и эти поля будут уже объявляться не редактируемыми, а read-only, и, собственно, проблема исчезнет.
7054.02 7064.02 SPEAKER_01 Ну, фича будет как бы пилиться, в итоге все оно те же 3 года, условно, сколько она будет пилиться, но мы получаем вот что-то, что, наверное...
7064.02 7080.02 SPEAKER_01 В каком-то интервью Мэтт Сторгерсон рассказывал, что на самом деле фича получается пилиться дольше, потому что нужны вот эти промежуточные этапы, где нужно сгенерить что-то, что можно зарелизить, при этом не зарелизить чего-то, что помешает развить фичу в следующие пару релизов.
7080.02 7090.02 SPEAKER_01 Потому что мы же, известно, за backward compatibility и не можем ничего откатить обратно. Типа, ой, сорян, мы тут в первой версии налажали, давайте во второй версии переделаем. Так они не умеют.
7090.02 7092.02 SPEAKER_01 Умеют, но не хотят.
7092.02 7104.02 SPEAKER_01 Ну это как мы в работе, мы все с этим сталкиваемся, когда нам нужно выкатить следующий патч, фу, фишка еще не готова, а патч выкатить нужно. И вот мы чуть-чуть откатываем, чуть-чуть накатываем, да, там, оп, выкатили.
7104.02 7106.02 SPEAKER_01 Все флаги.
7106.02 7120.02 SPEAKER_01 Интересно, смогут ли они это исправить до полноценной и стабильной работающей фичи, или вот этот backward compatibility будет из 12-го повлечет за собой какие-то следующие еще компромиссы XT?
7120.02 7122.02 SPEAKER_01 На самом деле, кажется, что они это осознали.
7122.02 7126.02 SPEAKER_01 Мы рассказывали в одном из подкастов про фичу под названием...
7126.02 7158.02 SPEAKER_01 Короче, про experimental, эти фичи в языке, флажок experimental уже у нас появился давно, но сейчас у них теперь же есть штука, что когда мы апгрейдимся на следующий, по-моему, релиз, вот они с девятки, по-моему, это будут делать, компилятор, если вы, используя SDK условно девятый, ну если они это сделают, скомпилите ваш старый проект, у которого target-фреймворк какой-нибудь восьмой или седьмой, он поймет, что у вас в коде используются какие-то конструкции, что если вы переставите target на девятку, у вас что-то сломается.
7158.02 7162.02 SPEAKER_01 Ну типа там, не знаю, мы ввели ключевое слово, а у вас оно используется в качестве имени переменной или имени класса.
7162.02 7186.02 SPEAKER_01 То есть раньше они такого прямо опасались и опасались, а сейчас вроде как, видимо, поняли, что так дальше жить нельзя, и таким способом будут как-то предупреждать, что более свободно, что ли, смогут делать какие-то плюс-минус брейк-эксченжи, но потребуется все-таки перекомпилить проект новым SDK со старым таргетом хотя бы один раз, чтобы city-warning словить и пофиксить.
7186.02 7202.02 SPEAKER_01 А я не ошибаюсь, что кто-то из комьюнити, по-моему, приходил и выкидывал свои аргументы против то ли primary конструкторов, то ли против какой-то другой фичи, и они в итоге не прислушались и все равно выкатили.
7202.02 7218.02 SPEAKER_01 Я бы так сказал, что практически по любой плюс-минус крупной фиче, которая хоть как-то затронет много народу, то есть, условно говоря, по каким-нибудь inline-race, к ним, по-моему, не приходил никто, потому что это сугубо внутренняя фича, и мало кто ей будет пользоваться.
7218.02 7232.02 SPEAKER_01 А вот про такие штуки приходят, мне кажется, по каждой фиче, когда они вводили этот, как он у нас называется, itime-провайдер, да, мега-монструозный интерфейс, там же как бы и скид пришел, и кто там только не пришел, но как бы не помогло.
7232.02 7242.02 SPEAKER_01 Говорить "не помогло" — это значит признать, что они точно сделали неправильно, фиг знает, можно на самом деле долгосрочный и окей, но как бы пока не нравится. Взяли бы ноду.
7242.02 7246.02 SPEAKER_01 Вот, как все говорят, как сделали в JAR.
7246.02 7252.02 SPEAKER_01 Да, но если они возьмут ноду, то на следующий день появится 20 гневных постов, ну вы решили уничтожить нашу экосистему.
7252.02 7254.02 SPEAKER_01 Что вы делаете?
7254.02 7256.02 SPEAKER_01 Подосмотрит скид.
7256.02 7260.02 SPEAKER_01 Хотя скид первый приходил и говорил "возьмите ноду, в конце концов".
7260.02 7266.02 SPEAKER_01 Ну в JAR же такая ровная идея, то есть JAR же была своя библиотека времен и дат.
7266.02 7268.02 SPEAKER_01 Yodatime там была, да.
7268.02 7272.02 SPEAKER_01 Нет, в смысле была в SDK своя, и была Yodatime.
7272.02 7278.02 SPEAKER_01 И в каком-то из SDK, в восьмерке что ли, мне кажется, они просто взяли, выкинули всю старую и взяли Yodatime просто к себе.
7278.02 7280.02 SPEAKER_01 Ну там с косметикой.
7280.02 7284.02 SPEAKER_01 Но тем не менее, как бы поскольку это JAR, то там до сих пор Yodatime существует в namespaces.
7284.02 7286.02 SPEAKER_01 Ну да.
7286.02 7294.02 SPEAKER_01 Но вот с датой времени в JAR мне понравилось работать, там все было довольно очевидно и нормально.
7294.02 7296.02 SPEAKER_01 Да нет, Yodatime классный, безусловно.
7296.02 7304.02 SPEAKER_01 Но надо, видимо, определиться, либо мы отходим от психологии, что мы все отдаем Microsoft, либо мы, да.
7304.02 7306.02 SPEAKER_01 Либо Microsoft все забирает себе, да.
7306.02 7308.02 SPEAKER_01 По-другому никак.
7308.02 7316.02 SPEAKER_01 Ну что ж, друзья, мы тут собирались на полчасика посидеть, а я сейчас уже за третий перевалил.
7316.02 7318.02 SPEAKER_01 Давайте закругляться.
7318.02 7320.02 SPEAKER_01 Игорь, подведешь?
7320.02 7332.02 SPEAKER_01 Да, конечно. Мы сегодня обсудили всякую фигню, поговорили на семерых обо всем и о том, что было, о том, что будет в дотнете, о том, что бы мы хотели, чтобы было в дотнете.
7332.02 7334.02 SPEAKER_01 Скорее даже так, что будет, мы не знаем, посмотрим.
7334.02 7346.02 SPEAKER_01 О том, что будет в дотнете, вы узнаете в следующем году из, я надеюсь, наших плюс-минус регулярных выпусков. Мы постараемся не сильно лажать с регулярностью, но как получится, тут дело такое.
7346.02 7350.02 SPEAKER_01 Да, наверное, примерно так, слушай.
7350.02 7358.02 SPEAKER_01 Каких-то более детальных итогов подводить как-то, мне кажется, смысла сейчас особых нет. Год прошел.
7358.02 7364.02 SPEAKER_01 Записали мы, наверное, не знаю, выпусков двадцатого, наверное, записали?
7364.02 7366.02 SPEAKER_01 Не знаю, потом посчитаем. Потом посчитаем, ладно.
7366.02 7368.02 SPEAKER_01 Вот.
7368.02 7370.02 SPEAKER_01 Может, даже побольше, хотя не факт.
7370.02 7372.02 SPEAKER_01 Короче, нормально.
7372.02 7374.02 SPEAKER_01 Продолжим с дотнетом.
7374.02 7378.02 SPEAKER_01 Майкрософт продолжит с дотнетом, мы продолжим с дотнетом.
7378.02 7380.02 SPEAKER_01 Ну или, по крайней мере, следить за дотнетом.
7380.02 7382.02 SPEAKER_01 И рассказывать про него.
7382.02 7390.02 SPEAKER_01 Ну и будем смотреть, куда все это выльется. Прислушается ли к нам Майкрософт и расшатает ли экосистему.
7390.02 7406.02 SPEAKER_01 Да, для того, чтобы Майкрософт к нам больше прислушивался, вам нужно больше писать на дотнете, больше распространять, больше сделать форков, скомпилировать свой ГЦ и прочими баламутцами страдать. Не зря же нам выдали вот эти новогодние каникулы, потом там мартовские каникулы, майские каникулы, потом еще какие-то. Займитесь делом, наконец.
7406.02 7408.02 SPEAKER_01 Напишите капку на дотнете.
7408.02 7416.02 SPEAKER_01 Ну что ж, друзья, всех с Новым Годом. Я надеюсь, что мы этот выпуск успеем выложить до Нового Года, поэтому всех с Новым Годом.
7416.02 7424.02 SPEAKER_01 Всего самого хорошего, наилучшего, еще больше и круче, интереснее дотнета в будущем году, да и не только.
7424.02 7426.02 SPEAKER_01 Всем спасибо, всем пока.
7426.02 7428.02 SPEAKER_01 Ну и счастливо, до новых встреч.
7428.02 7430.02 SPEAKER_01 Всем спасибо, всем счастливо.
7430.02 7432.02 SPEAKER_01 Всем спасибо, кто присоединился к звонку.
7432.02 7434.02 SPEAKER_01 Удачи вам, всех благ.

