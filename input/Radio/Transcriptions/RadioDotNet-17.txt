0.00 5.00 "Анатолий Кулаков" Здравствуйте, дорогие друзья!
5.00 8.00 "Анатолий Кулаков" В эфире Радио.нет, выпуск номер 17.
8.00 13.00 "Анатолий Кулаков" И сегодня в студии для вас работают Анатолий Кулаков, Игорь Лабутин и Андрей Акиньшин.
13.00 18.00 "Анатолий Кулаков" Вы услышали Андрея, а это значит, что у нас сегодня будет специальный выпуск.
18.00 23.12 "Анатолий Кулаков" Сегодня никаких новостей, никакого безумия от .NET, от Microsoft и от прочих глупостей.
23.12 27.00 "Анатолий Кулаков" Сегодня обсуждаем уютненькую, милую конференцию .NEXT.
27.00 35.64 "Анатолий Кулаков" Мы пройдемся по докладам, по спикерам, посмотрим, о чем нам будут рассказывать на грядущей конференции и обсудим, куда же вам сходить.
35.64 41.12 "Анатолий Кулаков" Конференция .NEXT пройдет со 2 по 5 декабря и пройдет она онлайн.
41.12 46.60 "Анатолий Кулаков" Да, конечно, грустно встречаться онлайн, но у этого формата есть свои преимущества.
46.60 53.48 "Анатолий Кулаков" Например, на эту конференцию мы затянули множество спикеров, которые раньше к нам не могли доехать по тем или иным причинам.
53.48 58.72 "Анатолий Кулаков" Онлайн дал нам возможность встретиться с такими богатейшими звездами, как, например, Мигель Де Иказа.
58.72 67.96 "Игорь Лабутин" Да, Мигель очень известная личность в мире .NET и во многом благодаря тому, что он был вдохновителем и идеологом Mono, альтернативного рантайма .NET.
67.96 73.00 "Игорь Лабутин" И это, конечно же, одна из тем, про которые мы будем с ним говорить, но наверняка не единственная.
73.00 81.68 "Игорь Лабутин" Андрей, ты наверняка имел какой-то опыт работы с Mono и наверняка имеешь что сказать Мигелю или спросить его на тему Mono или чего-то еще.
81.68 89.04 "Андрей Акиньшин" Да, слушай, Мигель такой человек, что с ним интервью должно быть интереснее, чем потенциальный доклад от него.
89.04 93.44 "Андрей Акиньшин" Потому что это человек, у которого была очень увлекательная жизнь.
93.44 95.84 "Андрей Акиньшин" Ну вот представь, начало нулевых.
95.84 102.96 "Андрей Акиньшин" Microsoft анонсирует .NET, что вот у нас теперь есть супер язык C#, супер рантайм .NET.
102.96 109.32 "Андрей Акиньшин" Мы сделали просто какого-то монстра, который умеет делать все и так, чтобы было хорошо.
109.32 115.80 "Андрей Акиньшин" А Мигель такой и говорит, а я сяду и сделаю open-source реализацию, которая будет кроссплатформенной.
115.80 118.68 "Андрей Акиньшин" И самое главное, что он сел и сделал.
118.68 120.56 "Андрей Акиньшин" Как это вообще происходило?
120.56 122.56 "Андрей Акиньшин" То есть что у него было в голове?
122.56 125.44 "Андрей Акиньшин" Какие у него были проблемы на этом пути?
125.44 130.52 "Андрей Акиньшин" Как он добился того, чтобы Mono действительно стала популярным рантаем?
130.52 136.44 "Андрей Акиньшин" Дальше наступают очень интересные времена, когда Mono соединился с Microsoft.
136.44 138.52 "Андрей Акиньшин" Как вообще это происходило?
138.52 141.12 "Андрей Акиньшин" Почему обе стороны пошли на такой шаг?
141.12 148.48 "Андрей Акиньшин" Ну и также, я думаю, многим интересно, чем Мигель занимается сейчас, куда он продвинулся, куда пошел его путь.
148.48 152.24 "Андрей Акиньшин" То есть это человек, у которого очень много очень интересного опыта.
152.24 155.36 "Андрей Акиньшин" Я сам хочу ему задать много разных вопросов.
155.36 159.72 "Андрей Акиньшин" И я думаю, у нас с аудиторией наберется немало хорошего.
159.72 163.24 "Андрей Акиньшин" Можно будет прямо во время доклада задавать вопросы Мигелю.
163.24 167.16 "Андрей Акиньшин" Мы их будем озвучивать и, надеюсь, он нам расскажет очень много увлекательных историй.
167.16 168.88 "Игорь Лабутин" Да, это действительно так.
168.88 174.20 "Игорь Лабутин" И можно, не дожидаясь доклада, уже сейчас начинать нас закидывать вопросами, которые нужно задать Мигелю.
174.20 187.16 "Игорь Лабутин" Пишите их куда-нибудь к этому выпуску в почту или еще куда-то, и мы их обязательно все соберем вместе и постараемся озвучить наиболее интересные Мигелю, чтобы узнать максимально подробно все, что вас интересует.
187.16 196.56 "Игорь Лабутин" Кроме Мигеля, у нас есть еще один важный и интересный гость из мира .NET, это Мэдс Торгерсен, ведущий дизайнер языка C#.
196.56 211.36 "Игорь Лабутин" Сейчас релизится C# 9.0 и Мэдс расскажет нам, что там появилось нового и интересного с его личной точки зрения, а также очень надеемся, что поделится какими-то планами на тему, что же будет дальше, куда C# будет развиваться дальше.
211.36 214.64 "Игорь Лабутин" И даже если не поделится, мы его обязательно об этом спросим.
214.64 221.40 "Игорь Лабутин" И, несомненно, связанный с этим докладом будет следующий доклад, а именно Nullability.
221.40 231.68 "Игорь Лабутин" Тема Nullability важная, и концепция Nullability была введена в 8 C# и успешно, или не очень успешно в разных проектах продвигается и по кодовой базе.
231.68 257.68 "Игорь Лабутин" Но Джаред Парсонс, один из разработчиков компилятора Roslyn, расскажет про то, как вообще с этим Nullability живет внутри Microsoft, как происходит аннотация всеми атрибутами самой кодовой базы SDK и рантайма, и вообще, что ждет эту фичу, как вообще все это будет развиваться и чего нам ждать от Nullability, как ее правильно применять в своих проектах.
257.68 270.24 "Игорь Лабутин" И, как вы видите, пока мы в основном концентрируемся на DotNet 5 и на фичах C#, но наверняка же про следующего докладчика то ли ты можешь что-нибудь сказать, потому что это тоже DotNet 5.
270.24 273.48 "Анатолий Кулаков" О, про следующего докладчика я могу много чего наговорить.
273.48 281.80 "Анатолий Кулаков" Наши постоянные слушатели, особенно те, кто слушали прошлый выпуск про DotNext, который был в Питере, наверное, слышали, что я собирался сделать доклад.
281.80 284.28 "Анатолий Кулаков" Я собирался сделать доклад на эту конференцию.
284.28 285.96 "Анатолий Кулаков" И что вы думаете?
285.96 287.64 "Анатолий Кулаков" Случилось то же, что случалось все время.
287.64 290.28 "Анатолий Кулаков" Как я уже говорил, мои доклады все время крадут.
290.28 294.20 "Анатолий Кулаков" Сначала это был Дилан Бити, потом Джон Скит, потом Егор Гришечко.
294.20 307.76 "Анатолий Кулаков" И вот же, наконец-то, вроде всех их исчерпали, я подал практически заявку, место было зарезервировано, я придумал гениальнейшую тему, я придумал трендовые примеры, и это было все просто идеально.
307.76 311.16 "Анатолий Кулаков" Это должен был доклад быть на первом месте, обогнавший всех наших звезд.
311.16 316.04 "Анатолий Кулаков" Но вдруг начали приходить какие-то странные такие, знаете, нотки.
316.04 321.16 "Анатолий Кулаков" Сначала пришел Мэдс Торгерсен, вот как раз-таки тот, который язык C# дизайнил, и подался с такой же точной темой.
321.16 327.00 "Анатолий Кулаков" Мы его быстренько отодвинули, сказали, нет-нет-нет, тут Толян будет рассказывать, ты иди что-нибудь другое про свой C# расскажи.
327.00 328.36 "Анатолий Кулаков" Как-то его отбили.
328.36 330.00 "Анатолий Кулаков" Потом пришел Рафаэль Риальди.
330.00 333.92 "Анатолий Кулаков" Тут надо понимать, что Риальди - это один из самых уважаемых спикеров нашей конференции.
333.92 340.44 "Анатолий Кулаков" У него наибольшее число докладов на конференции, у него отличнейшие рейтинги, мы его очень любим.
340.44 345.44 "Анатолий Кулаков" В общем, с Риальди тоже удалось как-то все замять, вроде тему мы поменяли, никто не обиделся.
345.44 349.08 "Анатолий Кулаков" Но следующий был, это просто тяжелая артиллерия пошла.
349.08 351.68 "Анатолий Кулаков" Пришел Андрей Дятлов.
351.68 362.40 "Анатолий Кулаков" Если кто не знает, то Андрей Дятлов на прошлой конференции сделал бомбический доклад про NullAbility с большими рейтингами, и вообще он очень хорошо копает тему.
362.40 370.84 "Анатолий Кулаков" И к тому же работает JetBrains, поэтому у него практически упаду было просто вагон и маленькая тележка, и здесь уже никакие мои связи, ничего не помогло.
370.84 376.24 "Анатолий Кулаков" Пришлось отдать ему свою тему, и Андрей ее покрыл довольно-таки шикарно.
376.24 379.00 "Анатолий Кулаков" Расскажет он в этот раз про SourceGenerators.
379.00 390.00 "Анатолий Кулаков" Да-да, те самые SourceGenerators, которые будут доступны в .NET 5, которые мы обсуждали в предыдущих выпусках, и с помощью которых вы сможете творить большую-большую магию.
390.00 399.68 "Анатолий Кулаков" Если кто не в курсе, то напомню, что SourceGenerators являются возможностью языка или даже фреймворка теперь генерить код во время компиляции.
399.68 412.04 "Анатолий Кулаков" Вы сможете избавиться от кучи boilerplate, вы сможете выкинуть такие инструменты, как PostSharp или FOD, которые пачкали ваш .ILI, что-то там делали, какую-то страшную магию.
412.04 415.64 "Анатолий Кулаков" Но на самом деле не все так радужно, не все так однозначно.
415.64 426.08 "Анатолий Кулаков" Естественно, есть минусы, естественно, есть какие-то подводные камни, и Андрей, как он умеет, все это раскопал, и все это в красивых примерах для вас предоставит.
426.08 433.92 "Анатолий Кулаков" Поэтому один из фаворитов моей программы в этом году — это SourceGenerators в действии от Андрея Дятлова.
433.92 437.12 "Анатолий Кулаков" Присоединяйтесь, я буду этот доклад обязательно
437.12 451.76 "Андрей Акиньшин" смотреть. Я погляжу, у нас довольно много всякого разного про новшества в C#, у нас и про C# 9 будет доклад, и про Knowability, и про SourceGenerators, но ведь в .NET еще много всякого разного увлекательного происходит.
451.76 457.36 "Андрей Акиньшин" У нас есть еще какие-нибудь обзорные доклады про то, что у нас появится новенького?
457.36 467.32 "Игорь Лабутин" Да, Анатолий даже упомянул имя Рафаэля Риальди, который действительно нападался к нам с отличным докладом про обзор новых фич .NET 5.
467.32 488.36 "Игорь Лабутин" Но это не просто обзор, это не просто по верхам пробежаться по всем темам, которых достаточно много, это достаточно вдумчивое исследование фич, которые относятся в основном к перформансу и к взаимодействию с нативным, скажем так, кодом, то есть interoperability features.
488.36 500.88 "Игорь Лабутин" Поэтому Рафаэль расскажет нам про новинки System.Txt.JSON API и какие перформансы изменения там были сделаны, расскажет, что можно попроще делать в новом .NET 5 или делать то, что раньше было вообще невозможно.
500.88 510.12 "Игорь Лабутин" Ну и, как я уже сказал, опишет, как можно поудобнее вызывать Windows API и, возможно, не только Windows API из своих продуктов.
510.12 515.56 "Игорь Лабутин" Как известно, Рафаэль большой любитель C++, в том числе, и поэтому для него эта тема очень важна.
515.56 521.92 "Анатолий Кулаков" Закрывая блок трендов, нельзя не упомянуть самый главный тренд этого релиза, это, конечно же, Blazor.
521.92 539.72 "Анатолий Кулаков" Blazor недавно зарелизился, как серверной, так и клиентской версией, но мы не будем слушать Hello World, их было предостаточно на предыдущих конференциях, а к нам приедет Марко Десантис и расскажет про тонкости аутентификации и авторизации в Blazor.
539.72 568.08 "Анатолий Кулаков" Потому что, действительно, для Hello World Blazor уже перешагнул эту грань, все знают, на что он способен, но если мы начинаем внедрять его в корпоративные приложения, если мы начинаем говорить о каких-то больших и сложных интерпрайс приложениях, то там одна из самых первых задач, которая перед вами встанет, будет как раз таки то, как синтегрироваться с уже существующими системами авторизации, аутентификации, или, может быть, написать свою, или, может быть, заиспользовать красивый идентити-сервер.
568.08 571.88 "Анатолий Кулаков" Все это как раз таки и покроет в своем докладе Марко Десантис.
571.88 588.96 "Анатолий Кулаков" Он рассказывает про протоколы OpenID Connect, о AUF и о том, каким же образом сделать интеграцию в Blazor и продолжить работать уже в безопасной, проверенной среде, как это натянуть на ваши доменные модели, на валидацию, как это хорошо, красиво ложится на разметки.
588.96 593.68 "Анатолий Кулаков" То есть, хороший доклад для тех, кто хочет оставлять свои приложения секьюрными.
593.68 598.28 "Игорь Лабутин" Смотри, Blazor - это же про клиентский девелопмент, то, что сейчас модно и трендово.
598.28 607.28 "Игорь Лабутин" То есть, мы пишем дотнет клиентов, по сути, который исполняется в браузере, и это значит, что этим клиентам нужно дергать API, которые расположены на сервере.
607.28 611.04 "Игорь Лабутин" Мы будем писать JSON-чики руками или есть какие-то более правильные способы?
611.04 613.24 "Игорь Лабутин" Мне кажется, следующий доклад как раз про это.
613.24 618.04 "Анатолий Кулаков" Да, следующим докладом у нас будет Мартин Беллауи из JetBrains.
618.04 622.40 "Анатолий Кулаков" Он расскажет нам о том, каким образом построить SDK.
622.40 625.92 "Анатолий Кулаков" Ну, не просто SDK, а очень-очень-очень большой SDK.
625.92 627.52 "Анатолий Кулаков" У него есть замечательный пример.
627.52 631.72 "Анатолий Кулаков" Это продукт от компании JetBrains, который называется Space.
631.72 636.20 "Анатолий Кулаков" Space - это такая практически огромнейшая инфраструктура, чуть ли даже не операционная система.
636.20 638.64 "Анатолий Кулаков" Там есть абсолютно все, что вам нужно для работы.
638.64 642.32 "Анатолий Кулаков" И, соответственно, много-много разных шерстных API.
642.32 655.80 "Анатолий Кулаков" Для всех этих API разработчики Space хотели дать возможность разработчикам .NET писать интеграции, то есть вызывать их внешний интерфейс и вызывать с помощью стандартного .NET кода.
655.80 658.00 "Анатолий Кулаков" И стал вопрос, а что же, собственно, делать?
658.00 660.24 "Анатолий Кулаков" Потому что там реально тысячи API.
660.24 664.48 "Анатолий Кулаков" И писать это все ручками, потом это все ручками поддерживать - это просто нереально.
664.48 672.04 "Анатолий Кулаков" И как раз таки Мартин рассмотрит эту тему, каким образом сделать хороший, богатый SDK, каким образом поддерживать этих клиентов.
672.04 675.44 "Анатолий Кулаков" Естественно, будут использоваться генерации.
675.44 682.04 "Анатолий Кулаков" Но будут рассмотрены, какие минусы есть у этих генераций, как их улучшить, как их оттестировать.
682.04 692.20 "Анатолий Кулаков" И, соответственно, этот доклад подойдет абсолютно всем, кто хочет составлять очень красивый, понятный и поддерживаемый API для своих endpoint.
692.20 694.44 "Игорь Лабутин" Звучит вообще классно.
694.44 699.00 "Игорь Лабутин" И ты упомянул, что Space - это огромный продукт, почти как операционная система.
699.00 707.96 "Игорь Лабутин" Андрей, если у вас такой огромный продукт, то наверняка есть какие-то проблемы и сложности в сборках таких продуктов.
707.96 708.96 "Андрей Акиньшин" Это правда.
708.96 713.84 "Андрей Акиньшин" И Space - это не единственный большой продукт от нас.
713.84 724.88 "Андрей Акиньшин" У нас еще есть Rider, который, наверное, одна из самых сложных с точки зрения сборки IDE-шек от JetBrains, потому что он базируется сразу на идее на Rider.
724.88 730.96 "Андрей Акиньшин" И в этот раз Миша Филиппов будет рассказывать как раз, как у нас устроена инфраструктура сборки.
730.96 734.16 "Андрей Акиньшин" Казалось бы, зачем это слушать людям?
734.16 736.20 "Андрей Акиньшин" А проблема следующая.
736.20 749.56 "Андрей Акиньшин" Когда смотришь какие-то Hello World от Microsoft, как там сделать приложение на Blazor за 5 минут, обычно в демке человек нажимает на кнопочку Build, и у него - оп - и все побилдилось.
749.56 751.72 "Андрей Акиньшин" Нажал на кнопочку Run - оп - и у него все запустилось.
751.72 759.36 "Андрей Акиньшин" И если у вас микросервис на полтора проекта, то все действительно хорошо, быстро, просто работает.
759.36 771.28 "Андрей Акиньшин" Но когда мы начинаем говорить про Enterprise Solutions, в которых сотни проектов, в которых какие-то миллионы тестов, то жизнь уже не такая простая и быстрая.
771.28 777.28 "Андрей Акиньшин" Представьте, что у вас сборка занимает не 1 секунду и не 5 секунд, а часы.
777.28 778.68 "Андрей Акиньшин" Много-много часов.
778.68 782.96 "Андрей Акиньшин" А чтобы прогнать тесты, вообще нужно много-много дней.
782.96 787.00 "Андрей Акиньшин" И вообще вся эта инфраструктура, она очень-очень сложная.
787.00 792.64 "Андрей Акиньшин" Много всяких не очень очевидных зависимостей, связей и тому подобного.
792.64 802.00 "Андрей Акиньшин" И вот Миша как раз будет рассказывать про то, как все эти проблемы порешать на примере райдера, но многие подходы довольно общие.
802.00 811.64 "Андрей Акиньшин" Я надеюсь, что многие наши слушатели Миши найдут способы переложить эти подходы на свои проекты и что-то где-то прооптимизировать.
811.64 821.08 "Андрей Акиньшин" Так что раньше сборка занимала несколько дней, а теперь оп, и с помощью какой-нибудь распределенной магии мы укладываемся в пару часов.
821.08 822.08 "Игорь Лабутин" Звучит круто.
822.08 849.00 "Игорь Лабутин" А если у вас до сих пор еще не очень большой продукт, и если вам нужно как-то возможно кастомизировать ваши билды, а в Visual Studio нету нужных окошечек и нужных параметров, то самое время углубиться в дебри MS Build A, в дебри формата C# и посмотреть, что там есть новенького, что там есть интересного и чем может быть вам полезно ручное редактирование C# проч. файлов или каких-либо других файлов, основанных на MS Build.
849.00 851.16 "Игорь Лабутин" И про это у нас будет следующий доклад.
851.16 887.40 "Игорь Лабутин" Мартин Ульрих расскажет нам про то, вообще что такое MS Build, как им пользоваться, на чем он основан и какие нововведения есть в дотнете, какие-то улучшения, упрощения формата, которые завезли к нам, а также какие вообще тулы есть для работы с MS Build, как удобнее читать логи от сборок, что вы можете сделать в C# проч., что вам не позволяет Visual Studio, в общем, какие-то мелкие полезные приемчики, которые помогут вам в вашей ежедневной работе сделать более удобную сборку ваших проектов, даже если у вас не огромный интерпрайс.
887.40 893.96 "Игорь Лабутин" А если у вас огромный большой проект, то, возможно, все эти интересные приемы будут вам вдвойне полезны.
893.96 899.28 "Анатолий Кулаков" Такое ощущение, как будто собрались какие-то девопсеры, то билды у них, то интерпрайсы, то еще тесты.
899.28 901.16 "Анатолий Кулаков" У нас секция называется Best Practice.
901.16 903.88 "Анатолий Кулаков" Что у нас все-таки из практики?
903.88 905.48 "Анатолий Кулаков" Где стандартная интерпрайсная боль?
905.48 911.64 "Анатолий Кулаков" Будут у нас доклады про то, как избавить народ от того, что он страдает ежедневно о чем-то?
911.64 912.64 "Игорь Лабутин" Будут.
912.64 919.56 "Игорь Лабутин" Наши слушатели очень много просили практических кейсов про то, как мы переводим приложение на .NET Core, и вот у нас есть такой пример.
919.56 929.68 "Игорь Лабутин" Компания Macroscope, производитель софта для видеонаблюдения, имела и до сих пор имеет приложение, которое написано на классическом .NET Framework.
929.68 939.72 "Игорь Лабутин" И Рустам Салимзибаров и Алексей Поздеев расскажут нам, как они портировали .NET Framework приложение на Linux, то есть пытались сделать его кроссплатформенным.
939.72 946.52 "Игорь Лабутин" Это заняло у них несколько попыток, был и опыт раннего моно, и опыт позднего моно, и .NET Core несколько раз.
946.52 962.52 "Игорь Лабутин" Так что, если вы хотите узнать, с какими трудностями ваш проект может столкнуться, если вы вдруг соберетесь переносить его на .NET Core, приходите узнать, как с трудностями можно бороться, каких вещей лучше избегать, а какие полезные практики нужно применять.
962.52 965.52 "Игорь Лабутин" И это будет действительно хороший доклад для секции Best Practice.
965.52 966.52 "Игорь Лабутин" Все, как ты любишь, Толя.
966.52 967.52 "Анатолий Кулаков" Отлично.
967.52 970.16 "Анатолий Кулаков" Следующая секция - Internals and Performance.
970.16 974.92 "Анатолий Кулаков" Самая любимая, наверное, секция, самая старая, самая авторитетная секция на нашей конференции.
974.92 981.12 "Анатолий Кулаков" Я не понимаю, почему я ее объявляю, но хочу вам рассказать про замечательный доклад.
981.12 984.12 "Анатолий Кулаков" Первым я хочу рассказать про Станислава Сидристого.
984.12 986.44 "Анатолий Кулаков" Стас, с тебя, Макгарыч.
986.44 1000.76 "Анатолий Кулаков" Стас знаменит тем, что он отлично копает вглубь фреймворков, раскапывает кишочки дичь и прочие такие нетривиальные вещи, о которых вы никогда нигде не прочитаете, кроме как или в статьях, или на докладах у Стаса.
1000.76 1006.36 "Анатолий Кулаков" Но его часто обвиняли в том, что доклады у него часто не практичные, а какие-то более теоретизированные.
1006.36 1009.60 "Анатолий Кулаков" И вот этот доклад, он мегапрактичный.
1009.60 1017.64 "Анатолий Кулаков" Краткая история в том, что Стасу по работе понадобилась некая библиотечка, которую написал какой-то сторонний контрибютал.
1017.64 1024.48 "Анатолий Кулаков" Библиотечку эту заюзали, успешно в проект внедрили, но у нее было просто в избытке memory traffic.
1024.48 1029.00 "Анатолий Кулаков" Про тех объемах, которые нужны были Стасу, работать с этой библиотекой абсолютно было невозможно.
1029.00 1034.48 "Анатолий Кулаков" Переписывать все с нуля, как мы, естественно, все любим, не представлялось никакой возможности.
1034.48 1038.20 "Анатолий Кулаков" Библиотека была большая, сложная, но вот прооптимизировать можно было.
1038.20 1040.52 "Анатолий Кулаков" И Стасу пришла в голову замечательная идея.
1040.52 1045.04 "Анатолий Кулаков" А давайте из этой библиотечки мы сделаем пример zero-location кода.
1045.04 1047.16 "Анатолий Кулаков" Zero-location код очень часто показывают в вакууме.
1047.16 1051.88 "Анатолий Кулаков" То есть, каким образом в простом Hello World на искусственных примерах вам избежать аллокаций.
1051.88 1057.64 "Анатолий Кулаков" Но если вы копнете глубже и попытаетесь на практике это реализовать, то хороших примеров не так уж и много.
1057.64 1064.60 "Анатолий Кулаков" Стас не просто это реализовал на каком-то маленьком примере, а заоптимизировал целую большую библиотеку под высоконагруженный код.
1064.60 1075.28 "Анатолий Кулаков" О том, какие техники он применял, что в результате получилось, насколько удалось ему то, что он захотел, а удалось ему на славу, вы как раз узнаете из этого доклада.
1075.28 1079.96 "Игорь Лабутин" И если мы говорим про zero-location, мы не можем не упомянуть, конечно же, Garbage Collector.
1079.96 1083.36 "Игорь Лабутин" И .NET на Garbage Collector имеет давнюю и долгую историю.
1083.36 1103.16 "Игорь Лабутин" Он долгое время развивался как closed source, как и весь .NET, потом он был, как и опять же в .NET Core, открыт в open source, и в .NET 5 появилось некоторое количество нововведений, помещающих диагностику того, что происходит внутри Garbage Collector, а также появилось некоторое количество новых оптимизаций и изменений поведения.
1103.16 1110.84 "Игорь Лабутин" И на .NEXT будет доклад от Маони Стефенс, это главный разработчик Garbage Collector .NET.
1110.84 1114.32 "Игорь Лабутин" Долгое время считалось, что она вообще единственный человек, который хоть что-то в нем понимает.
1114.32 1119.96 "Игорь Лабутин" Сейчас это, конечно, уже не так, но тем не менее, Маони одна из опытных разработчиков.
1119.96 1125.76 "Анатолий Кулаков" Долгое время считалось, что Маони вообще не существует, а под ее фамилией работает целая большая группа ученых.
1125.76 1133.76 "Игорь Лабутин" Ну нет, Маони действительно существует, мы с ней созванивались, вы ее тоже увидите, хоть и не вживую, к сожалению, но тем не менее, ей можно будет задать вопросы.
1133.76 1141.72 "Игорь Лабутин" Она расскажет кратенькое введение про то, что новенького, где-нибудь на полчасика, а все остальное время будет посвящено ответам на вопросы.
1141.72 1154.92 "Игорь Лабутин" Поэтому, так же, как и с Мигелем, задавайте, готовьте ваши вопросы, пишите нам, чтобы мы их успели задать во время эфира, или приходите в чаты, приходите на конференцию, задавайте их лично.
1154.92 1164.08 "Игорь Лабутин" Маони очень ждет всех этих вопросов и готова на них отвечать, как про прошлое, Garbage Collector, и вообще любой работы с памятью в .NET, так и про будущее и планы.
1164.08 1172.16 "Анатолий Кулаков" Не менее богат на всякие знания об оптимизациях Егор наш Богатов, и он снова с нами.
1172.16 1178.80 "Андрей Акиньшин" Да, у Егора будет очень увлекательный доклад про внутреннее устройство JIT-компилятора в .NET.
1178.80 1187.80 "Андрей Акиньшин" Но на самом деле он будет рассказывать основную часть доклада не именно про специфику .NET, а про устройство JIT-компилятора в целом.
1187.80 1195.40 "Андрей Акиньшин" И ведь действительно, для многих .NET разработчиков JIT-компилятор это просто черный ящик, который делает какую-то магию.
1195.40 1207.04 "Андрей Акиньшин" Вот мы написали C# код, скомпилировали, а потом пришел JIT, сделал магию и появился нативный образ этого кода.
1207.04 1210.56 "Андрей Акиньшин" Что же происходит внутри и зачем это вообще нужно?
1210.56 1217.44 "Андрей Акиньшин" Я вижу очень много хлеваров и споров на тему того, может ли JIT сделать вот это, или не может.
1217.44 1226.96 "Андрей Акиньшин" Или можем ли мы ожидать какого-то подвоха от JIT в этом месте относительно перформанса, или относительно логики исполнения, или не можем.
1226.96 1245.56 "Андрей Акиньшин" И вот всех таких разговоров их можно избежать, если хотя бы в общих чертах понимать концепцию устройства JIT-компилятора, что там есть, вообще что разрешено делать JIT, что не разрешено, в каких местах можем ожидать от него какую-то умную перформансную магию, в каких не можем.
1245.56 1266.28 "Андрей Акиньшин" И конечно же, раз мы .NET разработчики, будет интересно послушать про это именно на примере .NET и узнать что-нибудь новенькое о волшебных фичах JIT, особенно которые появились в недавнее время, как вообще JIT развивается и почему перформанс в пятом .NET будет действительно намного круче, чем во всех предыдущих.
1266.28 1267.28 "Игорь Лабутин" Звучит здорово.
1267.28 1281.84 "Игорь Лабутин" А если после доклада Егора вам захочется написать свой собственный JIT-компилятор, то вам совершенно необходимо послушать следующий доклад Конрада Кокоса про Möbius, его собственный .NET Runtime, написанный на .NET.
1281.84 1291.24 "Игорь Лабутин" Как известно, обычный .NET Runtime написан на C++, там наверняка есть немножко ассемблера и немножко C#, но основной код это все-таки C++.
1291.24 1297.12 "Игорь Лабутин" И Конрад задался вопросом, а что будет, если написать .NET Runtime на самом .NET?
1297.12 1301.72 "Игорь Лабутин" Единственный нормальный способ ответить на этот вопрос - сесть и написать, чем он и занялся.
1301.72 1312.92 "Игорь Лабутин" И про этот опыт он как раз таки нам и расскажет, что это такое, зачем это может быть надо, чем это может быть полезно и какие уроки и знания он из этого проекта получил.
1312.92 1319.32 "Анатолий Кулаков" Для более оптимизации перформанса нужно начинать с того, что мы сначала померим и убедимся, что нам это нужно оптимизировать.
1319.32 1323.84 "Анатолий Кулаков" Странно, почему доклад как раз таки про померение у нас оказался в самом конце этой секции.
1323.84 1327.64 "Игорь Лабутин" Ну, как-то так получилось, но мы его, конечно же, не забудем.
1327.64 1334.24 "Игорь Лабутин" Это наш тоже старый добрый докладчик Кристоф Нассаре, который будет нам в очередной раз рассказывать, как правильно что-то измерять.
1334.24 1342.52 "Игорь Лабутин" И в данном случае это то, как правильно измерять нагрузку на ваш процессор с помощью самого же приложения, то есть можно сделать там автомониторинг себя.
1342.52 1359.96 "Игорь Лабутин" У нас были похожие доклады, они были в основном основаны на ETW, то есть все техники, которые они использовали, но сейчас в мире кроссплатформенности, Линукса, МакОС и всех остальных мест, где умеет запускаться .NET Core, конечно же ETW, ну, все еще полезен, но уже, наверное, не так актуален.
1359.96 1376.20 "Игорь Лабутин" И Кристоф как раз таки расскажет, что нужно делать и как нужно правильно писать код, чтобы пользоваться относительно новой штукой под названием CLR Events для того, чтобы понимать, насколько производительны ваши приложения и как это можно вообще применять в реальной жизни.
1376.20 1391.68 "Игорь Лабутин" И несмотря на то, что вы не видите в программе обычного спутника Кристофа по докладам и содокладчика Кевина, Кевин без него, конечно же, не обойдется и он будет тоже присутствовать на этом докладе в роли эксперта, так что заходите и получите много знаний от их двоих.
1391.68 1392.92 "Анатолий Кулаков" А, замечательно.
1392.92 1395.96 "Анатолий Кулаков" Наконец-то моя любимая рубрика - архитектура.
1395.96 1400.24 "Анатолий Кулаков" И здесь, дорогие друзья, звезд не меньше, чем в предыдущих.
1400.24 1403.88 "Анатолий Кулаков" Начать, прежде всего, хотелось, конечно, с Аарона Станнарда.
1403.88 1413.76 "Анатолий Кулаков" Аарон Станнард - это основатель и главный идеолог компании Petabridge, которая как раз таки полностью ответственна за то, что мы имеем такой продукт, как ACO.NET.
1413.76 1422.76 "Анатолий Кулаков" И это не только плодотворный контрибьютор, не только бизнесмен, который смог поднять такую интересную фирму чисто на опенсорсе.
1422.76 1424.60 "Анатолий Кулаков" Это, прежде всего, шикарный спикер.
1424.60 1428.40 "Анатолий Кулаков" Его необходимо служить любым темлидам, любым архитекторам.
1428.40 1435.32 "Анатолий Кулаков" Он не будет пропагандировать рекламу своего продукта в чистом виде, как мы могли бы ожидать.
1435.32 1452.56 "Анатолий Кулаков" Он будет рассказывать как раз таки об акторной модели, о том, каким образом современные приложения туда вписываются, сопоставима ли акторная модель с десктопными приложениями, с мобильными приложениями, с вебкой, какие задачи она может решать, когда ее нужно использовать, когда не нужно использовать.
1452.56 1457.28 "Анатолий Кулаков" В общем, я бы назвал Аарона одним из таких самых интересных провидцев.
1457.28 1461.88 "Анатолий Кулаков" Когда он рассказывает про какую-то тему, это не просто банальное освещение этой темы.
1461.88 1470.24 "Анатолий Кулаков" Это какие-то всегда интересные вбросы, это какие-то интересные факты о прошлом, это какой-то взгляд в будущем.
1470.24 1478.20 "Анатолий Кулаков" Поэтому, если бы у нас были кейн-ноуты, мне кажется, это одна из тех тем, которая бы могла пойти на архитектурный кейн-ноут.
1478.20 1479.48 "Игорь Лабутин" Да, я с тобой соглашусь.
1479.48 1487.24 "Игорь Лабутин" Но, когда мы говорим про модель акторов, АККУ, мы вспоминаем, что не АККУ единый, у нас же есть еще Microsoft Orleans.
1487.24 1488.24 "Игорь Лабутин" Что с ним?
1488.24 1490.40 "Игорь Лабутин" Будет ли про него что-нибудь?
1490.40 1492.52 "Анатолий Кулаков" Чисто про Orleans не будет.
1492.52 1497.08 "Анатолий Кулаков" Наши постоянные зрители знают, что на .NEXT уже несколько раз выступал Сергей Быков.
1497.08 1501.40 "Анатолий Кулаков" Это как раз-таки автор и главный архитектор Microsoft Orleans.
1501.40 1515.12 "Анатолий Кулаков" И так как мы с Сергеем были уже давно знакомы, и в этот раз впервые заполучили Аарона, мы предложили им вместе пофилософствовать и порассуждать о том, какой же все-таки подход уместен в том или ином случае и куда движется акторная модель.
1515.12 1520.64 "Анатолий Кулаков" Одинаково ли ее представляют эти два фреймворка или каждый из них проповедует свою какую-то собственную мысль.
1520.64 1531.44 "Анатолий Кулаков" Поэтому мы решили собрать круглый стол и пригласили на них Аарона Станнарда, это главный идеолог АККИ.нет, и Сергея Быкова, это главный идеолог Microsoft Orleans.
1531.44 1543.60 "Анатолий Кулаков" И на этой панельной дискуссии мы предлагаем вам вместе с нашими экспертами позадавать вопросы и попробовать для себя выяснить, какой фреймворк в каких ситуациях лучше подает для ваших приложений.
1543.60 1552.28 "Анатолий Кулаков" Каким образом строятся акторы, как они взаимодействуют, кого они еще смогут победить на этом рынке и куда вообще движется вся эта тема в дот-нете.
1552.28 1576.36 "Анатолий Кулаков" Интересный факт состоит в том, что вопросов «А что лучше АККИ или Орленс?» на Stack Overflow просто целая куча и люди с разной степенью успешности пытаются на них ответить и никогда еще Аарон Станнард и Сергей Быков никогда не выступали в публичном пространстве и никогда вместе не обсуждали о том, какие проблемы решаются их фреймворками.
1576.36 1583.64 "Анатолий Кулаков" То есть это практически эксклюзив, который будет уникально представлен на dotNext и в котором вы сможете лично поучаствовать.
1583.64 1596.00 "Игорь Лабутин" Ну хорошо, акторные модели, вот это все, это все здорово, но я помню по прошлым dotNext у нас всегда была популярна тема DDD, как более приземленная, практичная и применимая
1596.00 1604.68 None практически везде. Да, DDD и тут будет хватать и одним из моих любимых авторов по DDD является Владимир Хориков.
1604.68 1607.96 "Анатолий Кулаков" Владимир снова к нам присоединится и расскажет про самое важное.
1607.96 1610.64 "Анатолий Кулаков" Самое важное, что есть в Domain Driven Design.
1610.64 1625.84 "Анатолий Кулаков" Он расскажет нам про bound-контексты, он расскажет о том, каким образом анимичную модель превратить в богатую модель, каким образом наделять ответственностью ваши домены, где нужно проставлять какие-то зависимости, где нет.
1625.84 1637.68 "Анатолий Кулаков" В общем, коснется очень много таких глубоких частых вопросов, которые вы сможете встретить буквально на первых страницах, как только начнете гуглить что-нибудь о том, как сделать свое приложение более-менее DDD-ориентированным.
1637.68 1652.52 "Анатолий Кулаков" Вот, вместе с докладами Владимира, вместе с его статьями это становится очень легкой задачей, поэтому всячески рекомендую все доклады Владимира Хорикова, которые были и которые еще, в принципе, будут на .NEXT.
1652.52 1655.80 "Анатолий Кулаков" Отлично объясняет, очень глубокие и интересные темы.
1655.80 1658.56 "Анатолий Кулаков" Хорошее введение для тех, кто хочет погрузиться в
1658.56 1664.56 "Игорь Лабутин" DDD. Кроме DDD, вы наверняка сталкивались с таким понятием, как микросервисы.
1664.56 1671.88 "Игорь Лабутин" И либо их писали, либо их собираетесь писать, либо вы их уже много-много написали, больше не хотите и пошли обратно в монолиты.
1671.88 1694.24 "Игорь Лабутин" В таком случае, возможно, вам не нужен следующий доклад, но, скорее всего, конечно же, вы знаете, что такое микросервисы, вам это интересно, и тогда следующий доклад от Риваля Абдрахманова из компании Positive Technologies будет очень хорошим введением или напоминанием про то, какие вообще паттерны и терминологии используются в мире распределенных систем.
1694.24 1699.88 "Игорь Лабутин" Потому что даже если вы считаете, что вы не пишете распределенные системы, если у вас есть микросервисы, значит вы их пишете.
1699.88 1717.40 "Игорь Лабутин" И тогда, конечно же, вам нужно знать какие-то базовые принципы сервис-ориентед архитектуры, вам нужно знать, кто такие бэкэнды, кто такие бэкэнды фо-фронтэнды, кто такие IP-гейтэвэи, как обеспечивать устойчивость к ошибкам, как оркестрировать все то, что вы написали.
1717.40 1720.00 "Игорь Лабутин" Возможно, вы слышали такие слова, как CQRS.
1720.00 1735.84 "Игорь Лабутин" В общем, терминологий много, в ней надо как-то ориентироваться, и Риваль подготовил совершенно прекрасный обзорный доклад, который, скорее всего, поможет вам очень здорово это все запомнить, потому что используется совершенно нестандартная аналогия.
1735.84 1740.24 "Игорь Лабутин" На чем у нас обычно рассказывают все такие базовые примеры?
1740.24 1742.12 "Игорь Лабутин" Анатолий, какие у нас стандартные есть?
1742.12 1746.80 "Анатолий Кулаков" Ну, например, на стандартном сэмпле от Microsoft, такой Blazer Pizza или...
1746.80 1752.92 "Игорь Лабутин" Ну, да, то есть интернет-магазины, какие-то доставки продуктов и всякие такие штуки.
1752.92 1756.88 "Игорь Лабутин" Риваль же делает аналогии на жизнь народов Севера.
1756.88 1765.36 "Игорь Лабутин" То есть там есть какой-то набор традиций, которые на удивление очень неплохо ложатся на то, что происходит в определенных системах.
1765.36 1775.88 "Игорь Лабутин" Послушайте этот доклад, даже хотя бы ради этой аналогии, она совершенно прекрасна и действительно на удивление очень хорошо легла на то, что мы с вами все делаем, когда пишем микросервисы.
1775.88 1785.44 "Анатолий Кулаков" Действительно, народы Севера очень хорошо распределены и очень много качают, и у них прослеживается очень много интересных аналогий с нашим Distributed Mirom.
1785.44 1787.88 "Анатолий Кулаков" Так, а вот еще один докладик про DDD.
1787.88 1790.60 "Анатолий Кулаков" О нем вам расскажет Артем Акуляков.
1790.60 1793.64 "Анатолий Кулаков" Не просто о DDD, а о DDD вместе с F#.
1793.64 1812.56 "Анатолий Кулаков" У многих могло сложиться такое ощущение, что DDD - это обязательно такой богатый, глубокий домен, который обязан жить на богатой модели, который обязан быть объектно-ориентированным, у которого должна быть куча всяких шаблонов, OOP-паттернов и прочих вот этих глупостей.
1812.56 1841.96 "Анатолий Кулаков" Артем вдруг вызвался доказать, что это не так, что DDD никак-никак не завязан на объектно-ориентированное программирование, и чистые функции F# и функциональное программирование тоже может быть полезно при проектировании домена, и на нем можно тоже писать домен, и более того, этот домен получается намного понятнее предсказуемее, документируемее и поддерживаемее, чем тот, который бы вы написали на OOP.
1841.96 1843.52 "Анатолий Кулаков" Вот такой дерзкий вброс.
1843.52 1867.24 "Анатолий Кулаков" Посмотрим, каким образом Артему удастся отстоять эту позицию, но в принципе я в Артеме не сомневаюсь, это довольно-таки известный в узких кругах популяризатор F#, он этим занимается уже много-много лет, и его прекрасная особенность состоит в том, что он пишет как на C#, и так и на F#, что позволяет ему сравнить плюсы и минусы обоих подходов без какой-то большой предвзятости.
1867.24 1871.36 "Анатолий Кулаков" Вот этим он всем и поделится в своем докладе DDD - любовь F#.
1871.36 1872.36 "Игорь Лабутин" Супер.
1872.36 1881.36 "Игорь Лабутин" Следующий доклад, честно говоря, я бы отнес, может быть, в категорию performance, потому что Бартош Адамчевский будет рассказывать про Data-Oriented Design.
1881.36 1888.08 "Игорь Лабутин" Мне это кажется что-то из области, там, как мы правильно пакуем битики или еще что-то, как это вообще соотносится с архитектурой.
1888.08 1893.24 "Анатолий Кулаков" Действительно, это тот доклад, который можно поставить легко и в архитектуру, и в performance.
1893.24 1911.12 "Анатолий Кулаков" Все-таки решили отнести его к архитектуре по той причине, что в отличие от наших предыдущих докладов по перформансу, когда мы оптимизируем какие-то структуры, даем какие-то алгоритмы, показываем, как это все измерять, это все видится более-менее какими-то кустарными способами.
1911.12 1914.20 "Анатолий Кулаков" То есть, вот здесь мы нашли, что сделать, вот здесь мы прооптимизировали.
1914.20 1924.96 "Анатолий Кулаков" Бартош предлагает нам взглянуть на performance как на фичу нашего приложения, и, соответственно, исходя из этой фичи, выбрать правильную архитектуру для нашего приложения.
1924.96 1939.28 "Анатолий Кулаков" Обычно программисты по умолчанию используют OOP, а потом пытаются после того, как померили, что что-то тормозит, или после того, как что-то затормозило, уже пытаются каким-то образом пофиксить performance, пофиксить производительность.
1939.28 1950.08 "Анатолий Кулаков" Бартош предлагает взглянуть на проблему с другой стороны и сразу подумать, что если для вашего приложения performance это довольно-таки критичная вещь, может быть, стоит сразу об этом подумать.
1950.08 1959.96 "Анатолий Кулаков" И сразу настолько, что, может быть, стоит начать программировать не в объектно-ориентированном стиле, а, может быть, стоит начать программировать в дата-ориентированном стиле.
1959.96 1963.04 "Анатолий Кулаков" То есть полностью концентрироваться на тех данных, которые вы будете обрабатывать.
1963.04 1965.48 "Анатолий Кулаков" Такой подход дает феноменальные результаты.
1965.48 1979.16 "Анатолий Кулаков" Когда мы начинаем думать о том, что в нашем приложении главное это данные, главное их быстрее всего обработать, быстрее всего передать или быстрее всего сохранить, мы начинаем добиваться совершенно новых уровней производительности.
1979.16 1992.72 "Анатолий Кулаков" Типичным примером является то, что можно заранее задуматься о том, каким образом наши данные помещаются в кэш процессора и, соответственно, хранить, передавать, вызывать и обрабатывать все наши данные таким образом.
1992.72 2002.72 "Анатолий Кулаков" И вам ничего не нужно уже для этого делать, вам не нужно запускать никаких профайлеров, вам не нужно никак-то поддерживать эту хрупкую оптимизацию, чтобы все попадало в кэш.
2002.72 2016.40 "Анатолий Кулаков" Ваше приложение уже спроектировано таким образом, что данные будут обрабатываться с помощью всех возможных параллельных ядров процессора, будут попадать во все возможные кэши и будут оптимально ложиться во все возможные лейауты.
2016.40 2019.32 "Анатолий Кулаков" И именно про этот подход и расскажет нам Бартыш.
2019.32 2041.44 "Игорь Лабутин" Звучит прям действительно суперинтересно, потому что действительно большое количество оптимизаций, которые мы делаем, они делаются постфактум по сути и мало кто задумывается, что нужно не пытаться уложить все там в структурки и запулить объекты куда-нибудь и обложиться спанами, а как-то по-другому подойти к этому вопросу.
2041.44 2045.68 "Анатолий Кулаков" Высокоуровневая архитектура у нас все же тоже будет.
2045.68 2047.84 "Анатолий Кулаков" Мы побеседуем про чистую архитектуру.
2047.84 2050.32 "Анатолий Кулаков" Расскажет нам об этом Андрей Цветцих.
2050.32 2063.20 "Анатолий Кулаков" Андрей популярен тем, что у него очень много очень больших проектов, на котором он попытался применить ту классическую архитектуру, ту чистую архитектуру, которую пишет во всех статьях и в всех книжках.
2063.20 2070.44 "Анатолий Кулаков" И у него сложились практические кейсы, которые немного не вписывались в те рекомендации, которые давали знаменитые авторы.
2070.44 2077.56 "Анатолий Кулаков" И вот этими кейсами о том, как он с ними столкнулся, как он их решил, и своими рекомендациями он с нами и поделится.
2077.56 2084.52 "Анатолий Кулаков" Он рассказывает о том, каким образом сделать архитектуру чистой и при всем при том поддерживаемой.
2084.52 2089.08 "Анатолий Кулаков" То есть, когда у вас огромное число разработчиков, фичи постоянно добавляются, изменяются.
2089.08 2098.72 "Анатолий Кулаков" Каким образом не дать всей этой чистоте, которую вы тщательно вырисовывали и вымывали, каким образом не дать ей разрушиться после коммита очередного индуса.
2098.72 2100.72 "Игорь Лабутин" И это звучит тоже вообще здорово.
2100.72 2103.48 "Игорь Лабутин" У нас действительно получается какой-то очень сильно архитектурный трек в этот раз.
2103.48 2109.24 "Игорь Лабутин" И я вижу, что следующий докладчик, Алексей Зимарев, вообще говоря, не сильно выбивается из этого списка.
2109.24 2115.44 "Анатолий Кулаков" Я бы больше даже сказал, это один из самых замечательных и сияющих спикеров в этой секции.
2115.44 2124.64 "Анатолий Кулаков" Мы оставили его на потом не потому, что хотели о нему после всего рассказать, а потому, что хотелось закончить на чем-то мега позитивным, мега приятным и мега шикарным.
2124.64 2129.32 "Анатолий Кулаков" А Алексей знаменит прежде всего на DDD конференциях.
2129.32 2134.68 "Анатолий Кулаков" Он очень много рассказывает про Event Sourcing, про SecureOS, про DDD.
2134.68 2141.28 "Анатолий Кулаков" У него есть замечательная книга, которая вышла в прошлом году, которую, кстати, всячески могу рекомендовать к прочтению.
2141.28 2144.36 "Анатолий Кулаков" И вот Алексей наконец-то добрался и до нашей конференции.
2144.36 2151.56 "Анатолий Кулаков" Наконец-то мы тоже имеем шанс его расспросить и узнать из первых рук, что же такое Event Sourcing.
2151.56 2157.24 "Анатолий Кулаков" Алексей не будет рассказывать про то, каким образом написать Hello World на Event Sourcing.
2157.24 2168.40 "Анатолий Кулаков" Мы тщательно искали спикеров на эту тему и как раз-таки отбрасывали очень много докладчиков, которые пытались нам показать банальные примеры, банальные Hello World.
2168.40 2173.60 "Анатолий Кулаков" Потому что в самой концепции Event Sourcing нет ничего такого загадочного, большого или страшного.
2173.60 2176.28 "Анатолий Кулаков" Сама примитивная мысль, она довольно-таки проста.
2176.28 2182.64 "Анатолий Кулаков" И объясняется она за полчаса элементарно, вместе с примерами и вместе с диаграммами и так далее.
2182.64 2201.52 "Анатолий Кулаков" Но как только мы начинаем копать глубже, как только мы пытаемся сделать на этом какую-то практическую систему, production-ready систему, поддерживаемую систему, версионируемую систему, вот там вылазит такое огромное число граблей, что вы вряд ли встретите среди ваших знакомых много систем, написанных в жанре Event Sourcing.
2201.52 2213.00 "Анатолий Кулаков" Алексей, благодаря своему богатому практическому опыту, как раз-таки и покажет, каким образом преодолеть вот этот большой барьер и сделать Event Sourcing каким практическим инструментом в вашем арсенале.
2213.00 2226.76 "Анатолий Кулаков" То есть доклад получается очень практичным, очень интересным, и у Алексея, как я уже сказал, очень богатый опыт, то есть он покроет абсолютно все те вопросы, которые вам на практике будут интересны при изучении Event Sourcing.
2226.76 2227.76 "Игорь Лабутин" Это здорово.
2227.76 2240.96 "Игорь Лабутин" Ты упомянул, что мы хотели оставить его напоследок, чтобы закончить на такой яркой и позитивной ноте, но на самом деле мы же еще не заканчиваем, ведь мы обсудили все доклады, но мы не обсудили всю программу.
2240.96 2247.08 "Игорь Лабутин" Если вы были на ДутНексте год назад в Москве, то могли видеть эксперимент под названием "Воркшопы".
2247.08 2265.92 "Игорь Лабутин" Онлайн - это оптимальный вариант для того, чтобы проводить воркшопы, потому что вам не нужно тащить с собой ноутбук, он у вас уже есть, или даже большой компьютер, вы сидите в своем удобном кресле, и поэтому мы в этот раз пробуем сделать большой набор воркшопов, где вы сможете получить какие-то хорошие практические знания.
2265.92 2278.12 "Анатолий Кулаков" Все 4 дня величайшие специалисты современности будут на практических кейсах показывать вам, каким образом вы сможете закрыть именно ваши практические надобности в вашем коде.
2278.12 2281.84 "Анатолий Кулаков" И начать хотелось бы именно с Алексея Зимарева.
2281.84 2288.48 "Анатолий Кулаков" Воркшоп Алексей как раз-таки покажет вам все те кейсы, которые он не успеет обсудить в своем теоретическом докладе.
2288.48 2305.28 "Анатолий Кулаков" На воркшопе он пройдет их с вами в практическом занятии и разберет более детально на примерах, на коде, на заготовленных семплах такие темы как моделирование доменных событий, частота событий, моделирование рид-моделей, проекции.
2305.28 2310.04 "Анатолий Кулаков" Вы научитесь вместе с ним измерять производительность ваших Event Source моделей.
2310.04 2311.36 "Анатолий Кулаков" Вы внедрите трассировку.
2311.36 2316.68 "Анатолий Кулаков" Вы научитесь каким образом сделать вашу Event Source модель развиваемой и поддерживаемой в будущем.
2316.68 2331.32 "Анатолий Кулаков" Короче, куча очень практических рекомендаций, которые готовы с вами поделиться Алексей и которые вы можете попробовать делать вместе с ним на воркшопе и задавать свои собственные вопросы, если вдруг на вашей системе у вас что-то не получается.
2331.32 2346.32 "Игорь Лабутин" А если вы еще пока не готовы к Event Sourcing или захотите подготовиться к воркшопу Алексея и немножко раскачаться в области архитектуры, проектирования, то добро пожаловать на воркшоп Максима Аршинова про рефакторинг модели домена.
2346.32 2355.76 "Анатолий Кулаков" Макс известен нам своими шикарными докладами о том, как действительно обогатить домен, о том, каким образом проектировать архитектуру вашего приложения.
2355.76 2360.56 "Анатолий Кулаков" У него тоже очень много интересных практических кейсов накопилось за это время.
2360.56 2364.76 "Анатолий Кулаков" И хотя доклада Максима у нас не будет в программе, но у нас будет намного больше.
2364.76 2376.52 "Анатолий Кулаков" У нас будет практический воркшоп от Максима Аршинова, где он расскажет про все свои любимые темы и на практических моделях, на практических примерах вместе с вами разберет самый сложный из них.
2376.52 2386.40 "Игорь Лабутин" А после того, как вы все спроектировали, реализовали и получили ваше красивое работающее приложение, в нем, к сожалению, могут найтись утечки памяти, либо оно может начать работать как-то не так.
2386.40 2403.64 "Игорь Лабутин" И с этим тоже надо уметь бороться, и про это у нас было огромное количество докладов на Дотнексте раньше, и в этот раз у нас будет воркшоп от Михаила Ярийчука на тему исследований утечек памяти в Дотнете с таким тулом, как VimDBG, про который тоже довольно давно ничего не звучало на Дотнексте.
2403.64 2416.40 "Игорь Лабутин" WinDBG все еще жив, он даже обновляется, у него появился новый красивый UI-чик, и Михаил расскажет про то, что делать, если у вас есть приложение в продакшене, в нем течет память или в нем происходит еще что-то не то.
2416.40 2421.40 "Игорь Лабутин" Единственная возможность, которая у вас есть, это собрать дамп приложения и что-то с ним попытаться сделать.
2421.40 2431.32 "Игорь Лабутин" Как это сделать, как практически добиться того, чтобы вы нашли то место, из-за которого утекает память, как не бояться дампов, как не бояться VimDBG, вообще с какой стороны к нему подходить.
2431.32 2441.32 "Игорь Лабутин" Приходите на воркшоп Михаила, он тоже будет 2 слота, как и все наши воркшопы, и узнайте на практике, попробуйте своими руками найти в каком-нибудь дампе какую-нибудь утечку.
2441.32 2454.64 "Игорь Лабутин" Но утечки памяти не единственная проблема в приложениях, которые встречаются, иногда бывают какие-то другие проблемы, и к сожалению, они, в отличие от утечек памяти, частенько обусловлены внешними условиями.
2454.64 2463.40 "Игорь Лабутин" Например, у вас там может падать сеть, или у вас может какой-нибудь сторонний сервис, с которым вы интегрируетесь, и вы можете внезапно падать или слать вам какие-то странные ответы.
2463.40 2469.80 "Игорь Лабутин" С такими ошибками тоже надо уметь бороться и писать ваше приложение так, чтобы оно было достаточно устойчивым, особенно если про это есть требования.
2469.80 2474.24 "Игорь Лабутин" И как это делать, на своем воркшопе расскажет Björn InnerBjartness.
2474.24 2487.12 "Анатолий Кулаков" И Björn — это довольно интересная находка, он поддерживает стриминговый сервис, довольно-таки большой стриминговый сервис, у которого очень важны такие параметры, как задержка и устойчивость к сбоям.
2487.12 2490.76 "Анатолий Кулаков" Björn на своем практическом воркшопе как раз и покроет эту тему.
2490.76 2501.48 "Анатолий Кулаков" Я думаю, уже в дотнет-мире такой инструмент, как поле, не вызывает никого как удивлений, и каждый разработчик, наверное, практически должен его у себя использовать.
2501.48 2505.44 "Анатолий Кулаков" Björn пойдет дальше и расскажет о том, каким образом улучшить вот эту комбинацию.
2505.44 2508.16 "Анатолий Кулаков" Есть библиотечка, которая называется CIMI.
2508.16 2521.60 "Анатолий Кулаков" Она позволяет вам смоделировать fault injection, то есть смоделировать ситуацию, когда в вашей сети возникают какие-то проблемы, она отваливается, она моргает, изменяется ее скорость, то есть повышается время отклика.
2521.60 2539.28 "Анатолий Кулаков" И все вот эти магические вещи, которые могут быть с вами в продакшене, но вы на них никогда не протестируете свое приложение, как их правильно внедрить, как их правильно написать, каким образом протестировать ваш сервис под большой нагрузкой, какие инструменты для этого использовать и чем прекрасны библиотеки поле и CIMI.
2539.28 2541.32 "Анатолий Кулаков" Вот об этом, о всем расскажет вам Björn.
2541.32 2548.96 "Игорь Лабутин" И не только расскажет, но и даст возможность попробовать это по шагам вместе с ним, чтобы вы могли просто прямо пойти и начать применять это в ваших проектах.
2548.96 2550.20 "Анатолий Кулаков" Точно, это же воркшоп.
2550.20 2556.64 "Анатолий Кулаков" На всех воркшопах у вас будет очень-очень много практики и практически, наверное, минимум теории.
2556.64 2561.68 "Анатолий Кулаков" Так что если вы очень большой любитель практики, выбирайте себе подходящий воркшоп и добро пожаловать.
2561.68 2562.68 "Игорь Лабутин" Да.
2562.68 2568.12 "Игорь Лабутин" Итак, мы закончили обзор программы .NEXT 2020 в Москве, который пройдет онлайн.
2568.12 2574.16 "Игорь Лабутин" Еще раз скажем, что у нас будет несколько слотов, где мы очень ждем ваши вопросы.
2574.16 2579.04 "Игорь Лабутин" Это Мигель, это Маони, это Мэдс Торгерсен.
2579.04 2594.12 "Игорь Лабутин" Если вам интересно что-то спросить у них, а также на самом деле у любых других наших спикеров, пишите эти вопросы, сообщайте нам, оставляйте в комментариях к ютубу, где будет размещен этот подкаст, пишите нам на почту.
2594.12 2599.32 "Игорь Лабутин" Давайте знать какими угодно способом, чем больше мы зададим интересных вопросов, тем интереснее будет конференция.
2599.32 2607.52 "Анатолий Кулаков" А я напоминаю, что у нас для вас есть промокод на конференцию .NEXT, поэтому еще не поздно взять билетики с нашей скидочкой.
2607.52 2609.12 "Анатолий Кулаков" Промокод будет в шоу-нотах.
2609.12 2616.40 "Анатолий Кулаков" Наш подкаст вы можете найти легко в Google подкастах, в Apple подкастах, в Яндекс.Музыке и даже на ютубчике.
2616.40 2617.88 "Анатолий Кулаков" На этом, наверное, все.
2617.88 2618.88 "Анатолий Кулаков" Давайте прощаться.
2618.88 2620.84 "Анатолий Кулаков" Всем до новых встреч, всем пока.
2620.84 2625.24 "Анатолий Кулаков" С вами были Игорь Лабутин, Андрей Акиньшин и Анатолий Кулаков.
2625.24 2625.24 None Счастливо.
2625.36 2625.86 "Анатолий Кулаков" Счастливо.
2626.18 2626.68 None Счастливо.
2627.00 2627.50 None Счастливо.
2627.82 2628.32 None Счастливо.
2628.32 2635.00 None [музыка]
