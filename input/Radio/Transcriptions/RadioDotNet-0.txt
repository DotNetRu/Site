0.00 5.64 "Анатолий Кулаков" Итак, здравствуйте, дорогие друзья!
5.64 12.24 "Анатолий Кулаков" Мы решили собраться всеми вместе перед нашей любимой конференцией для того, чтобы немножко поговорить об её программе.
12.24 13.92 "Анатолий Кулаков" Кто такие мы?
13.92 15.82 "Анатолий Кулаков" Давайте немножко представимся.
15.82 17.52 "Анатолий Кулаков" Меня зовут Анатолий Кулаков.
17.52 21.88 "Анатолий Кулаков" О своих регалиях, я думаю, мы поговорим в другой части.
21.88 24.48 "Анатолий Кулаков" А также со мной сегодня ещё есть Андрей Акиньшин.
24.48 25.48 "Анатолий Кулаков" Всем привет!
25.48 26.48 "Анатолий Кулаков" И Игорь Лабутин.
26.48 27.48 "Анатолий Кулаков" Всем привет!
27.48 34.20 "Анатолий Кулаков" Вот почему мы решили вдруг сейчас собраться и рассказать перед конференцией немножко о докладах.
34.20 40.96 "Анатолий Кулаков" Дело в том, что нас очень часто спрашивают перед конференциями, куда пойти, посоветуйте, пожалуйста, что делать.
40.96 49.16 "Анатолий Кулаков" И мы объясняем своим коллегам, друзьям с большой радостью объясняем, на какие доклады им стоит пойти, на какие нет.
49.16 51.20 "Анатолий Кулаков" Но это повторяется одно и то же много раз.
51.20 55.68 "Анатолий Кулаков" Поэтому мы решили всего-навсего сделать одну запись и раздавать её знакомым.
55.68 64.92 "Анатолий Кулаков" Вот у нас собрался такой замечательный коллектив, который имеет богатый опыт как в конференции, как в .NET, так и в общем в сообществе.
64.92 72.28 "Анатолий Кулаков" Но если мы сегодня говорим о конференции, то самым наверное старым и опытным сотрудником конференции является Андрей.
72.28 82.36 "Анатолий Кулаков" И он может нам сейчас рассказать, как же это всё начиналось и похоже ли то, что творится сейчас на первые .NEXT, которые были у нас.
82.36 85.84 "Анатолий Кулаков" Андрей, как ты думаешь, похоже ли то, что есть сейчас на первые .NEXT?
85.84 87.64 "Андрей Акиньшин" Нет, вообще не похоже.
87.64 91.16 "Андрей Акиньшин" Я отлично помню, как делались первые конференции.
91.16 95.08 "Андрей Акиньшин" То есть, во-первых, они делались буквально за несколько недель.
95.08 108.00 "Андрей Акиньшин" Отбор спикеров происходил по принципу находим какого-нибудь человека на хабре, говорим ему «пойдёшь на нашу конференцию выступить?» Он говорит «ну окей, пойду».
108.00 113.88 "Андрей Акиньшин" И всё, и вот так хоп-хоп, и за недельку-другую программа собрана.
113.88 119.48 "Андрей Акиньшин" Сейчас же у нас сезон готовится полгода, даже больше на самом деле.
119.48 139.96 "Андрей Акиньшин" Весенний .NEXT ещё не начался, а мы уже вовсю начали работать над осенним .NEXT, активно ищем спикеров, всем пишем уже, даже секрет скажу, есть некоторые люди, которые согласились, они уже работают над докладиками.
139.96 166.24 "Андрей Акиньшин" А так, минимум полгода у нас идёт подготовка к сезону, это еженедельные синкапы, это постоянные тренировки спикеров, то есть у нас там некоторые спикеры тренируются один-два раза, есть некоторые, с которыми приходится там аж по 10 тренировок проходить, это очень серьёзная и большая работа, но она того стоит, потому что доклады получаются действительно очень хорошего
166.24 192.40 "Анатолий Кулаков" качества. Я слышал, что многие спикеры очень даже гордятся нашими тренировками, то есть после того, как они ощутили на себе, что такое быть оттренированным, наверное, многие знают, что на западных конференциях такое абсолютно не практикуется, они эту технику перенимают и пытаются внедрять в западных конференциях, то есть просят, чтобы их подлокальные группы, подлокальную аудиенцию как-то пытались прогнать, посмотреть, оттренировать.
192.40 214.72 "Андрей Акиньшин" Ну, потому что это действительно очень хорошая практика, но многие этого вначале не понимают, считают, что мы относимся к ним недоверием, то есть говорят, ну как так, я вот там на НДС выступаю без всяких тренировок, я там выступаю, меня все доверяют, а вы мне не доверяете, пытаетесь как-то сделать какие-то тренировки.
214.72 230.04 "Андрей Акиньшин" А потом начинает приходить осознание, что это не мы людям не доверяем, хотя иногда отчасти это так, а это больше нужно самим спикерам, чтобы поднять собственный уровень, а без конструктивного фидбэка
230.04 244.80 None это практически нереально. Слушай, ну ладно, тема подготовки конференции, она большая, я надеюсь, что мы про нее еще когда-нибудь поговорим, давай не сейчас, так как у нас осталось до конференции совсем немножко, давай все-таки сосредоточимся на докладах, на .NET и вообще, насколько он жив.
244.80 250.60 "Анатолий Кулаков" Кстати, как ты думаешь, он жив, он развивается, или уже мы начали стагнировать и превращаться в большой энтерпрайз?
250.60 259.76 "Андрей Акиньшин" Нет, это вообще не связано с каким-то вещью, то есть энтерпрайз, да, большой, да, но стагнация нет, наоборот.
259.76 275.16 "Андрей Акиньшин" Прямо сейчас, наверное, самое удивительное время, чтобы быть .NET разработчиком, потому что то, как сейчас у нас развивается и платформа, и экосистема, и сообщество, .NET за всю историю такого никогда не видел.
275.16 289.36 "Андрей Акиньшин" Буквально на этой неделе, по-моему, Microsoft на конференции Build анонсировала, что вот у нас будет теперь .NET 5, у нас не будет теперь .NET Framework, это уже все, legacy никому не нужны.
289.36 296.88 "Анатолий Кулаков" То есть официально .NET Framework большой, он закрыт, он больше не развивается, да, и последняя версия, которая сейчас вышла 4.8, она будет последней?
296.88 297.88 "Андрей Акиньшин" Да.
297.88 308.84 "Андрей Акиньшин" Планируют сделать один, ну это уже не Framework, они сейчас называют это .NET 5, хотя я очень надеюсь, что они поменяют название на что-нибудь более запоминающееся.
308.84 320.16 "Андрей Акиньшин" Туда они объединят .NET Core и Mono, можно будет свитчить как-то VM-ку, я не знаю, как они этого хотят добиться, но вот такие у них планы.
320.16 321.88 "Анатолий Кулаков" То есть Mono тоже не будет?
321.88 323.16 "Анатолий Кулаков" Mono не будет.
323.16 329.40 "Анатолий Кулаков" Мы наконец-то придем в светлое будущее, где будет одна платформа без Mono, без большого .NET?
329.40 349.20 "Андрей Акиньшин" Ну, это немножко лукавство, потому что внутри Mono останется, ты можешь на нее как-то свитчиться, у тебя останется все еще миллион всяких разностей и тонкостей между разными раундтаймами и по перформансу, и по логике работы, и по всему, но с маркетинговой точки зрения у тебя будет одна опция.
349.20 350.76 "Андрей Акиньшин" Да, интересно это посмотреть.
350.76 364.44 "Андрей Акиньшин" Ну и в целом очень развивается язык, скоро у нас выйдет C# 8, развивается сообщество, вот у нас есть .NET Foundation, который происходит с каждым годом.
364.44 387.56 "Андрей Акиньшин" Да, кстати, у нас один из моих, наверное, любимейших докладов на ближайшем .NET, это будет доклад Джона Гэллоуэя, кто не знает, это директор .NET Foundation, очень клевый дядька, его на .NET всем рекомендую просто поймать и немножко пообщаться, поговорить за .NET, за комьюнити, за все просто.
387.56 414.00 "Андрей Акиньшин" И у него доклад будет, сразу скажу, не технический, у нас практически вся программа техническая для инженеров, а Гэллоуэй будет рассказывать про состояние фондейшена, состояние .NET, и это тоже очень важная тема и направление просто понимать, в каком состоянии находится сейчас экосистема .NET и все, что с ней связано.
414.00 419.16 "Андрей Акиньшин" И вот для того, чтобы получить такое овервью, вот этот доклад просто самый итоговый.
419.16 421.60 "Анатолий Кулаков" Всем настоятельно рекомендуем.
421.60 439.80 "Анатолий Кулаков" Слушай, ну я правильно понимаю, что в принципе весь вот этот всплеск модернизации в .NET, вся его скорость нынешняя, она идет именно от фондейшена, то есть когда раньше не было фондейшена, мы такого не наблюдали, когда Microsoft втихую что-то сама себе пилила, фичи конечно выходили, но не так интенсивно.
439.80 444.72 "Андрей Акиньшин" Ну это тоже лухавство такое, я бы так не...
444.72 451.52 "Андрей Акиньшин" Ну то есть это конечно все связано, но здесь нужно понимать, где причина, где следствие.
451.52 459.24 "Андрей Акиньшин" То есть Microsoft взялась за такое оживление .NET, массовое популяризацию его.
459.24 464.88 "Андрей Акиньшин" И .NET фондейшен - это одно из направлений популяризации этой большой работы.
464.88 472.52 "Андрей Акиньшин" Там выкладывание всего подряд в open source, начиная от рантайма, заканчивая WPF, это другое направление.
472.52 475.92 "Андрей Акиньшин" Развитие активного языка - это третье направление.
475.92 480.76 "Андрей Акиньшин" Публичность, все вот эти конференции, блокпосты - это четвертое направление.
480.76 481.76 "Андрей Акиньшин" И так далее.
481.76 487.04 "Андрей Акиньшин" То есть не фондейшен является двигателем прогресса, но это важная составляющая.
487.04 497.56 "Анатолий Кулаков" Я вот действительно понял только после того, как нам поддался Джон Галловой, что я мало себе представляю, как работает фондейшен и какой вклад он реально вносит в жизнь .NET.
497.56 501.52 "Анатолий Кулаков" И да, доклад мне точно будет полезен.
501.52 505.96 "Анатолий Кулаков" Игорь, а ты вообще хоть раз слышал, например, имя Джона Галловая до того, как он к нам поддался?
505.96 506.96 "Анатолий Кулаков" Я вот ни разу не слышал.
506.96 516.96 "Игорь Лабутин" И я слышал имя Джона Галловая в связи с .NET фондейшеном, но у меня не было и до сих пор на самом деле, там нет какого-то абсолютно четкого понимания, что это и зачем.
516.96 523.92 "Игорь Лабутин" И вот как раз да, хочется послушать доклад, чтобы уложить все по полочкам и понять.
523.92 533.68 "Игорь Лабутин" Потому что я привык к тому, что в .NET в основном все как-то, ну мои интересы в основном чисто технические, поскольку я разработчик.
533.68 543.60 "Игорь Лабутин" И вот весь фондейшен и какая-то движуха вокруг таких более организационных моментов, она пока какая-то для меня не очень понятная.
543.60 549.80 "Игорь Лабутин" Но Джон, я надеюсь, нам все разъяснит, как, собственно, прямой представитель .NET фондейшена.
549.80 554.96 "Игорь Лабутин" И мы узнаем, чем это может быть полезно всем и сообществам, и индивидуальным разработчикам.
554.96 561.76 "Андрей Акиньшин" Слушай, Игорь, а ты же вроде курировал доклад про будущее доступные разработки на .NET, да?
561.76 563.76 "Игорь Лабутин" Да, именно так.
563.76 573.60 "Игорь Лабутин" Будущее доступной разработки, ох, там старый добрый, старый добрый наши WinForms и WPF.
573.60 584.40 "Игорь Лабутин" И я как даже в 2019 сейчас году, как старый .NET разработчик, когда мне нужно что-то быстро набросать в QA, я до сих пор открываю WinForms.
584.40 587.72 "Игорь Лабутин" Я так почему-то и не привык к WPF.
587.72 597.84 "Игорь Лабутин" И я уже несколько переставал надеяться на то, что такая возможность у меня будет в будущем, поскольку все WinForms и WPF под .NET Core не жив.
597.84 599.96 "Игорь Лабутин" Но оказалось, что все не так.
599.96 609.28 "Игорь Лабутин" Вместе с .NET Core 3 Microsoft перепортировала или позволила, по крайней мере, создавать WinForms и WPF приложения.
609.28 613.56 "Игорь Лабутин" Они, конечно же, все еще работают только под Windows, то есть они не будут кроссплатформенными.
613.56 625.96 "Игорь Лабутин" Но вы можете компилировать ваш код под .NET Core и при этом пользоваться всеми прелестями старых WinForms и WPF фреймворков и писать ваше любимое Desktop-приложение.
625.96 636.76 "Игорь Лабутин" И Нико Вермейер как раз покажет, как это можно делать, какие есть ограничения, что сейчас работает, что сейчас еще не работает и куда все это движется.
636.76 651.08 "Анатолий Кулаков" Слушай, ну я должен ответить, что это очень довольно крутой свитч, потому что, например, в компании, где я работаю, там есть действительно Legacy-приложения, которые на WinForms пишутся уже 50 лет, и их точно никто не будет переписывать на какое-нибудь что угодно.
651.08 661.84 "Анатолий Кулаков" А с учетом того, что большой .NET Framework закрывается и мы остаемся у разбитого корыта, то поддержка в .NET Core, WinForms и прочих UI-к это довольно полезная штука.
661.84 664.80 "Анатолий Кулаков" Я думаю, для многих людей этот доклад будет очень
664.80 676.72 "Игорь Лабутин" полезен. Да, это довольно логичный ход, особенно с учетом закрытия фреймворка, но не только WinForms и WPF в едином же Near UI в .NET, в принципе, есть альтернативы.
676.72 688.84 "Игорь Лабутин" И, в частности, на конференции .NET будет, в том числе, Никита Цуканов, у которого можно будет узнать о том, как поживает Аволония про платформенные UI под .NET.
688.84 701.20 "Анатолий Кулаков" Да, у Никиты Цуканова будет отдельный доклад, но доклад будет на треке сообщества, .NET сообщество, у него будет отдельный трек, поэтому в основном расписании вы его не найдете, а найдете в отдельном расписании сообщества, если вдруг вам эта тема интересна.
701.20 706.32 "Анатолий Кулаков" Там можно будет с Никитой и побеседовать, и посмотреть, и потыкать, и пообвинять, вообще все как полагается.
706.32 713.08 "Андрей Акиньшин" Слушайте, а вот я помню, Никита рассказывал в свое время у нас доклад про Blazor, если я ничего не ошибаюсь.
713.08 726.84 "Андрей Акиньшин" В этот раз у нас приезжает опять Дино Эспозито, и у него сразу два доклада, оба таких на ProBleedingEdge, один про Blazor, а второй про третий S/P/NET Core, как там что.
726.84 734.56 "Анатолий Кулаков" Дино Эспозито, как всегда, решил хайпануть, выбрал самые актуальные темы, и решил сделать про них отличное введение, в принципе, которое он всегда делает.
734.56 744.04 "Анатолий Кулаков" Поэтому если вы вдруг не сталкивались с этой технологией, или просто хотите систематизировать знания про Blazor или S/P/NET Core третьему, то Дино - это отличный спикер.
744.04 759.64 "Игорь Лабутин" Ну уж если говорить про хайп, у нас есть еще и C# 8, если мы немножко отличаемся от платформы, поговорим про языки, и насколько я помню, были ли у нас до этого достаточно докладов про какие-либо фичи, про C# 8.
759.64 792.96 "Анатолий Кулаков" Про новые фичи языка у нас было пару докладов, надо сказать, что они были давно, а этот доклад в принципе представляет Дмитрий Нестерук, поэтому даже если вы знакомы с C# 8 и просто хотите понять все прелести того, откуда взялись новые фичи, как их использовать, то я вам крайне советую сходить на этот доклад, потому что интересная фишка Дмитрия, он рассказывает про новые фичи языка, имея в голове еще около десятка языков программирования, которыми он владеет, по которым у них есть много курсов, богатая практика и так далее.
792.96 803.28 "Анатолий Кулаков" Очень интересно на это смотреть, то есть как это сделано в других языках, какие фичи C# перенял, или какие улучшил, или какие сделал по-другому, очень занятное зрелище.
803.28 812.24 "Анатолий Кулаков" Из хайпов у нас еще есть интересная тема, которая к Дотнету в принципе напрямую не имеет никакого отношения, но довольно популярна в мире, это хаос-тестинг.
812.24 814.20 "Анатолий Кулаков" Кто-нибудь может рассказать вообще, что это и зачем
814.20 838.16 "Андрей Акиньшин" это? Я как-то пропустил подготовку этого доклада и не очень в курсе того, что происходит в мире хаос-тестинга, поэтому я с удовольствием схожу сам на этот докладик или посмотрю как минимум в записи, потому что тема такая, в которой особо народ не ныряет, не занимается на работе, потому что обычно не возникает такой необходимости.
838.16 844.40 "Андрей Акиньшин" Но для общей эрудиции я думаю, что этот доклад будет довольно-таки полезен.
844.40 847.16 "Анатолий Кулаков" Я готов тебе несколько примеров привести.
847.16 858.32 "Анатолий Кулаков" Например, обычно ты все время пишешь код, и твой код оттестирован, то есть ты обычно тестируешь какие-то саксэспасы, то есть как он будет хорошо работать, как он будет хорошо твои логаритмы обрабатывать.
858.32 860.72 "Анатолий Кулаков" И очень редко ты проверяешь на какие-нибудь исключения.
860.72 865.12 "Анатолий Кулаков" И если проверяешь, то это на свои исключения, которые ты по собственному мнению почему-то захотел выбросить.
865.12 866.12 "Анатолий Кулаков" Допустим, исключение валидации.
866.12 875.24 "Анатолий Кулаков" И это довольно-таки банально, потому что весь наш мир, особенно когда мы начинаем говорить о распределенных системах, он очень ненадежен, очень неровновешен.
875.24 883.68 "Анатолий Кулаков" И например, у тебя легко могут быть какие-то проблемы с сетью, с диском, с загруженностью процессора, с нехваткой памяти и так далее.
883.68 886.08 "Анатолий Кулаков" То есть такие вещи, которые ты просто не можешь предсказать.
886.08 892.64 "Анатолий Кулаков" И покрывать их обычными тестами становится довольно-таки сложно, потому что эти ситуации они выстреливают редко.
892.64 896.56 "Анатолий Кулаков" Но когда они выстреливают, они твое приложение обычно кладут.
896.56 903.12 "Анатолий Кулаков" И именно такие ситуации, когда именно не саксес-пассы, именно такие ситуации можно протестировать с помощью хаос-тестинга.
903.12 906.80 "Анатолий Кулаков" Эта технология довольно-таки, можно сказать, уже старая.
906.80 909.04 "Анатолий Кулаков" Ее Netflix поднимал еще много лет назад.
909.04 918.52 "Анатолий Кулаков" Но в мир обычных разработчиков, то есть не отдельной команды из 200 девопсов, он приходит довольно-таки постепенно, и вот докатился до тут-нето.
918.52 933.56 "Анатолий Кулаков" Кабус как раз расскажет о фреймворке, который он лично сам пишет, и расскажет, как пользоваться этим фреймворком, какие можно с помощью него отлавливать интересные ситуации, и как свою программу сделать более надежной и более предсказуемой в условиях нашего непредсказуемого мира.
933.56 941.56 "Андрей Акиньшин" А, ну то есть это что-то вроде фазирования, когда мы генерим рандомный input и смотрим, чтобы программа не сдохла.
941.56 944.28 "Анатолий Кулаков" Наверное, да, можно это представить именно так.
944.28 948.16 "Анатолий Кулаков" Но данная технология, она ближе все-таки к бизнес-логике.
948.16 953.96 "Анатолий Кулаков" То есть ты не просто в отдельный методок закидываешь произвольные структуры данных, произвольные данные.
953.96 964.64 "Анатолий Кулаков" Ты здесь обрабатываешь именно поведение всей твоей программы во время скачивания файла или во время взаимодействия по сети с другим сервисом.
964.64 965.64 "Анатолий Кулаков" Что-то типа того.
965.64 967.40 "Андрей Акиньшин" Слушай, это очень интересно.
967.40 973.56 "Андрей Акиньшин" Я просто начал рассказывать, я вспомнил, был такой проект Fuzer для Roslyn, кажется.
973.56 986.04 "Андрей Акиньшин" Ребята генерировали просто случайные программки, ну понятно, случайный набор байтов, псевдослучайные программы и смотрели, как Roslyn их будет переваривать.
986.04 993.92 "Андрей Акиньшин" И нашли несколько разных багов, по-моему, в компиляторе, которые до этого были неизвестны.
993.92 997.20 "Андрей Акиньшин" Ручным тестированием люди их поймать никак не могли.
997.20 1001.00 "Анатолий Кулаков" Да, тема автоматизированного тестирования, она в принципе очень хорошая и очень интересная.
1001.00 1003.88 "Анатолий Кулаков" И у нас, к сожалению, мало покрыто на дотнете.
1003.88 1006.60 "Анатолий Кулаков" И поэтому я думаю, что этот доклад найдет свою аудиторию.
1006.60 1009.68 "Андрей Акиньшин" А, нет, все, все, я нашел, это был не Roslyn.
1009.68 1015.56 "Андрей Акиньшин" Ребята фазили дотнетовский JIT-компайлер, смотрели, что он там выдает.
1015.56 1021.28 "Андрей Акиньшин" У Мэтта Уоррэна на эту тему даже пост был в августе восемнадцатого года.
1021.28 1022.68 "Андрей Акиньшин" Довольно легко гуглиться.
1022.68 1024.12 "Анатолий Кулаков" У тебя есть ли ссылка под рукой?
1024.12 1026.60 "Анатолий Кулаков" Бросай, мы ее приложим к выпуску.
1026.60 1034.84 "Андрей Акиньшин" Ну ладно, довольно про тренды, уже все поняли, что очень много всякого разного происходит в мире дотнета.
1034.84 1040.04 "Андрей Акиньшин" Я вот посмотрел, очень много докладов есть про архитектуру в этот раз.
1040.04 1047.44 "Андрей Акиньшин" И если опять возвращаться к истории dotnext, то самые первые dotnext, они делались полностью на хардкорных докладах.
1047.44 1053.84 "Андрей Акиньшин" Мы там рассказывали про internal runtime, про то, как все оно внутри работает.
1053.84 1058.96 "Андрей Акиньшин" Залезали просто в непонятные лебри, и народу это довольно таки нравилось.
1058.96 1062.28 "Андрей Акиньшин" Очень много людей приходило и с интересом слушало.
1062.28 1063.72 "Андрей Акиньшин" Вызовы хорошие были.
1063.72 1069.68 "Андрей Акиньшин" А сейчас у нас с каждым годом все больше и больше докладов про архитектуру.
1069.68 1077.08 "Андрей Акиньшин" И это тем меня немножко стороной обходит, потому что я продолжаю все так же больше курировать доклады по internals.
1077.08 1080.60 "Андрей Акиньшин" Можете вы мне объяснить, я просто не до конца понимаю.
1080.60 1085.52 "Андрей Акиньшин" У нас целевая аудитория – это senior dotnet разработчики.
1085.52 1092.20 "Андрей Акиньшин" То есть построение нормальной архитектуры – это вроде как один из таких базовых навыков.
1092.20 1096.40 "Андрей Акиньшин" Вроде предполагается, что и так все им владеют.
1096.40 1105.20 "Андрей Акиньшин" И что вообще можно рассказывать людям сейчас про архитектуру, чего они еще не знают, чтобы было интересно слушать?
1105.20 1108.92 "Анатолий Кулаков" Надо заметить, что у людей приходит все больше и больше с каждым годом.
1108.92 1111.52 "Анатолий Кулаков" Может как раз таки потому, что у нас все больше и больше архитектурных докладов.
1111.52 1123.96 "Анатолий Кулаков" И несмотря на то, что ты считаешь, что архитекторы, которые приходят, тем лиды, которые приходят на наши конференции, они почему-то со спеленок знают все основы архитектуры – это естественно не так.
1123.96 1127.80 "Анатолий Кулаков" Все мы люди, все мы когда-то обучаемся, и нам нужно обучаться на чем-то.
1127.80 1147.40 "Анатолий Кулаков" И этот блок, мне кажется, очень важен, потому что ты, наверное, можешь каким-то образом до перформанса, до интернала дойти своими собственными исследованиями, своими собственными стараниями, но такой огромный пласт, как архитектура, освоить самому без практически каких-то наработок других людей, мне кажется, абсолютно нереальным.
1147.40 1160.32 "Анатолий Кулаков" Поэтому этот блок, он дает очень мощное погружение в технологию, и количество полезной информации на единицу времени в этих докладах, оно просто зашкаливает.
1160.32 1177.96 "Анатолий Кулаков" Здесь есть мастодонты, вроде Вагифа Абилова, который пишет многие годы довольно-таки высоконагруженные проекты, он перепробовал все от C++ до C# и F#, и как раз-таки об этом один из его докладов – это «Жизнь после бизнес-объектов».
1177.96 1190.56 "Анатолий Кулаков" И в этом докладе Вагиф как раз-таки будет и сравнивать, зачем нужен F#, если у нас есть C#, какие фишки можно использовать в C#, какие функциональные вещи перекочевали из F#.
1190.56 1205.20 "Анатолий Кулаков" В этом докладе интересна еще одна особенность, так как Вагиф обычно топит за функциональщину, и в конце было логично представить, что Вагиф нам расскажет, что все хорошо, используйте F#, и у вас все будет хорошо.
1205.20 1214.48 "Анатолий Кулаков" Поэтому мы решили немножко усложнить ему жизнь и прибавить нам веселье, мы попросили Максима Аршинова выступить его соавтором.
1214.48 1236.44 "Анатолий Кулаков" А Максим Аршинов известен тем, что он очень прагматичный разработчик, он очень прагматичный архитектор, и он действительно пробовал внедрить F# в свою команду, пробовал натянуть свои текущие проекты на F#, и в конце концов все-таки решил скатиться к такому мнению, что C# прагматичнее, он сейчас поддерживаемее, понятнее, читабельнее, и мы не будем переходить на F#.
1236.44 1248.04 "Анатолий Кулаков" Это довольно-таки интересное мнение в этой идиллии функциональщины, где все только мечтают на ней работать, и мы решили слеснуть этих двух докладчиков в одном докладе.
1248.04 1260.12 "Анатолий Кулаков" Они оба вам выскажут свое мнение, оба на примерах покажут, где F# стоит применять, где C# лучший, и очертят границы, где и какие языки, и какие технологии лучше применяются.
1260.12 1279.96 "Андрей Акиньшин" Ну, окей, ладно, это выглядит как что-то интересное, но с другой стороны и Вагиф, и Максим, они про все могут рассказывать, так что это будет интересно, но тема того, нужен ли F# в продакшене, в интерпрайзе, она холиварная, и всегда интересно послушать многих людей на эту тему.
1279.96 1284.44 "Андрей Акиньшин" Доводы - за, доводы - против.
1284.44 1293.40 "Андрей Акиньшин" Возможно, это как-то поможет определиться о том, с чем что, тащить ли мне F# в свой собственный проект, если я начал об этом задумываться.
1293.40 1296.20 "Анатолий Кулаков" Видишь ли, в чем интересно именно F#?
1296.20 1302.48 "Анатолий Кулаков" Почему мы так много уделяем этому внимания, несмотря на то, что работы по F# у нас довольно-таки мало?
1302.48 1310.84 "Анатолий Кулаков" F#, он дает нам именно парадигму, парадигму функционального программирования, которая постепенно проникает во все другие языки, в том числе и C#.
1310.84 1320.08 "Анатолий Кулаков" И, например, Рома Неволин будет рассказывать о том, что на самом-то деле мы ежедневно используем функциональные парадигмы проектирования архитектуры в своих языках, просто об этом не задумываемся.
1320.08 1325.20 "Анатолий Кулаков" И он на своем докладе как раз-таки покажет, чем это плохо.
1325.20 1332.92 "Анатолий Кулаков" Плохо это тем, что мы не осознаем до конца природу происхождения всех этих шаблонов функционального проектирования и не можем на полную катушку их использовать.
1332.92 1345.24 "Анатолий Кулаков" Если вы хотите разобраться, в принципе, а зачем мы это делаем, зачем существуют, допустим, в ООП программировании акторы или лямбда-функции, то Рома вам об этом хорошо расскажет.
1345.24 1346.24 "Игорь Лабутин" А такой вопрос.
1346.24 1353.44 "Игорь Лабутин" Все прошлые доклады Ромы как-то точно так же обычно ассоциируются с языком F#.
1353.44 1355.92 "Игорь Лабутин" Насколько много будет F# в этот раз?
1355.92 1359.08 "Анатолий Кулаков" Он, как и Вагиф, попробует сравнить два мира.
1359.08 1368.92 "Анатолий Кулаков" То есть он, несмотря на то, что он сосредоточит свой рассказ на архитектуре, он будет затрагивать и C#, и F#.
1368.92 1372.92 "Анатолий Кулаков" Но все-таки он будет рассказывать про функциональную архитектуру.
1372.92 1383.08 "Анатолий Кулаков" Если вы хотите что-нибудь более высокоуровневое, например, наши любимые микросервисы или DDD, то по этой теме у нас тоже были доклады.
1383.08 1386.24 "Анатолий Кулаков" Игорь, не помнишь, что у нас про микросервисы есть?
1386.24 1403.48 "Игорь Лабутин" Про микросервисы и вообще про Service-Oriented Architecture у нас были доклады на прошлых .NEXT, рассказывал Адам Ральф, у нас рассказывал опять же Константин Густов на одном из прошлых .NEXT, рассказывал про свой опыт применения DDD.
1403.48 1416.36 "Игорь Лабутин" И он продолжит в этот раз свои рассказы о том, как они у себя на проекте объединили две очень непростые темы, это Domain Driven Design и микросервисную архитектуру.
1416.36 1441.40 "Игорь Лабутин" Какие проблемы возникли, как они их решали, и какие выводы можно из этого всего сделать, полезные для всех остальных, для тех самых синерозработчиков, которые придут слушать и которые, казалось бы, должны знать все эти проблемы, но в каждом проекте проблемы свои, и возможно, услышав проблемы соседа, вы что-то заметите на своем проекте или переделаете.
1441.40 1454.80 "Анатолий Кулаков" Здесь еще примечательность, что Константин работает архитектором в очень большом банке, если вы думаете, что банки это как это за скорожилая технология, где только по монолитам и пишут, то он разрушит ваше понимание.
1454.80 1465.20 "Анатолий Кулаков" И одновременно этот доклад интересен тем, что он как раз таки расскажет, как внедрялись эти подходы, как команда на них реагировала, какие были проблемы и так далее.
1465.20 1472.20 "Анатолий Кулаков" То есть не какие-то сухие факты из очередной теоретической книжки, а именно настоящее внедрение микросервисов в сложный банк.
1472.20 1475.40 "Анатолий Кулаков" И второй аспект его доклада – это DDD.
1475.40 1479.56 "Анатолий Кулаков" У нас DDD почему-то так хорошо выстрелил на прошлой конференции.
1479.56 1487.36 "Анатолий Кулаков" Если кто-то не видел доклад Алексея Мерсона с прошлого Next, то рекомендую, он сейчас уже доступен в паблике.
1487.36 1497.36 "Анатолий Кулаков" Очень хороший доклад по введению, и как раз Константин Густов продолжает это введение, уже натягивая на практические понятные переходы, на практические понятные проекты.
1497.36 1518.20 "Игорь Лабутин" Да, а если вам хочется все-таки обратно чуть-чуть, в том числе вспомнить основы DDD, либо посмотреть, как этот самый DDD соотносится с другим очень популярным книги направлением, а именно распределенными системами, то очень рекомендуем послушать доклад Шона Фармара.
1518.20 1544.40 "Игорь Лабутин" Шон Фармар работает вместе с небезызвестным Уди Даханом над проектом NServiceBus, который является одним из самых популярных при разработке распределенных систем, и он как раз-таки будет рассказывать чуть более обзорный доклад на тему того, как правильно вам структурировать вашу систему, если вы хотите ее строить распределенно, что является сейчас очень популярным.
1544.40 1555.00 "Анатолий Кулаков" Вот, и если мы уже затронули и функциональщину, и наш новый UI, который будет работать везде, здесь в этом аспекте интересный очень доклад будет от Альфонсо Гарсия.
1555.00 1559.72 "Анатолий Кулаков" Этот человек более известен, опять же, в мире функциональщины как автор Fable.
1559.72 1563.04 "Анатолий Кулаков" Fable, это, кстати, классный инструмент.
1563.04 1571.84 "Анатолий Кулаков" Это пулза, которая позволяет вам ваш F#-код конвертить в JavaScript, то есть в такой JavaScript F#-компайлер.
1571.84 1574.40 "Игорь Лабутин" Толя, а зачем нам такое может потребоваться?
1574.40 1581.00 "Игорь Лабутин" Мало того, если я пишу на F#, и это мой любимый функциональный язык, зачем мне JavaScript?
1581.00 1582.80 "Анатолий Кулаков" Затем же, зачем нужен и блазер?
1582.80 1592.32 "Анатолий Кулаков" К сожалению, в этом мире есть такая огромная плохая, нехорошая вещь, как JavaScript, и ни один вменяемый человек на ней писать в собственном разумении не хочет.
1592.32 1597.68 "Анатолий Кулаков" Поэтому и выдумывают всякие блазеры, компайлеры, конвертеры и прочие глупости, чтобы хоть как-то в этом не вымазываться.
1597.68 1602.20 "Анатолий Кулаков" Вот, в принципе, для этого и существует этот инструмент.
1602.20 1607.28 "Анатолий Кулаков" И в отличие от многих других, у него качество довольно хорошее.
1607.28 1609.64 "Анатолий Кулаков" По крайней мере, так поговаривают знатные F#-исты.
1609.64 1613.00 "Анатолий Кулаков" Но разговор будет не про этот инструмент.
1613.00 1621.08 "Анатолий Кулаков" Как бы вы ни хотели, F# на нас сегодня хватит, а разговор Альфонсо будет делать про развитие UI.
1621.08 1650.36 "Анатолий Кулаков" То есть он затронет темы о том, как начинался UI, как он преображался, как появлялись шаблоны BVM, как он прошел все эти WPF, как он отразился на другие платформы и примерно расскажет вам про текущее положение UI-шаблонов, в том числе затронет JavaScript-овые шаблоны, такие как Angular, React, и примерно представит, куда мы идем, то есть что нас ждет в будущем и каким UI должен выглядеть через несколько лет.
1650.36 1654.96 "Анатолий Кулаков" То есть если вы пишете большое интерфейсное приложение, у нас эта тема довольно-таки актуальна.
1654.96 1662.24 "Анатолий Кулаков" То есть как сделать UI, который будет актуален через 10 лет и который будет хотеться поддерживать, и который будет гибкий, красивый, интересный.
1662.24 1670.20 "Анатолий Кулаков" Поэтому такой как исторический экскурс, эксфурс, плюс пройдение в будущее от реального профессионала своего дела, крайне рекомендую этот доклад.
1670.20 1691.32 "Игорь Лабутин" Итого у нас получается, что тема архитектуры рассмотрена с разных углов, и с точки зрения проектирования, скажем так, backend части наших сервисов, API, и со стороны, можно сказать, фронтенда, то есть UI, и общие части тоже рассмотрены.
1691.32 1696.72 "Игорь Лабутин" И Андрей, как, мы тебя убедили, что архитектура нам нужна на конференции?
1696.72 1700.24 "Анатолий Кулаков" Смотри, у нас даже такая интересная часть появилась, как UI-архитектура.
1700.24 1701.24 "Анатолий Кулаков" Кто бы мог подумать?
1701.24 1722.40 "Андрей Акиньшин" Ладно, вы меня, наверное, все-таки убедили, но я думаю, что, возможно, у нас есть небольшие проблемы с позиционированием, потому что, когда я вижу слово архитектура, у меня сразу ассоциация какая-то с, не знаю, дизайн-паттернами и совсем таким, то есть какой-то классической теорией.
1722.40 1744.72 "Андрей Акиньшин" А из того, что я от вас, ребята, услышал, у нас будет больше, во-первых, истории из жизненного опыта от людей, у которых этого опыта действительно очень много, и это всегда приятно такое послушать, как другие люди набивают себе шишки и наступают на грабли там, куда ты мог бы и не наступать в будущем, потому что ты теперь про это знаешь.
1744.72 1746.36 "Андрей Акиньшин" Это одно направление.
1746.36 1768.52 "Андрей Акиньшин" А другое — это общий взгляд на индустрию, на историю индустрии, на то, куда она движется, чтобы понимать свое место в ней и место технологий в ней, чтобы принимать решения о том, какие, например, языки или технологии или UI-решения использовать в будущем в своих проектах.
1768.52 1769.52 "Андрей Акиньшин" Правильно я понял?
1769.52 1770.52 "Анатолий Кулаков" Да, именно так.
1770.52 1779.64 "Анатолий Кулаков" Что-то такое большое, глобальное, пережеванное многолетним опытом, огромными проектами и сжатое в 40-минутный, в часовой доклад.
1779.64 1782.00 "Андрей Акиньшин" Ну ладно, тогда вы меня убедили.
1782.00 1783.00 "Андрей Акиньшин" Посмотрю парочку докладов.
1783.00 1789.92 "Анатолий Кулаков" Вот, но если ты хочешь что-то такое более локальное, более местное, более понятное, то есть еще отличная секция — Best Practice.
1789.92 1792.60 "Анатолий Кулаков" Вот здесь должно быть все понятно, очевидно.
1792.60 1802.64 "Анатолий Кулаков" То есть это такие рекомендации, которым те же самые архитекторы, которые набили себе шишки, но они уже выработали конкретные инструменты, конкретные рекомендации, которые, в принципе, всегда работают.
1802.64 1813.84 "Анатолий Кулаков" Вот, например, один из самых интересных для меня докладов — это Матиас Кох, потому что та билд-система, которой мы пользуемся сейчас, та система, с помощью которой мы собираем проекты, она, в принципе, ужасна.
1813.84 1828.68 "Анатолий Кулаков" И в большинстве таких, опять же, больших интерфейс-проектов, которые я видел, у меня, к сожалению, очень узкая выборка только по интерфейс-проектам, вот, в большинстве таких проектов люди начинают писать какие-то свои извращения на батниках, на обычном КМД.
1828.68 1834.52 "Анатолий Кулаков" И это превращается в стократно больше ад, чем обычные стандартные скрипты на MS-билде.
1834.52 1840.64 "Анатолий Кулаков" И люди, наконец-то, додумались, что можно по правде использовать не только MS-билд, не только бат, ну и что-то еще.
1840.64 1844.96 "Анатолий Кулаков" Андрей, скажи, а вот, если не секрет, у вас в райдере вы как собираете проект?
1844.96 1848.12 "Анатолий Кулаков" У вас тоже есть какие-то страшные батнички или что-нибудь в этом духе?
1848.12 1851.92 "Андрей Акиньшин" Ой, у нас все совсем, знаешь, по-энтерпрайзному.
1851.92 1863.80 "Андрей Акиньшин" У нас не чисто .NET проект, у нас половина проекта на .NET, а половина на Java, потому что райдер держится на базе IntelJD платформы.
1863.80 1875.76 "Андрей Акиньшин" Вот, поэтому у нас вдобавок к MS-билду у нас есть Gradle, у нас, по-моему, есть всякие там Mavin, Antui, еще очень страшные Java технологии.
1875.76 1893.92 "Андрей Акиньшин" Вот, у нас тоже есть всякие батнички, причем у нас команда работает сразу на всех трех операционных системах на винде или на ксимаке, поэтому у нас умельцы наши научились делать такие CMD-файлы, которые могут работать как Shell.
1893.92 1905.16 "Андрей Акиньшин" Ну, то есть, у тебя одна точка входа, ты хоть на винде, хоть на Nix-ах ее запускаешь, и она уже вызывает Gradle, она вызывает MS-билды, все как-то это собирается.
1905.16 1920.36 "Андрей Акиньшин" Не знаю, у нас есть специально отдельно несколько выделенных человек, которые занимаются нашим билдом, и это страшно, я иногда сочувствую этим людям, но в целом оно работает и работает довольно хорошо.
1920.36 1922.04 "Андрей Акиньшин" Да, до тех пор, пока не ломается.
1922.04 1925.68 "Андрей Акиньшин" Ну да, потом, ночью, когда сломается.
1925.68 1927.44 "Анатолий Кулаков" Игорь, а вы в основном как билдите?
1927.44 1931.08 "Анатолий Кулаков" Я знаю, что у тебя тоже есть много больших проектов.
1931.08 1935.24 "Игорь Лабутин" У нас, мы к счастью, практически ушли от батников, у нас
1935.24 1947.52 None в основном это огромные MS-билд скрипты, кастомные, плюс мы как обычный нормальный Nespress всегда отстаем, мы начали осваивать PowerShell.
1947.52 1955.80 "Игорь Лабутин" И PowerShell это гораздо лучше, чем батники, это по крайней мере там есть какая-никакая, это не называть пока IDE, но уже хоть что-то.
1955.80 1971.88 "Игорь Лабутин" Но, конечно, это далеко до правильных компилируемых языков, и вот тут как раз-таки Матиас в докладе будет рассказывать, что на самом деле все это можно писать не только на PowerShell, не только на MS-билде, но и на C#.
1971.88 1991.28 "Игорь Лабутин" И получать, собственно, все прелести C#, которые вы обычно используете, то есть это и Type Safety, и Code Completion, и в принципе вы можете рефакторить ваши билд скрипты в поддержке всех прелестей, рефакторинга студии и всевозможных плагинов или альтернативных IDE.
1991.28 2001.16 "Игорь Лабутин" И в том числе очень большой бенефит по сравнению с тем же MS-билдом или с PowerShell это отладка, потому что отладка MS-билда это страшно.
2001.16 2004.60 "Игорь Лабутин" У нас, кстати, про это было докладано в тексте какое-то время назад.
2004.60 2008.36 "Игорь Лабутин" Лучше послушайте про то, как это делать на C#, это гораздо приятнее.
2008.36 2024.48 "Анатолий Кулаков" Да, если вам вдруг приходит в голову такое сочетание как "билд скрипты на C# - это кейк", то я специально ради того, чтобы быть более объективным, сел и написал несколько билд скриптов на кейке для своих настоящих рабочих проектов.
2024.48 2035.84 "Анатолий Кулаков" Я вам должен сказать, что это какой-то позор, потому что я по-моему... по-моему он уже больше пяти лет существует, у него нет никакого стабильного интеллисенса, у него нет никакого рефакторинга, его DSL просто отвратителен.
2035.84 2041.96 "Анатолий Кулаков" Чтобы понять каждую строчку мне приходилось лазить в документацию, потому что никаких других подсказок нет.
2041.96 2044.64 "Анатолий Кулаков" Я себя чувствовал каким-то человеком из каменного века.
2044.64 2052.88 "Анатолий Кулаков" Как бы это сейчас нигде не рекламировалось маркетологами как огромная кодовая база, там количество плагинов, миллионы проектов, которые на нем уже пишут.
2052.88 2058.56 "Анатолий Кулаков" Честно говоря, меня абсолютно не впечатлил, я не понимаю всего того хайпа, который есть вокруг кейка.
2058.56 2074.92 "Анатолий Кулаков" А про Матиаса, про его Nuke, можно сказать, что это 100% поддержка и всех ваших любым рефакторингов, и отладки, и компиляции, и всего то, что мы как раз-таки ждем от инструмента на билдскриптах, которые написаны на C#.
2074.92 2076.44 "Анатолий Кулаков" Мы их именно для этого и любили.
2076.44 2081.80 "Анатолий Кулаков" Если бы мы хотели писать без интеллисенции и без прочей глупости, мы бы до сих пор продолжали делать это на батниках.
2081.80 2083.96 "Анатолий Кулаков" Это просто о наболевшем.
2083.96 2086.16 "Анатолий Кулаков" Ну, давайте пробежимся по другим темам.
2086.16 2088.00 "Анатолий Кулаков" Что у нас еще в категории Best Practice?
2088.00 2093.20 "Игорь Лабутин" Еще у нас есть такой прекрасный доклад как Health Checks, Integrating Health Checks.
2093.20 2114.04 "Игорь Лабутин" Если вы помните, мы обсуждали тему с хаос-тестированием, и одна из основных проблем, когда вы, допустим, тестируете таким образом ваше приложение, либо даже просто оно живет в продакшене, это то, что надо вам, как разработчикам, как тем, кто поддерживает приложение, понимать, оно вообще живо или не живо.
2114.04 2116.00 "Игорь Лабутин" Обслуживает оно все еще пользователи или нет.
2116.00 2120.40 "Игорь Лабутин" И желательно это делать чуть более оперативно, чем об этом узнают сами пользователи.
2120.40 2126.12 "Андрей Акиньшин" Слушай, Игорь, ну вот у нас просто много всяких внутренних тоже сервисов.
2126.12 2137.96 "Андрей Акиньшин" Обычно у всех есть Health Checks, и это один метод, который возвращает, окей, ты там дергаешь за нужный уровень, и тебе говорят, что все хорошо.
2137.96 2140.08 "Андрей Акиньшин" Зачем про это час рассказывать?
2140.08 2151.24 "Игорь Лабутин" Это действительно простой вариант, и такой простой вариант даже встроен в, если я не ошибаюсь, в какой-то из последних DotNet Core, в 2.1, если я помню, он появился.
2151.24 2170.36 "Игорь Лабутин" Но этот подход требует существования некоего внешнего сервера, который по таймеру или еще по каким-то внешним событиям будет опрашивать все ваши системы и выяснять, нет ли что-то где-то, а после этого, допустим, посылать письма или как-то обновлять дешбарды.
2170.36 2174.28 "Игорь Лабутин" Во-первых, можно сделать обратную систему.
2174.28 2180.16 "Игорь Лабутин" Tool - это хорошо, когда вас опрашивает, но лучше, когда приложение само говорит, что в нем что-то не то.
2180.16 2203.60 "Игорь Лабутин" И тогда можно попытаться сделать такую штуку, и Алекс из SunPrite будет рассказывать, что встроенные селф-чеки в ваше приложение смогут пушить информацию в ваши внешние системы, например, в то, где вы храните метрики, например, Prometheus, и тогда у вас будет видна возможность видеть на дешбардах, например, как у вас все жило.
2203.60 2215.56 "Игорь Лабутин" То есть к моменту, когда вам сказали, что все плохо, даже если это делается через пул, вы сможете посмотреть на дешбарды и посмотреть историю того, как это происходило, и соотнести, и скоррелировать это с другими метриками.
2215.56 2226.44 "Игорь Лабутин" С другой стороны, одиночный селф-чек, одиночный end-point на тему живо или нет - это часто бывает недостаточно в сложных системах.
2226.44 2232.00 "Игорь Лабутин" Можно по-разному воспринимать, что такое живо приложение или нет.
2232.00 2241.84 "Игорь Лабутин" Возможно, у вас уже готов API, но не поднялись какие-то сервисы, от которых вы зависите, и тогда, несмотря на то, что ваше API говорит, что оно готово, оно еще на самом деле не готово.
2241.84 2244.40 "Игорь Лабутин" Возможно, только его половинка готова.
2244.40 2251.20 "Игорь Лабутин" То есть, если часть вашего сервиса зависит от баз данных, а часть нет, вы можете каким-то образом дистанцировать эти health-чеки.
2251.20 2263.60 "Игорь Лабутин" И Алекс как раз будет рассказывать, как их можно параметризовывать, как их можно раздавать им разный скоп, как это все архитектурировать так, чтобы извлекать максимально полезную информацию.
2263.60 2280.44 "Анатолий Кулаков" А еще универсализация health-чеков в ISP-фреймворке дала такую интересную штуку, что теперь, благодаря тому, что есть какой-то стандарт, понятный, как опрашивать .NET-приложения, такие системы, как Kubernetes, Docker и прочие глупости научились это делать автоматически.
2280.44 2292.72 "Анатолий Кулаков" То есть, они вполне могут понять, что если вдруг у вас приложение как-то позбавило, или у него недоступны какие-то сетевые ресурсы, его нужно где-то переподнять или выделить ему больше каких-то ресурсов, больше процессоров, больше памяти.
2292.72 2297.80 "Анатолий Кулаков" То есть, уже мы начинаем говорить об интеграции ваших health-чеков с какой-то внешней системы.
2297.80 2300.60 "Анатолий Кулаков" Это тоже открывает многие большие интересные ворота.
2300.60 2308.60 "Игорь Лабутин" Кроме того, мы уже упомянули Kubernetes, Docker и прочие атрибуты распределенных систем.
2308.60 2319.12 "Игорь Лабутин" И здесь хочется поговорить про такой доклад Эдвина Ван Вика, который будет рассказывать про Service Mesh.
2319.12 2333.24 "Игорь Лабутин" Для тех, кто этого не знает, это, по сути, некоторый слой, в котором прячется вся сетевая часть вашей инфраструктуры по взаимодействию между вашими микросервисами или просто сервисами.
2333.24 2338.08 "Игорь Лабутин" И как на примере такого Service Mesh как Istio.
2338.08 2360.64 "Игорь Лабутин" И у меня есть вопрос, а зачем нам такая сложная вещь, а она выглядит сложной, если у нас есть наш обычный HTTP-клайнт, который плюс, допустим, библиотека Polly, и вот у вас есть и recovery, и какие-то возможности файловера, и в общем-то, что еще нужно?
2360.64 2373.76 "Анатолий Кулаков" А я тебе могу ответить, потому что в этой микросервисной архитектуре, которую нам сейчас из каждого тюга вещают, довольно-таки сложно написать настоящую систему, которая хорошо и взаимодействует.
2373.76 2380.88 "Анатолий Кулаков" Ну, сам посуди, тебе, чтобы один свой сервис написать, тебе нужно возложить на него массу какой-то инфраструктурной ответственности.
2380.88 2410.96 "Анатолий Кулаков" Например, Service Discovery, то есть найти, куда ему коннектируется, где находится его база данных, потому что она поднимается динамически, где находятся сервисы, от которых он должен получать сообщения, где находятся сервисы, к которым нужно ходить по РПЦ, потом какое-нибудь восстановление от ошибок, потому что мы поднимаемся на облаках, облака у нас непредсказуемо могут перестать работать, у них могут кончиться ресурсы, моды могут апдейтиться, убиваться, и ты должен правильно уметь все это обрабатывать.
2410.96 2431.72 "Анатолий Кулаков" Те же самые метрики, распределенная трассировка, локирование, слежение за системой, ну и в конце концов такие интересные вещи, как AB тестирование или постепенно накатывание релизов или контролирование доступа к твоему сервису, например, аутентификацию, свой аутентификация тебе приходит, придется прилепливать каждый раз.
2431.72 2438.40 "Анатолий Кулаков" То есть набегает такой целый огромный большой проект, который должен включаться внутрь каждого твоего микросервиса.
2438.40 2445.60 "Анатолий Кулаков" И логично вполне выглядит взять и вынести этот огромный проект куда-нибудь в сторонку и назвать его отдельным сервисом.
2445.60 2449.16 "Анатолий Кулаков" То есть сервис, который гарантирует тебе хорошую стабильную понятную инфраструктуру.
2449.16 2452.92 "Анатолий Кулаков" Вот в принципе этим терминами описывается сервис Mesh.
2452.92 2453.92 "Анатолий Кулаков" Имеет смысл?
2453.92 2470.60 "Игорь Лабутин" Да, имеет смысл, но звучит как будто это применимо только для каких-то больших enterprise проектов, ты упомянул столько разных вещей и метрики, и мониторинг, и сервис discovery, и туда же, наверное, какой-то load balancing можно включить и всего-всего-всего.
2470.60 2488.56 "Игорь Лабутин" Вопрос тогда, нужно ли мне все это, если я пилю какой-то свой небольшой проектик, скажем, из двух-трех микросервисов, которые как-то между собой общаются, нужно ли мне тащить это все большое или есть что-нибудь попроще, что мне можно взять и сделать?
2488.56 2499.72 "Анатолий Кулаков" Естественно, есть попроще, потому что сервис Mesh это такая абстракция, которая объединяет много-много разных мелких имплементаций и позволяет тебе вклиниваться, например, в тот же самый Kubernetes кластер.
2499.72 2506.08 "Анатолий Кулаков" Если тебе всех этих больших интерпризных загонов не нужно, ты можешь взять конкретную имплементацию.
2506.08 2513.12 "Анатолий Кулаков" Например, для сервис discovery можно использовать консул, который является одной из имплементаций в Istio.
2513.12 2518.80 "Анатолий Кулаков" Можно взять какой-нибудь другой key value store, который там есть.
2518.80 2522.56 "Анатолий Кулаков" То есть можно понадергать таких маленьких компонентов и выбрать только то, что тебе нужно.
2522.56 2529.96 "Анатолий Кулаков" Кстати, еще есть интересный проект, который написан полностью на C#, называется Ocelot.
2529.96 2546.84 "Анатолий Кулаков" Ocelot это что-то немножко похожее на предыдущую тему, это API Gateway, который тоже может решать много таких вот интересных проблем, как load balancing, авторизация, поддержка HTTPS соединений и прочее, чтобы ваше приложение на этом не напрягалось.
2546.84 2552.56 "Анатолий Кулаков" И про этот проект у нас будет отдельный доклад, его будет читать Роберто Фреато.
2552.56 2560.16 "Анатолий Кулаков" И поэтому, если вам интересно, проект действительно классный, и я в него даже немножко собираюсь поконтрибьюдить.
2560.16 2568.72 "Анатолий Кулаков" Если вам интересна эта тема, интересен инфраструктурный уровень и API Gateway на C#, обязательно посмотрите на Ocelot и обязательно сходите на доклад.
2568.72 2569.72 "Игорь Лабутин" Супер.
2569.72 2572.72 "Игорь Лабутин" А вот ты так и сказал слова, инфраструктурный уровень.
2572.72 2583.04 "Игорь Лабутин" И с одной стороны, это здорово, что мы можем так сконтролировать, есть такие полезные библиотеки для инфраструктурного уровня.
2583.04 2609.44 "Игорь Лабутин" А с другой стороны, у меня есть какое-то такое ощущение, что тенденции разработки ведут к тому, что мы все больше и больше абстрагируемся от всяких инфраструктурных вещей и уходим, опять же, как ты сказал, все больше в облака в облака и предельной точкой на данный момент, как мне кажется, являются всякие Azure Functions и прочие технологии, которые можно объединить одним словом, пожалуй, серверлесс.
2609.44 2615.84 "Анатолий Кулаков" Да, есть такое мифическое непонятное понятие, серверлесс, что ты где-то запускаешь, оно как-то работает.
2615.84 2619.68 "Анатолий Кулаков" А ты вообще понимаешь, как оно работает и где, чтобы более-менее предсказуемо с этим общаться?
2619.68 2632.28 "Игорь Лабутин" Ну, серверлесс, это же без сервера, то есть сервер не мой, он где-то там работает и мне гарантирует, что моя функция запустится, вот как только пришел запрос, мне вот она сразу создается и запускается.
2632.28 2635.80 "Игорь Лабутин" Пришло 20 запросов, 20 функций, 1000 запросов, 1000 функций,
2635.80 2646.92 "Анатолий Кулаков" очень удобно, мне кажется. Считать неплохо, а действительно она создается сразу, например, мне там должен ответ быть в пределах 20 миллисекунд, я точно могу рассчитывать, что она за 20 миллисекунд мне ответит, такая функция?
2646.92 2692.56 "Игорь Лабутин" Ну, если немножко подумать, то, конечно же, правда состоит в том, что нет, или не всегда да, если быть еще более точным, и как раз таки про то, когда да и когда нет, нам расскажет в докладе серверлесс под капотом Михаил Шилков, который является одним из, наверное, сейчас ведущих исследователей того, как ведут себя различные клауд-провайдеры, касательно конкретно серверлесс-технологий, и про то, как происходит прогрев, каким образом вам масштабируют разные провайдеры, разные ваши нагрузки, и как вообще правильно пользоваться клауд-провайдерами, если вам нужно отзывчивое приложение, которое, допустим, отвечает за гарантированные 20 миллисекунд.
2692.56 2695.48 "Анатолий Кулаков" То есть это ты протоклад серверлесс под капотом,
2695.48 2722.32 "Игорь Лабутин" да? Да, именно так, потому что серверлесс, как известно, сервер имеет, и вот как на самом деле взаимодействовать с этими серверами, как масштабируемся, оказывается, что каждый провайдер делает это по-своему, то есть Amazon по-своему, Azure по-своему, Google по третьим способам, и у всех все по-разному, и в зависимости от того, какие у вас есть требования к вашему приложению, возможно, это сильно повлияет на то, какого провайдера вы выберете.
2722.32 2729.60 "Анатолий Кулаков" Ой, это интересно, то есть не как писать эти сервис-лесс-программы, а именно как они работают по-настоящему у разных клаудных провайдеров.
2729.60 2733.20 "Анатолий Кулаков" Какие они вам гарантии способны выдать и на что можно рассчитывать?
2733.20 2743.96 "Игорь Лабутин" Ну да, рассчитывать мы можем только на SLA, но даже в рамках этого SLA они могут вести себя чуть-чуть по-разному, поэтому приходите, посмотрите их на самом деле, они себя ведут, будет интересно.
2743.96 2749.08 "Анатолий Кулаков" Вот, и наконец-то самое знаменитое имя в этой категории это Дмитрий Иванов.
2749.08 2751.28 "Анатолий Кулаков" Андрей, ответь нам за JetBrains.
2751.28 2755.52 "Анатолий Кулаков" Нам сильно жалуется, что почему-то JetBrains не участвует в конференциях .next.
2755.52 2757.44 "Анатолий Кулаков" Им что, неужели нечего рассказать?
2757.44 2766.60 "Андрей Акиньшин" Слушай, ну вот действительно у нас был небольшой творческий кризис, но в этот раз у нас аж 4 докладчика JetBrains.
2766.60 2770.08 "Андрей Акиньшин" И наверное у Димы один из самых клёвых докладов.
2770.08 2771.32 "Андрей Акиньшин" Я вам расскажу историю.
2771.32 2777.44 "Андрей Акиньшин" У меня Дима просто в среднем кабинете сидит, и вот он сейчас активно доделывает доклад.
2777.44 2784.04 "Андрей Акиньшин" На днях он ко мне заходит и задает вопросик на тему синхронного программирования.
2784.04 2786.16 "Андрей Акиньшин" Не буду говорить какой, чтобы не спойлили.
2786.16 2787.16 "Андрей Акиньшин" Уфот.
2787.16 2793.20 "Андрей Акиньшин" А я сходу ответить не смог, и честно ему говорю, что я многократно сталкивался с этой проблемой.
2793.20 2798.16 "Андрей Акиньшин" Я каждый раз гуглю, я почему-то не могу запомнить, как оно действительно работает.
2798.16 2801.16 "Андрей Акиньшин" Я каждый раз гуглю и нахожу ответ.
2801.16 2806.44 "Андрей Акиньшин" Но Дима говорит, хорошо, посиди, погугли, я подожду, я никуда не тороплюсь.
2806.44 2808.64 "Андрей Акиньшин" Я посидел, погуглил, почитал.
2808.64 2810.80 "Андрей Акиньшин" Через несколько минут выдал ему ответ.
2810.80 2813.08 "Андрей Акиньшин" И ответ оказался неправильным.
2813.08 2827.84 "Андрей Акиньшин" И оказалось, что в топе гугла, во всех 5-6 ссылок я перебрал, там везде написаны не best practices, там как раз написаны вредные советы, как не очень хорошо надо делать.
2827.84 2834.12 "Андрей Акиньшин" И некоторые люди, которые их пишут, они сами не до конца понимают, как работает многопоточность.
2834.12 2837.24 "Андрей Акиньшин" И Дима сейчас у нас техник в команде райдера.
2837.24 2851.68 "Андрей Акиньшин" Он очень много уделяет времени и формированию нашей асинхронной инфраструктуры и разгребанию других косяков, которые написали девелоперы и из-за которых у нас всё втыкает.
2851.68 2854.28 "Андрей Акиньшин" Причем это довольно сложная вещь.
2854.28 2861.20 "Андрей Акиньшин" Это не жюниор, это сеньоры с многолетним опытом, с пониманием разных внутренних вещей.
2861.20 2870.72 "Андрей Акиньшин" И просто из-за сложности асинхронных систем и отсутствия вот этих best practices они делают ошибки.
2870.72 2875.04 "Андрей Акиньшин" Не по тупости, а просто из-за того, что мир сложно устроен.
2875.04 2889.64 "Андрей Акиньшин" И Дима как раз собирает воедино все такие best practices, самые лучшие способы, как не выстрелить себе в ногу, как не поймать дедлок и как вообще писать многопоточный код.
2889.64 2896.64 "Андрей Акиньшин" Поэтому если вы так или иначе сталкиваетесь с потоками, то крайне рекомендую доклад Димы.
2896.64 2903.84 "Анатолий Кулаков" А правильно понимаю, что если вы хотите всем утверждать, что вы Андрей Акиньшин, вам тоже нужно посетить этот доклад.
2903.84 2909.64 "Андрей Акиньшин" Ну, если вы хотите утверждать, что вы у меня Андрей Акиньшин, вам не обязательно посетить этот доклад.
2909.64 2911.56 "Андрей Акиньшин" Вы это можете просто так утверждать.
2911.56 2917.24 "Андрей Акиньшин" Потому что я далеко не все знаю и много с чем не работаю.
2917.24 2924.52 "Андрей Акиньшин" Многопоточность это как раз то направление, с которым я профессионально не занимаюсь.
2924.52 2938.96 "Андрей Акиньшин" То есть я пишу многопоточный код, я умею расставлять дедлоки, но каких-то глубоких познаний о недрах многопоточности в дотнете у меня нет.
2938.96 2962.48 "Андрей Акиньшин" У меня такое ощущение, что в такой ситуации очень многие дотнет-разработчики, что как-то там создают люди потоки, как-то пишут асинковейты, но нет понимания, что оно не упадет в дедлок или не рассыпется все, и понятие, из-за чего синхронизация контекста какие-то не такие оказались после выхода из АВИИ.
2962.48 2976.00 "Андрей Акиньшин" А Дима, без внедрения глубоко в теорию и разбор Интернала в фронтайм, он просто расскажет, как надо делать, чтобы все было хорошо.
2976.00 2981.20 "Андрей Акиньшин" Это не какие-то там сверхумные знания, это просто такая житейская мудрость.
2981.20 2982.48 "Анатолий Кулаков" Ну, звучит отлично.
2982.48 2987.04 "Анатолий Кулаков" А если мне все-таки хочется Интернала из сверх мудрых знаний, есть что-нибудь?
2987.04 2999.16 "Андрей Акиньшин" Слушайте, да, у нас есть очень много докладов про Интернал, у нас, к сожалению, потихоньку заканчивается время, отведенное на наш подкаст, поэтому давайте кратенько поговорим.
2999.16 3007.08 "Андрей Акиньшин" Я могу похайлайтить свой любимый докладик, это про кастомный дотнет GSC от Конрада Кокоса.
3007.08 3016.72 "Андрей Акиньшин" Кто не знает Конрада, он у нас на прошлом dotnext уже выступал, сделал просто отличнейший доклад тоже на тему GSC.
3016.72 3021.76 "Андрей Акиньшин" С тех пор вышла его книжка про dotnet memory management.
3021.76 3035.68 "Андрей Акиньшин" Тоже всем настоятельно рекомендую книжку, я ее сам пытаюсь уже давно освоить, но я ее читаю больше не как книжку, а как энциклопедию, просто вычитывая отдельные главы, в которых у меня есть пробелы.
3035.68 3037.16 "Андрей Акиньшин" Очень здорово.
3037.16 3046.00 "Анатолий Кулаков" У меня просто огромное количество друзей приобрело эту книгу, все читают, я ни одного не слышал, что он пока еще дочитал ее, но читают просто повально все.
3046.00 3047.28 "Анатолий Кулаков" Я думаю, это новая Донцова у нас будет.
3047.28 3060.40 "Андрей Акиньшин" Слушай, ну потому что это не книжка там плохая, плохо написано как-то, что ее сложно дочитать, это тема такая, memory management, она очень сложная, ее тяжело осознать.
3060.40 3068.40 "Андрей Акиньшин" И вот чем хороший доклад, то что Конрад простыми словами тоже на пальцах многие вещи покажет, разъяснит.
3068.40 3089.72 "Андрей Акиньшин" И в Дотнете, в отличие от Джавы, в Дотнете исторически GC прибит гвоздями к рантайму, GC у нас один, все, кому нужно, знают о его особенностях, типа там что у нас есть пороговое значение в 85 тысяч байт, после которого там объекты начинают попадать в лох.
3089.72 3097.68 "Андрей Акиньшин" Вот, какое-то такое незыблемое знание, которое все активно используют в своих программах для хаков.
3097.68 3099.00 "Андрей Акиньшин" А также на собеседованиях.
3099.00 3100.88 "Андрей Акиньшин" Да, также на собеседованиях.
3100.88 3107.08 "Андрей Акиньшин" У нас, кстати, в райдере, в эшарпере есть несколько хаков, чтобы обойти проблему с большой кучей.
3107.08 3115.40 "Андрей Акиньшин" А в третьем Дотнет Коре, там во-первых ручечку, по-моему, сделали, чтобы можно было менять это число на любое, какое тебе нравится.
3115.40 3127.20 "Андрей Акиньшин" А Конрад пойдет дальше, он просто расскажет, как выкинуть текущий GC, если он вас не устраивает, и откнуть свой, который будет, например, на ваших ворклаудах как-то лучше работать.
3127.20 3132.24 "Андрей Акиньшин" В общем, сходите на доклад Конрада.
3132.24 3139.00 "Анатолий Кулаков" Андрей, а ты не знаешь, уже начали появляться какие-нибудь кастомные GC, которые реально не для демки сделаны, а как в продакшене можно применить?
3139.00 3140.32 "Анатолий Кулаков" Что-нибудь полезное уже есть?
3140.32 3148.08 "Андрей Акиньшин" Ну вот как раз от Конрада есть собственный GC, который называется Zero GC.
3148.08 3152.60 "Андрей Акиньшин" Он умеет лоцировать объекты, но никогда их не удаляет.
3152.60 3162.64 "Андрей Акиньшин" Очень круто, если у вас есть очень много оперативной памяти, и вы хотите запустить программку, которая один раз что-то сделает, и сразу умрет.
3162.64 3165.48 "Андрей Акиньшин" И не хотите тратиться на сборку мусора.
3165.48 3168.28 "Андрей Акиньшин" Вот отличный пример, отличный GC.
3168.28 3170.92 "Андрей Акиньшин" И имплементация не очень хитрая.
3170.92 3175.28 "Анатолий Кулаков" Ну, начало хорошее, будем ждать каких-нибудь новых имплементаций интересных.
3175.28 3192.68 "Игорь Лабутин" Да, звучит это все здорово, но что-то мне подсказывает, что все-таки большинство разработчиков не каждый день будут писать новый гармоничный электро, а вот с многопоточностью и асинхронностью в современном интенсе сталкиваются многие, и в основном даже больше с асинхронностью.
3192.68 3200.32 "Игорь Лабутин" Поэтому у нас есть даже два доклада про непосредственно проблемы и трудности асинхронности.
3200.32 3203.56 "Игорь Лабутин" Один - это отладка.
3203.56 3210.08 "Игорь Лабутин" Написать async/await легко, гораздо сложнее понять, что пошло не так, если что-то идет не так.
3210.08 3221.32 "Игорь Лабутин" И Кевин Госсе и Кристоф Нассаре вам прекрасно на отличных примерах расскажут, а как же отлаживать async/await и код с ними.
3221.32 3225.76 "Игорь Лабутин" И не обойдется без достаточного заковыривания инструментов, например, в режиме студии.
3225.76 3234.84 "Игорь Лабутин" Но, как вы можете догадаться, Кевин и Кристоф не могут отойтись без виндбг, и с помощью него мы тоже будем отслаживать async/await.
3234.84 3242.80 "Игорь Лабутин" Кроме того, поскольку мы сидим в синхронном мире, то в C# 8 появились такие штуки, как синхронные итераторы.
3242.80 3246.28 "Игорь Лабутин" И что это такое, нам расскажет Андрей Карпов.
3246.28 3250.04 "Игорь Лабутин" Не знаю, хорошо ли это, что у нас столько асинхронности, но видимо без этого никуда.
3250.04 3256.12 "Андрей Акиньшин" Слушай, ну Карпов немножко в другом ракурсе расскажет про это.
3256.12 3259.20 "Андрей Акиньшин" Да, кстати, Андрей тоже работает у нас в JetBrains.
3259.20 3264.76 "Андрей Акиньшин" И у нас очень хороший получается блок вообще просто про 8 C#.
3264.76 3268.56 "Андрей Акиньшин" Нестерук будет давать у нас обзорный доклад про 8 C#.
3268.56 3280.28 "Андрей Акиньшин" А Андрей Карпов, в лон, расскажет про немножко изнутри команды, которые занимаются поддержкой C# 8, в частности, про async/await.
3280.28 3296.48 "Андрей Акиньшин" А у нас еще, кстати говоря, у нас есть Андрей Дятлов, который расскажет про cross-процедурный анализ и какие у него есть особенности по работе с локальными функциями в 8 C#.
3296.48 3300.16 "Андрей Акиньшин" Тоже довольно такой уникальный опыт.
3300.16 3308.12 "Андрей Акиньшин" И вот я считаю, что все эти три доклада вместе позволяют сформировать более правильное впечатление на 8 C#.
3308.12 3323.52 "Андрей Акиньшин" То есть это не просто сет фич, но это еще и очень много уровней под ним, как с точки зрения компилятора, так и с точки зрения IDE, которые этот компилятор должны поддерживать.
3323.52 3326.72 "Андрей Акиньшин" Это, кстати, непростая и очень смешная задача.
3326.72 3331.12 "Андрей Акиньшин" Нужно поддержать C# 8 так, как это делает розлинг.
3331.12 3338.72 "Андрей Акиньшин" Причем можно было бы подумать, что нужно реализовать спецификации 8 C#, которые в каком-то виде есть, но нет.
3338.72 3341.64 "Андрей Акиньшин" Право не в спецификации, а в компилятор.
3341.64 3349.60 "Андрей Акиньшин" Поэтому им нужно воспроизвести поведение компилятора с точностью до всех багов, которые в этом компиляторе есть.
3349.60 3352.72 "Андрей Акиньшин" Скажу вам по секрету, багов там довольно много.
3352.72 3358.52 "Андрей Акиньшин" И вот все это вместе послушать, я считаю, что это очень полезно для общего развития.
3358.52 3369.88 "Андрей Акиньшин" Так что доклад Карпов больше даже не про синхронность, а про еще один штрешок в сторону 8 C#, чтобы лучше понимать, что там происходит.
3369.88 3370.88 "Андрей Акиньшин" Про жизнь.
3370.88 3371.88 "Андрей Акиньшин" Про жизнь, да.
3371.88 3378.60 "Анатолий Кулаков" Еще один интересный доклад про жизнь есть, это когда вам приходится скрещивать код на C+ и C#.
3378.60 3382.52 "Анатолий Кулаков" Много у нас уже про это было докладов, много про это есть подходов.
3382.52 3388.80 "Анатолий Кулаков" И один из интересных, может быть, новых подходов, как раз таки расскажет Никита Цуканов.
3388.80 3399.28 "Анатолий Кулаков" Подходов, которые они используют в Павалоне для того, чтобы сделать его абсолютно кроссплатформенную, чтобы работать абсолютно везде, при этом на C# и с несколькими интеропами на плюсах.
3399.28 3403.24 "Анатолий Кулаков" Тоже вкратце упомянем, так как времени у нас мало, кто у нас еще есть в этой категории?
3403.24 3411.72 "Игорь Лабутин" Еще у нас есть Евгений Пешков, которого вы можете узнать по прошлым докладам, по прошлым конференциям в dotnext.
3411.72 3418.24 "Игорь Лабутин" И он расскажет очередные истории про то, что бывает, когда вы пишете многопоточный код в дотнете.
3418.24 3430.40 "Игорь Лабутин" Как известно, если вам не хватает производительности, вы делаете код многопоточным, и тогда пока один поток занимается каким-нибудь I/O, вводом-выводом, другой поток будет занимать процессор, и все будет хорошо.
3430.40 3439.08 "Игорь Лабутин" Но на самом деле не так, все будет гораздо сложнее, и что бывает, если вы неправильно используете его в многопоточности, нам Евгений расскажет.
3439.08 3440.80 "Игорь Лабутин" Будет точно интересно.
3440.80 3444.68 "Игорь Лабутин" А кроме этого есть Павел Йозефович, он у нас не первый
3444.68 3446.68 "Андрей Акиньшин" раз. Нет, не первый.
3446.68 3453.32 "Андрей Акиньшин" Он в прошлом dotnext выступал, рассказывал по-моему про винтабг, у него тоже какой-то доклад был, если не ошибаюсь.
3453.32 3456.84 "Игорь Лабутин" Вот в этот раз мы продолжим.
3456.84 3463.72 "Игорь Лабутин" Павел вообще является знатоком, очень большим знатоком внутренности Windows.
3463.72 3487.60 "Игорь Лабутин" Прямо сейчас он пишет книжку про то, как писать драйвера под Windows, и поэтому неудивительно, что его доклад этот достаточно низкоуровневую штуку, а именно как профайлити отлаживать ваш код, используя вентрейсинг в Windows, который является самым низкоуровневым доступным для пользователя узкого кода методом проводить дрейсировку ваших приложений.
3487.60 3491.04 "Игорь Лабутин" И мы более подробно узнаем, как это можно делать, как вы можете использовать.
3491.04 3495.60 "Анатолий Кулаков" А про синхронные многопоточные сценарии, их как-то можно было дебажить?
3495.60 3507.44 "Игорь Лабутин" Да, и про них, как я говорил выше, Кевин и Кристоф нам точно расскажут, и мы посмотрим на много-много разных тулов и способов, и сценариев, как бы их отладить.
3507.44 3514.08 "Анатолий Кулаков" Я смотрю на все эти имена и вижу, что здесь очень много спикеров, которые брали очень большие топы на нашей конференции.
3514.08 3518.76 "Анатолий Кулаков" Там Конрад Кокоса, Пешков, Цуканов, Карпов, Госсе, Нассаре, Йозефович.
3518.76 3521.68 "Анатолий Кулаков" То есть, блог просто пестрит за рок-звездами.
3521.68 3522.68 "Андрей Акиньшин" Это правда.
3522.68 3527.44 "Андрей Акиньшин" Но они не просто так рок-звезды, они действительно делают хорошие доклады.
3527.44 3532.16 "Андрей Акиньшин" Я, например, с удовольствием пойду на доклад про отладку синхронного кода.
3532.16 3545.44 "Андрей Акиньшин" Обычно логами дебажа просто наставить побольше прайтлайнов перед каждым асинкавейтом и потом по логам разбираться, что там происходит.
3545.44 3553.04 "Андрей Акиньшин" С отладкой всегда как-то это тяжелее, причем тяжелее именно потому, что не хватает немножко инструмента.
3553.04 3559.52 "Андрей Акиньшин" Если меня научат через виндбг нормально со всем этим разбираться, я буду очень рад.
3559.52 3563.52 "Анатолий Кулаков" Да, тема действительно очень актуальная, тем более в нашем усложненном мире, в усложненном языке.
3563.52 3569.56 "Анатолий Кулаков" Просто я тоже больше чем логи не могу придумать, что там можно сделать.
3569.56 3571.12 "Анатолий Кулаков" Ну что, побежим дальше.
3571.12 3580.44 "Анатолий Кулаков" Вот, у нас не остался без внимания тоже один из спикеров, который в прошлом году взял нас первое место или в позапрошлом году.
3580.44 3581.76 "Анатолий Кулаков" Я говорю про Стэна Драпкина.
3581.76 3582.76 "Андрей Акиньшин" Никто не помнит?
3582.76 3588.20 "Андрей Акиньшин" Он, по-моему, был на спичере вот, на прошлой весны.
3588.20 3589.20 "Анатолий Кулаков" Значит, год назад.
3589.20 3597.48 "Анатолий Кулаков" Вот Стэн к нам снова возвращается, возвращается с отличным докладом, в котором он будет анализировать и рассказывать про принципы работы микро-ОРМ.
3597.48 3607.80 "Анатолий Кулаков" Если вам надоели большие интегрифреймворки или вам хочется оптимального чтения, наверняка вы смотрели в сторону микро-ОРМ и наверняка вам известно такое слово как даппер.
3607.80 3615.84 "Анатолий Кулаков" Вот даппер является таким граалем, эталоном идеальной микро-ОРМ-системы, которую каждый в свой проект пытается засунуть, если хочет каких-то оптимизаций.
3615.84 3617.16 "Анатолий Кулаков" Но по правде нет.
3617.16 3623.76 "Анатолий Кулаков" Вот Стэн вам как раз таки расскажет, что даппер это не самое лучшее решение, что есть подходы гораздо лучше, гораздо интереснее.
3623.76 3631.76 "Анатолий Кулаков" И лично от меня вот именно этот доклад, это просто эпицентр полезной информации на секунду времени.
3631.76 3633.84 "Анатолий Кулаков" То есть я столько от этого нового узнал.
3633.84 3640.04 "Анатолий Кулаков" Хотя в нашем проекте мы не общаемся с ОРМ-ами, не общаемся с этими фреймворками в общем.
3640.04 3641.28 "Анатолий Кулаков" Это от меня все далеко.
3641.28 3643.72 "Анатолий Кулаков" Но мы очень много работаем с данными.
3643.72 3650.04 "Анатолий Кулаков" Вот и принципы работы с данными, то как можно представлять данные, то как можно передавать, как с ними можно общаться.
3650.04 3654.44 "Анатолий Кулаков" Очень много интересных хаков, очень много интересных внутренностей кишочков Стэн вам расскажет.
3654.44 3655.68 "Анатолий Кулаков" Вот обязательно приходите.
3655.68 3659.80 "Анатолий Кулаков" Этот доклад не про секьюрити, несмотря на то, что Стэн у нас большой специалист про секьюрити.
3659.80 3661.84 "Анатолий Кулаков" Но по секьюрити у нас есть доклад.
3661.84 3663.52 "Анатолий Кулаков" Есть у нас доклад по секьюрити?
3663.52 3664.52 "Игорь Лабутин" Конечно.
3664.52 3668.16 "Игорь Лабутин" Миша Щербаков возвращается к нам в ДотНекс в качестве докладчика.
3668.16 3676.56 "Игорь Лабутин" И он нам расскажет про проблемы секьюрити с такой может быть неожиданной областью, а именно диссериализация.
3676.56 3683.48 "Игорь Лабутин" И это та штука, которой пользуется каждый разработчик, который принимает данные с внешнего мира.
3683.48 3685.80 "Игорь Лабутин" И казалось бы, что может пойти не так.
3685.80 3691.84 "Игорь Лабутин" Но на самом деле, как выяснится и как расскажет нам Миша, очень многое может пойти не так.
3691.84 3697.60 "Анатолий Кулаков" Да, на самом деле диссериализация, если так задуматься, это действительно очень опасная вещь.
3697.60 3703.08 "Анатолий Кулаков" И по сути вы на своем сервере запускаете пусть декларативный, но какой-то код.
3703.08 3706.40 "Анатолий Кулаков" То есть код, то есть структура, которую вы к вам прислали по сети.
3706.40 3715.72 "Анатолий Кулаков" И есть очень много хаков, как превратить эту структуру в действительно что-то исполняющее, какого-то исполняющегося зловреда.
3715.72 3720.56 "Анатолий Кулаков" Вот у Миши будет очень много и исторических примеров, как они пользовались, и перспективы развития.
3720.56 3724.56 "Анатолий Кулаков" И также он написал очень классную Тулу, которая помогает.
3724.56 3726.00 "Анатолий Кулаков" Хотя не буду рассказать.
3726.00 3727.72 "Анатолий Кулаков" Идите на доклад, не пожалеете.
3727.72 3730.36 "Анатолий Кулаков" Там очень много всего интересного по секьюрити.
3730.36 3733.28 "Анатолий Кулаков" Лично меня вдохновляет очень сильно Рафаэль Риалди.
3733.28 3740.32 "Анатолий Кулаков" В этот раз, это классный спикер, он с нами уже давно, я думаю вы точно его знаете, если бывали на предыдущих Next.
3740.32 3742.80 "Анатолий Кулаков" Но в этот раз он привез очень интересную тему.
3742.80 3744.20 "Анатолий Кулаков" Наконец-то он к нам привез Raspberry Pi.
3744.20 3748.16 "Анатолий Кулаков" То есть уже давно известно, что .NET крышку отформен, его можно запускать где угодно.
3748.16 3754.28 "Анатолий Кулаков" И даже есть в интернете какие-то демпки, где можно запускать .NET-овские приложения на ARM.
3754.28 3759.40 "Анатолий Кулаков" Но Рафаэль пошел чуть дальше, чем просто моргание лампочками на Raspberry Pi.
3759.40 3775.84 "Анатолий Кулаков" Он вам предложит создать полноценную систему, которая будет качать видеостриминг и расскажет, каким образом общаться с хардварой самой Raspberry Pi, каким образом на нее деплоить программы.
3775.84 3783.72 "Анатолий Кулаков" То есть полностью вам расскажет о том, как вот эту миленькую, дешевенькую коробочку превратить в полноценный дотный сервер и полноценно с ней общаться.
3783.72 3786.40 "Анатолий Кулаков" В общем, вот такого доклада я давно, в принципе, ждал.
3786.40 3790.04 "Игорь Лабутин" Это должно быть интересно и, самое главное, зрелищно.
3790.04 3804.88 "Игорь Лабутин" И еще мы в самом начале обсуждали, что у нас есть C#, иногда мы принимаем на конференции темы по F#, но двумя этими буквами языки мира .NET не ограничиваются.
3804.88 3806.60 "Игорь Лабутин" Теперь у нас есть еще и Q#.
3806.60 3811.76 "Игорь Лабутин" Что это такое, зачем он нам нужен и зачем вообще нам про него слушать?
3811.76 3813.64 "Игорь Лабутин" Не хватает ли нам C# и F#?
3813.64 3815.80 "Анатолий Кулаков" Q# - это язык для квантовых компьютеров.
3815.80 3821.12 "Игорь Лабутин" Хорошо, а если у меня нет квантового компьютера под рукой, зачем мне это?
3821.12 3822.12 "Игорь Лабутин" Может быть, это полезно?
3822.12 3827.40 "Анатолий Кулаков" Я надеюсь, что в мире существуют какие-то эмуляторы или… В общем, мы должны быть готовы к этому.
3827.40 3836.32 "Анатолий Кулаков" Я уверен, что квантовые компьютеры когда-нибудь захватят нашу жизнь и мы должны уже обеспечить программистами всю эту индустрию.
3836.32 3839.16 "Анатолий Кулаков" Кстати, Андрей, когда поддержка Q# будет в райтере?
3839.16 3842.28 "Анатолий Кулаков" Я слышал, что вас с F# довольно сильно доставали.
3842.28 3844.00 "Анатолий Кулаков" Вот вы его внедрили и расслабились.
3844.00 3845.00 "Анатолий Кулаков" А нет.
3845.00 3847.20 "Анатолий Кулаков" Когда Q# будет?
3847.20 3856.80 "Андрей Акиньшин" Во-первых, мы не расслабились, мы продолжаем совершенствовать F#, продолжаем делать клевые фичи.
3856.80 3865.08 "Андрей Акиньшин" Не знаю, вошел в релиз или нет, у нас сейчас появился кросс-языковой ренейн нормальный в F#.
3865.08 3878.20 "Андрей Акиньшин" То есть можно заренеймить в F# какую-то сущность, если она используется у вас во всяких C#-овых проектах, то она автоматом везде переименуется без rebuild.
3878.20 3888.84 "Андрей Акиньшин" То есть Visual Studio и всякие такие рефакторы, они, например, требуют build, чтобы все данные из вашей F#-программки улетели в сборочку.
3888.84 3895.36 "Андрей Акиньшин" И таких фичей очень-очень много, которых нужно реализовать для нормальной поддержки языка.
3895.36 3899.20 "Андрей Акиньшин" Но вокруг F# есть довольно большое комьюнити.
3899.20 3904.56 "Андрей Акиньшин" Не такое большое, конечно, как в C#-комьюнити, но все равно достаточно.
3904.56 3912.44 "Андрей Акиньшин" А вокруг Q#, ну там какое-то комьюнити есть, но оно довольно маленькое.
3912.44 3923.04 "Андрей Акиньшин" Я думаю, когда Q# наберет должный уровень популярности, то мы, возможно, даже подумаем о том, чтобы поддержать его.
3923.04 3933.84 "Андрей Акиньшин" Но сейчас нам остается сходить на докладик и понять, нужен ли Q# нам или не нужен, для общей редикции это в любом случае должно быть полезно.
3933.84 3944.00 "Андрей Акиньшин" И если окажется, что он нужен и полезен, развивать сообщество, делать какие-то библиотечки под него, еще что-то.
3944.00 3946.40 "Андрей Акиньшин" И как только так, мы это сразу поддержим.
3946.40 3952.28 "Анатолий Кулаков" Вообще на доклад можно сходить даже не только узнать про Q#, но и узнать про сами квантовые компьютеры.
3952.28 3963.88 "Анатолий Кулаков" Потому что концепция вот этого непредсказуемого состояния, когда непонятно в каком состоянии находится Qbit и ты не можешь предсказать, что там вообще, какие данные там есть, оно просто не укладывается в мою голову.
3963.88 3969.28 "Анатолий Кулаков" Поэтому это направление как техническое довольно интересно.
3969.28 3970.28 "Анатолий Кулаков" Обязательно посмотрите.
3970.28 3973.28 "Игорь Лабутин" Мне кажется, иногда это в принципе применимо и к нашим обычным программам.
3973.28 3978.00 "Игорь Лабутин" У меня тоже не всегда укладывается в голове, в каком состоянии у меня находятся даже наши обычные программы.
3978.00 3983.76 "Игорь Лабутин" Поэтому мне кажется, да, за этим будущее в любом случае будут у нас квантовые компьютеры или не будут.
3983.76 3988.40 "Анатолий Кулаков" Да, вот также у нас будет еще одна рок-звезда, без которой не мыслим никакой.
3988.40 3991.72 "Анатолий Кулаков" Это Дилан Битти, опять же, лидер наших рейтингов.
3991.72 3994.96 "Анатолий Кулаков" У него будет два доклада, в том числе Keynote.
3994.96 4000.36 "Анатолий Кулаков" Здесь бесполезно что-то говорить, потому что представление Дилана - это всегда великолепнейшее шоу.
4000.36 4003.20 "Анатолий Кулаков" Здесь вам нужно только смотреть, желательно вживую.
4003.20 4007.68 "Анатолий Кулаков" Вот, после своих докладов, как традиционно, Дилан даст концерт.
4007.68 4010.68 "Анатолий Кулаков" Естественно, не один, его поддержит целый бойсбэнд.
4010.68 4018.32 "Анатолий Кулаков" У нас там будет выступать Макс Аршинов, у нас будут там живые барабаны и, естественно, бессменный напарник Дилана Вагиф Абилов.
4018.32 4022.32 "Анатолий Кулаков" Вот, а если вам не нравятся концерты, чем можно заняться еще?
4022.32 4026.56 "Игорь Лабутин" Можно найти некоторых единомышленников и пойти обсудить животопящие
4026.56 4033.28 None темы из мира программирования. У нас будет две выделенных площадки для этого, которые мы называем бофами.
4033.28 4042.08 "Игорь Лабутин" И в этот раз одна из них будет посвящена будущему ASP.NET Core или просто ASP.NET.
4042.08 4047.08 "Игорь Лабутин" И там наверняка будут у нас какие-то известные спикеры представлены.
4047.08 4049.08 "Андрей Акиньшин" Кто у нас там будет?
4049.08 4051.08 "Андрей Акиньшин" Там точно будет Джон Галловей.
4051.08 4060.08 "Андрей Акиньшин" Это если вы не сможете поймать Джона Галловей в дискуссионной зоне после доклада, то обязательно идите на боф и ловите его там.
4060.08 4064.68 "Андрей Акиньшин" Я не знаю, приедет ли к нам Джон еще, ему довольно далеко лететь.
4064.68 4071.16 "Андрей Акиньшин" Поэтому стоит пользоваться возможностью и выпрашивать у него все, что вам интересно.
4071.16 4072.68 "Андрей Акиньшин" Алекс Тиссен точно будет.
4072.68 4073.68 "Андрей Акиньшин" Еще кто-то.
4074.68 4075.68 "Андрей Акиньшин" Дино Эспозито будет.
4075.68 4078.88 "Андрей Акиньшин" То есть люди, которые очень понимают в этой теме.
4078.88 4081.56 "Анатолий Кулаков" ASP.NET Core без Дино вообще не мысли.
4081.56 4083.24 "Анатолий Кулаков" Вот еще обещал подойти Риальди.
4083.24 4086.04 "Анатолий Кулаков" В общем, на Дино переберется очень веселая компания, чувствую.
4086.04 4087.04 "Андрей Акиньшин" А второй боф у нас про что?
4087.04 4088.04 "Андрей Акиньшин" Про .NET Core.
4088.04 4090.04 "Андрей Акиньшин" Я его как раз буду модерировать.
4090.04 4093.56 "Андрей Акиньшин" Этот боф про .NET Core, он всегда у нас самый популярный.
4093.56 4095.16 "Андрей Акиньшин" Мы его уже дважды делали.
4095.16 4097.36 "Андрей Акиньшин" В прошлый раз в Питере и в Москве.
4097.36 4110.76 "Андрей Акиньшин" Всегда набирается очень много народу и все очень активно делятся своими фейлсториями о том, как они что-то переводили на .NET Core или что-то пытались на нем развертывать.
4110.76 4124.40 "Андрей Акиньшин" Не потому, что там .NET Core плохой, а потому что очень много есть подводных камней и вещей, которые работают немножко не так, как они работали раньше в мире полного фреймворка.
4124.40 4134.80 "Андрей Акиньшин" То есть, нужно понимать, там не будет именно какого-то доклада, никто не будет рассказать, вот что .NET Core работает так и так.
4134.80 4150.44 "Андрей Акиньшин" Просто очень много людей будут делиться своим жизненным опытом, рассказывать про грандли и это просто бесценные знания во времена нашего bleeding edge, когда все постоянно меняется, выходит новая версия Core.
4150.44 4158.76 "Андрей Акиньшин" Если вы занимаетесь этим или собираетесь заниматься в будущем, то настоятельно рекомендую пойти послушать.
4158.76 4165.20 "Анатолий Кулаков" Ну и надо полагать, что конференции это в принципе не только доклады, не только можно слушать, но и огромная возможность пообщаться.
4165.20 4171.28 "Анатолий Кулаков" Кроме того, что у нас есть дискуссионные зоны, после каждого доклада вы можете выхватить спикера и вживую с ним поговорить.
4171.28 4178.88 "Анатолий Кулаков" У нас еще съезжаются люди по сути со всей России на эту конференцию, то есть очень много архитекторов, программистов, в том числе маркетологов.
4178.88 4182.32 "Анатолий Кулаков" Их тоже можно знакомиться прямо на конференции, можно общаться.
4182.32 4195.08 "Анатолий Кулаков" И в этом году, в принципе как и в Москве, .NET.RU сообщество делает специальный свой отдельный стенд, который будет работать в течение всех докладов.
4195.08 4200.56 "Анатолий Кулаков" То есть у нас будут свои слоты, у нас будет практически свой трек и этот трек нацелен в основном на общение.
4200.56 4206.36 "Анатолий Кулаков" То есть это круглые столы, это авторы библиотек, это какие-то дискуссии, споры и так далее.
4206.36 4211.48 "Анатолий Кулаков" Ищите расписание наших стендов в наших социальных сетях, там будет все довольно-таки весело и интересно.
4211.48 4212.48 "Анатолий Кулаков" Обещаю вам.
4212.48 4216.76 "Андрей Акиньшин" Еще нужно сказать, что в этом году у нас какое-то небывалое количество спонсоров.
4216.76 4219.20 "Андрей Акиньшин" У нас вот судя по сайту 16 штук.
4219.20 4226.20 "Андрей Акиньшин" И что самое клевое, что по-моему все эти спонсоры поставят свои стенды.
4226.20 4233.92 "Андрей Акиньшин" Я не знаю, куда они их поставят, где мы найдем столько места, но вроде план рассадки их у нас имеется.
4233.92 4248.84 "Андрей Акиньшин" И на этих стендах стоят, во-первых, любители пособирать разные клевые штуки, могут пройтись и собрать, я думаю, кучу всяких футболок, ручек, кружек и всякого такого, чтобы это раздаваться.
4248.84 4260.52 "Андрей Акиньшин" Но на мой взгляд самое ценное, что можно пообщаться с представителями разных хороших компаний, выпросить у них все, что вам интересно.
4260.52 4269.84 "Андрей Акиньшин" Для кого-то, возможно, это возможность найти новое место работы или разузнать про то, как там в других конторах.
4269.84 4274.12 "Андрей Акиньшин" Но для меня это все-таки в первую очередь общение.
4274.12 4278.00 "Андрей Акиньшин" То есть общения будет, по-моему, даже слишком много в этот раз.
4278.00 4283.00 "Анатолий Кулаков" Нужно уже делать три дня, а третий - оставлять чисто, вот ради того, чтобы всеми вместе пообщаться.
4283.00 4284.12 "Анатолий Кулаков" На пол и на круглые столы.
4284.12 4287.36 "Андрей Акиньшин" Я думаю, тогда сразу надо делать неделю.
4287.36 4295.44 "Андрей Акиньшин" Ты знаешь, такой недельный фестиваль, пять дней все активно работают, и потом еще выходные, чтобы отдохнуть.
4295.44 4296.80 "Андрей Акиньшин" Да, надо обсудить эту тему.
4296.80 4298.52 "Анатолий Кулаков" Ну что, наверное, пора закругляться.
4298.52 4308.48 "Анатолий Кулаков" Как вы поняли, наши конференции - это не только какие-то доклады, но еще и безумная эфирия из общений, из подарков, из спонсоров, из новых знакомств и так далее.
4308.48 4312.32 "Анатолий Кулаков" Это такая отдельная полноценная жизнь.
4312.32 4318.68 "Анатолий Кулаков" Мы попытались осветить те доклады, которые были интересны нам, которые мы надеемся понравятся вам.
4318.68 4334.24 "Анатолий Кулаков" Естественно, наше мнение может не совпадать с мнением 100% аудитории, поэтому читайте описание, смотрите на теги, которые мы попытались для вас составить, смотрите на биографию авторитетных спикеров, можно посмотреть их предыдущие работы на YouTube.
4334.24 4340.16 "Анатолий Кулаков" В общем, старайтесь подобрать доклады под себя, и я уверен, что каждый из вас сможет это сделать.
4340.16 4345.72 "Анатолий Кулаков" Есть доклады, которые обязательно кому-то понравятся, и мне кажется, таких большинство.
4345.72 4355.28 "Игорь Лабутин" Кроме того, когда вы будете уже на площадке конференции, вы можете найти кого-то из программного комитета и порасспрашивать его еще раз о интересующих вас докладах.
4355.28 4358.00 "Игорь Лабутин" Мы обязательно все расскажем, всем поделимся и порекомендуем.
4358.00 4362.72 "Андрей Акиньшин" Знаешь, я, наверное, придумал стратегию для себя в этом году.
4362.72 4366.76 "Андрей Акиньшин" Я, наверное, вообще не буду ходить на доклады, посмотрю потом все в записи.
4366.76 4386.64 "Андрей Акиньшин" А вот два дня конференции я просто пытаюсь найти всех тех людей, которые мне интересны, и пообщаться на те темы, на которые офлайн, к сожалению, общаться довольно сложно или они мне просто не ответят, потому что им некогда.
4386.64 4389.04 "Андрей Акиньшин" Для меня это все-таки больше про какой-то нетворкинг.
4389.04 4402.40 "Андрей Акиньшин" Может, я на один-два доклада схожу, а так все записи будут, поэтому если у кого-то на что-то сходить не получится, то можно потом посмотреть дома в комфортных условиях.
4402.40 4404.52 "Анатолий Кулаков" Ну, а на этом разрешите откланяться.
4404.52 4417.48 "Анатолий Кулаков" Если вам что-то понравилось или не понравилось, находите нас в социальных сетях, находите нас на конференции, расскажите про то, насколько вам был полезен этот подкаст или не полезен, и что бы вы хотели видеть о нем в будущем.
4417.48 4418.48 "Анатолий Кулаков" Всем пока!
4418.48 4419.48 "Анатолий Кулаков" Всем пока!
