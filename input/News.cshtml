Title: Новости
Description: Самые важные новости, лучшие статьи и авторитетные мнения мира .NET
Image: images/dotnetru-banner-1200x630.png
Intro: Самые важные новости, лучшие статьи и авторитетные мнения мира .NET.

FeedbackTitle: Предложить новость
FeedbackDescription: Друзья, если вы обнаружили интересную статью, новость, видео из мира .NET, то вы всегда можете предложить её для публикации в нашем сообществе.
FeedbackSubject: Новость для DotNet.Ru
FeedbackFromName: Ваше имя (для указания авторства)
FeedbackFromEmailHide: True
FeedbackMessage: Ссылка и описание (не обязательно)
---
<section id="wrapper">

  <!-- Content -->
  <div class="wrapper">
    <div class="inner">
      <section>

@foreach (var doc in Documents["News"].OrderByDescending(d => d.DateTime("PublishDate")))
{
    var hasAuthor = doc.ContainsKey("Author") && doc.ContainsKey("AuthorImage") && doc.ContainsKey("AuthorDescription");

        <article class="news">
          <h3 class="major">@Encode(doc.String("Title"))</h3>
          <div class="image-container">
            <span class="image left"><img src="@doc.String("Image")" alt="" /></span>
@Html.Raw(doc.Content)
            <p class="contributor icon fa-bullhorn"><a href="#">@Encode(doc.String("Publisher"))</a>, @FormatDate(doc.DateTime("PublishDate"))</p>
          </div>
          <ul class="actions">
    @foreach (var tag in doc.List<string>("Tags"))
    {
            <li><a href="#" class="button small">@Encode(tag)</a></li>
    }
            <li><a href="@doc.String("Link")" target="_blank" class="special">Подробнее</a></li>
          </ul>
    @if (hasAuthor)
    {
          <h4>@Encode(doc.String("Author"))</h4>
          <div class="image-container">
            <p>
              <span class="image right"><img src="@doc.String("AuthorImage")" alt="" /></span>
@Encode(doc.String("AuthorDescription"))
            </p>
          </div>
    }
        </article>

}

      </section>
    </div>
  </div>
</section>

@functions {

    static Microsoft.AspNetCore.Html.IHtmlContent FormatDate(DateTime date)
    {
        var culture = new System.Globalization.CultureInfo("ru-RU");
        return Encode(date.ToString("D", culture));
    }

    // BUG Workaround: Non-english characters are encoded
    // https://github.com/aspnet/HttpAbstractions/issues/315
    static Microsoft.AspNetCore.Html.IHtmlContent Encode(string value)
    {
        // Manual encode
        var encoded = System.Net.WebUtility.HtmlEncode(value);
        // Return as a raw string
        return new Microsoft.AspNetCore.Html.HtmlString(encoded);
    }

}
