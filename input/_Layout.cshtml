<!DOCTYPE HTML>
<html lang="ru">
  <head>
@{
    string idRaw = Requare("Id");
    var id = Encode(idRaw);
    string titleRaw = Requare("Title");
    var title = Encode($"DotNet.Ru{(String.IsNullOrWhiteSpace(titleRaw) ? String.Empty : " " + titleRaw)}");
    var description = RequareValue("Description");
    var intro = RequareValue("Intro");
    string image = Requare("Image");
    image = Context.GetLink(image, true);
    string url = Context.GetLink(Document, true);
    string rootUrl = Context.GetLink();
}
    <title>@title</title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, user-scalable=no" />
    <link rel="stylesheet" href="assets/css/main.css" />
    <link rel="stylesheet" href="assets/css/main2.css" />
    <noscript><link rel="stylesheet" href="assets/css/noscript.css" /></noscript>

    <!-- Favicons (https://RealFaviconGenerator.net/) -->
    <link rel="apple-touch-icon" sizes="180x180" href="icons/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="icons/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="icons/favicon-16x16.png">
    <link rel="manifest" href="icons/manifest.json">
    <link rel="mask-icon" href="icons/safari-pinned-tab.svg" color="#68217a">
    <link rel="shortcut icon" href="icons/favicon.ico">
    <meta name="apple-mobile-web-app-title" content="DotNet.Ru">
    <meta name="application-name" content="DotNet.Ru">
    <meta name="msapplication-config" content="/icons/browserconfig.xml">
    <meta name="theme-color" content="#68217a">
    <!-- /Favicons -->

    <meta property="og:title" content="@title">
    <meta property="og:type" content="website">
    <meta property="og:url" content="@url">
    <meta property="og:image" content="@image">
    <meta property="og:image:type" content="image/png">
    <meta property="og:image:width" content="1200">
    <meta property="og:image:height" content="630">
    <meta property="og:image:alt" content="@description">
    <meta property="og:description" content="@description">
    <meta property="og:site_name" content="DotNet.Ru">
    <meta property="og:locale" content="ru_RU">

    <meta name="twitter:title" content="@title">
    <meta name="twitter:description" content="@description">
    <meta name="twitter:card" content="summary_large_image">
    <meta name="twitter:site" content="@@DotNetRu">
    <meta name="twitter:creator" content="@@DotNetRu">
    <meta name="twitter:image" content="@image">

  </head>
  <body class="is-preload">

    <div id="page-wrapper">

      <!-- Header -->
      <header id="header" class="alt">
        <h1><a href="@rootUrl">DotNet.Ru</a></h1>
        <nav>
          <a href="#menu">Меню</a>
        </nav>
      </header>

@{
    var menuItems = new List<MenuItem>
    {
        //new MenuItem("news", "Новости"),
        new MenuItem("communities", "Сообщества"),
        new MenuItem("projects", "Проекты"),
        //new MenuItem("speakers", "Докладчики"),
        //new MenuItem("friends", "Друзья")
    };
}
      <!-- Horizontal Menu -->
      <nav id="hor-menu">
        <div class="inner">
          <ul class="actions fit small">
@foreach (var menuItem in menuItems)
{
    var itemSelected = menuItem.Id == idRaw ? " primary" : String.Empty;

            <li><a href="@menuItem.Id" class="button fit small@(itemSelected)">@menuItem.Title</a></li>
}
          </ul>
        </div>
      </nav>

      <!-- Popup Menu -->
      <nav id="menu">
        <div class="inner">
          <h2>DotNet.Ru</h2>
          <ul class="links">
@foreach (var menuItem in menuItems)
{
            <li><a href="@menuItem.Id">@menuItem.Title</a></li>
}
          </ul>
          <a href="#" class="close">Закрыть</a>
        </div>
      </nav>

      <!-- Banner -->
      <section id="banner">
        <div class="inner">
          <div class="logo"><img class="icon" src="images/dotnetru-squared-logo.svg" alt="" /></div>
          <h2>@title</h2>
          <p>@intro</p>
        </div>
      </section>

@RenderBody()

      <!-- Footer -->
      <section id="footer">
        <div class="inner">

@{
    var feedbackTitle = Encode(Model.String("FeedbackTitle", "Связаться"));
    var feedbackDescription = Encode(Model.String("FeedbackDescription", "Пишите по любым вопросам и предложениям. Мы сами перенаправим ваше послание нужному адресату."));
    var feedbackSubject = Encode(Model.String("FeedbackSubject", "Сайт DotNet.Ru"));
    var feedbackFromName = Encode(Model.String("FeedbackFromName", "Имя"));
    var feedbackFromEmail = Encode(Model.String("FeedbackFromEmail", "Обратный email адрес для ответа"));
    bool feedbackFromEmailHide = Model.Bool("FeedbackFromEmailHide", false);
    var feedbackMessage = Encode(Model.String("FeedbackMessage", "Сообщение"));
}
          <!-- Feedback -->
          <h2 class="major">@feedbackTitle</h2>
          <p>@feedbackDescription</p>
          <form method="POST" action="https://formspree.io/hi@DotNet.Ru">
            <div class="fields">
              <input type="hidden" name="_subject" value="@feedbackSubject" />
              <input type="hidden" name="_format" value="plain" />
              <input type="hidden" name="_next" value="@url" />
              <input type="hidden" name="_language" value="ru" />
              <input type="text" name="_gotcha" style="display:none" />
              <div class="field">
                <label for="name">@feedbackFromName</label>
                <input type="text" name="name" id="name" />
              </div>
@if (!feedbackFromEmailHide)
{
              <div class="field">
                <label for="email">@feedbackFromEmail</label>
                <input type="email" name="email" id="email" />
              </div>
}
              <div class="field">
                <label for="message">@feedbackMessage</label>
                <textarea name="message" id="message" rows="4"></textarea>
              </div>
            </div>
            <ul class="actions">
              <li><input type="submit" value="Отправить сообщение" /></li>
            </ul>
          </form>

          <!-- Contacts -->
          <ul class="contact">
            <li class="fa-envelope"><a href="mailto:hi@DotNet.Ru">Hi@DotNet.ru</a></li>
            <li class="fa-vk"><a href="https://vk.com/DotNetRu" target="_blank">vk.com/DotNetRu</a></li>
            <li class="fa-twitter"><a href="https://twitter.com/DotNetRu" target="_blank">twitter.com/DotNetRu</a></li>
            <li class="fa-paper-plane"><a href="https://t.me/DotNetRu" target="_blank">t.me/DotNetRu</a></li>
            <li class="fa-youtube"><a href="https://www.youtube.com/DotNetRu" target="_blank">youtube.com/DotNetRu</a></li>
            <li class="fa-github"><a href="https://github.com/DotNetRu" target="_blank">github.com/DotNetRu</a></li>
            <li class="fa-apple"><a href="https://itunes.apple.com/us/app/dotnetru/id1293895734" target="_blank">Приложение под iOS</a></li>
            <li class="fa-android"><a href="https://play.google.com/store/apps/details?id=com.dotnetru.droid" target="_blank">Приложение под Android</a></li>
          </ul>

          <!-- Copyright -->
          <ul class="copyright">
            <li>&copy; <a href="@rootUrl">DotNet.Ru</a></li>
<!--
Solid State by HTML5 UP
html5up.net | @@ajlkn
Free for personal and commercial use under the CCA 3.0 license (html5up.net/license)
-->
            <li>Design: <a href="https://html5up.net" target="_blank">HTML5 UP</a></li>
          </ul>
        </div>
      </section>

    </div>

    <!-- Scripts -->
    <script src="assets/js/jquery.min.js"></script>
    <script src="assets/js/jquery.scrollex.min.js"></script>
    <script src="assets/js/browser.min.js"></script>
    <script src="assets/js/breakpoints.min.js"></script>
    <script src="assets/js/util.js"></script>
    <script src="assets/js/main.js"></script>

    <!-- Yandex.Metrika counter -->
    <script type="text/javascript" >
      (function (d, w, c) {
          (w[c] = w[c] || []).push(function() {
              try {
                  w.yaCounter47461420 = new Ya.Metrika2({
                      id:47461420,
                      clickmap:true,
                      trackLinks:true,
                      accurateTrackBounce:true
                  });
              } catch(e) { }
          });

          var n = d.getElementsByTagName("script")[0],
              s = d.createElement("script"),
              f = function () { n.parentNode.insertBefore(s, n); };
          s.type = "text/javascript";
          s.async = true;
          s.src = "https://mc.yandex.ru/metrika/tag.js";

          if (w.opera == "[object Opera]") {
              d.addEventListener("DOMContentLoaded", f, false);
          } else { f(); }
      })(document, window, "yandex_metrika_callbacks2");
    </script>
    <noscript><div><img src="https://mc.yandex.ru/watch/47461420" style="position:absolute; left:-9999px;" alt="" /></div></noscript>
    <!-- /Yandex.Metrika counter -->

    <!-- Global site tag (gtag.js) - Google Analytics -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-113122190-1"></script>
    <script>
      window.dataLayer = window.dataLayer || [];
      function gtag(){dataLayer.push(arguments);}
      gtag('js', new Date());
      gtag('config', 'UA-113122190-1');
    </script>
    <!-- /Global site tag (gtag.js) - Google Analytics -->

@RenderSection("Script", false)

  </body>
</html>

@functions {

    class MenuItem
    {
        public readonly string Id;
        public readonly Microsoft.AspNetCore.Html.IHtmlContent Title;

        public MenuItem(string id, string title)
        {
            Id = id;
            Title = Encode(title);
        }
    }

    string Requare(string key)
    {
        var value = Model.String(key);
        if (value == null)
        {
            throw new ApplicationException($"Can't found {key} metadata");
        }
        return value;
    }

    Microsoft.AspNetCore.Html.IHtmlContent RequareValue(string key)
    {
        var value = Requare(key);
        return Encode(value);
    }

    // BUG Workaround: Non-english characters are encoded
    // https://github.com/aspnet/HttpAbstractions/issues/315
    static Microsoft.AspNetCore.Html.IHtmlContent Encode(string value)
    {
        // Manual encode
        var encoded = System.Net.WebUtility.HtmlEncode(value);
        // Return as a raw string
        return new Microsoft.AspNetCore.Html.HtmlString(encoded);
    }

}
