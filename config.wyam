#n Wyam.Markdown
#n Wyam.Razor
#n Wyam.Yaml
#n Wyam.Html
#n Wyam.Feeds

// Normalize the culture for the examples so they produce the same output regardless of system culture
System.Globalization.CultureInfo.DefaultThreadCurrentCulture = System.Globalization.CultureInfo.CreateSpecificCulture("ru-RU");
//System.Text.Encodings.Web.HtmlEncoder.Default = new System.Text.Encodings.Web.HtmlEncoder(UnicodeRanges.All);

Settings[Keys.Host] = "dotnet.ru";
Settings[Keys.LinksUseHttps] = false;

//////////////////////////////////////////////////////////////////////
// Pipelines
//////////////////////////////////////////////////////////////////////

Pipelines.Add("Pages",
    ReadFiles("{!_,}*.cshtml"),
    FrontMatter(Yaml()),
    Meta("Id", (doc, ctx) => doc.Source.FileNameWithoutExtension.FullPath.ToLower()),
    Meta(Keys.RelativeFilePath, (doc, ctx) => doc.String("Id") + ".html"),
    Razor()
        .WithLayout("/_Layout.cshtml"),
    WriteFiles()
);

Pipelines.Add("Resources",
    CopyFiles("Resources/**")
        .To((source, dest) => { return dest.Path.FullPath.Replace("/Resources/", "/"); })
);

/*
Pipelines.Add("News",
    ReadFiles("News/*.cshtml"),
    FrontMatter(Yaml()),
    //Content(String.Empty),
    Meta("Id", (doc, ctx) => doc.Source.Directory.Name.ToLower()),
    Meta(Keys.RelativeFilePath, (doc, ctx) => doc.String("id") + ".html"),
    Razor()
        .WithLayout("/_Layout.cshtml"),
    WriteFiles(),
    Branch(
        // Put the GenerateFeeds module inside a Branch module so that the feed
        // documents don't get added to the set of output documents for this pipeline
        GenerateFeeds(),
        WriteFiles()
    )
);

Pipelines.Add("BuildSitemap",
    Documents(@ctx.Documents),
    Sitemap(),
    WriteFiles((d, c) => "sitemap.xml")
);
*/
